
using System;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Web.UI;
using static KC__LID_EXT.BackEnd.Dump.SDK.UBrgUIManager;

/// <summary>
///  Last Game Update (SteamDB Link Below) | Date: 25 July 2024 | Build: 15046130
///  https://steamdb.info/app/794600/patchnotes/
/// </summary>
namespace KC__LID_EXT.BackEnd.Dump
{
    internal class SDK
    {
        public  class Base
        { 
            //------------------------------------------------------------------------------
            public const string ProcName = "BrgGame-Steam.exe";
            //------------------------------------------------------------------------------
            public const string ModuleBase = "BrgGame-Steam.exe+";
            //------------------------------------------------------------------------------
        }
        public class Offsets : Base
        {
            // Inheritance: Base
            // CUSTOM BASE - USING! LAST UPDATED 3/30/23
            //------------------------------------------------------------------------------
            public const string GUBrgUIManager = ModuleBase + "0x0F242EE0,"; // UPDATE ME IF TRAINER BREAKS!!!!!
            // CHEAT ENGINE AOB "86 64 7C 00 00 48 8B 88" - search me to get new base offset!
            //------------------------------------------------------------------------------
        }
        // Unreal Engine Classes - UE3 (Based off old Dumps.Host info, current offsets for most)
        public class UBrgUIManagerBase : Offsets
        {
            // Inheritance: UObject
            public const string mScreenMode = GUBrgUIManager + "0x60"; // EScreenMode
            public const string mRenderProcessType = GUBrgUIManager + "0x61"; // EBrgUIManager_RenderProcessType
            public const string mBuySortType = GUBrgUIManager + "0x62"; // EBrgUIManager_SortType
            public const string mCoinLockerSortType = GUBrgUIManager + "0x63"; // EBrgUIManager_SortType
            public const string mPossessionItemSortType = GUBrgUIManager + "0x64"; // EBrgUIManager_SortType
            public const string mDeathBagSortType = GUBrgUIManager + "0x65"; // EBrgUIManager_SortType
            public const string mTopActiveAccessType = GUBrgUIManager + "0x66"; // EBrgUIManager_AccessType
            public const string mEnableAccessFlag0x31 = GUBrgUIManager + "0x67"; // char
            public const string mInputMouseTemp = GUBrgUIManager + "0x98"; // EGHM_MouseDef
            public const string mGameInfoNativeBase = GUBrgUIManager + "0x9c,"; // ABrgGameInfoNativeBase*
            public const string mHUDBase = GUBrgUIManager + "0xa4,"; // ABrgHUDBase*
            public const string mMaskScreenRenderTarget0x3 = GUBrgUIManager + "0xac"; // UTextureRenderTarget2D*
            public const string mStringLanguage = GUBrgUIManager + "0xc4"; // FString
            public const string mFontConstParamTestString = GUBrgUIManager + "0xd4"; // FString
            public const string mFontConstParamTestString2 = GUBrgUIManager + "0xe4"; // FString
            public const string mFontConstParamSets0x4 = GUBrgUIManager + "0xf4"; // FBrgUIFont_ConstParam_Set
            public const string mFontConstParam = GUBrgUIManager + "0x1814"; // UBrgUIParamEditMenuParam*
            public const string mFontConstParamBackup0x1f = GUBrgUIManager + "0x181c"; // int32_t
            public const string mImageChar0x2 = GUBrgUIManager + "0x1898"; // UBrgUIImage*
            public const string mConstParam = GUBrgUIManager + "0x18a8"; // UBrgUIParamEditMenuParam*
            public const string mImageMapInfo = GUBrgUIManager + "0x18b0"; // UBrgUIImageMapInfo*
            public const string mItemIconManager = GUBrgUIManager + "0x18b8"; // UBrgUIResource_ItemIconManager*
            public const string mTeamEmblemImageManager = GUBrgUIManager + "0x18c0"; // UBrgUIResource_TeamEmblemImageManager*
            public const string mTeamEmblemIconImageManager = GUBrgUIManager + "0x18c8"; // UBrgUIResource_TeamEmblemIconImageManager*
            public const string mPartTypeIconManager = GUBrgUIManager + "0x18d0"; // UBrgUIResource_PartTypeIconManager*
            public const string mQuestPictureManager = GUBrgUIManager + "0x18d8"; // UBrgUIResource_QuestPictureManager*
            public const string mEnmaMenuImageManager = GUBrgUIManager + "0x18e0"; // UBrgUIResource_EnmaMenuImageManager*
            public const string mResourceFighterIcon = GUBrgUIManager + "0x18e8"; // UBrgUIResource_FighterIcon*
            public const string mFortIconImageManager = GUBrgUIManager + "0x18f0"; // UBrgUIResource_FortIconImageManager*
            public const string mMaskScreenInvSizeX = GUBrgUIManager + "0x18f8"; // float
            public const string mMaskScreenInvSizeY = GUBrgUIManager + "0x18fc"; // float
            public const string mCommonRenderTarget = GUBrgUIManager + "0x1900"; // UTextureRenderTarget2D*
            public const string mCommonRenderTargetImage = GUBrgUIManager + "0x1908"; // UBrgUIImage*
            public const string mParamEditMenu = GUBrgUIManager + "0x1910"; // UBrgUIParamEditMenu*
            public const string mDisableDrawArea = GUBrgUIManager + "0x1918"; // int32_t
            public const string mScreenWidth = GUBrgUIManager + "0x191c"; // int32_t
            public const string mScreenHeight = GUBrgUIManager + "0x1920"; // int32_t
            public const string mScreenWidthHalf = GUBrgUIManager + "0x1924"; // int32_t
            public const string mScreenHeightHalf = GUBrgUIManager + "0x1928"; // int32_t
            public const string mNoneDrawLeftWidth = GUBrgUIManager + "0x192c"; // int32_t
            public const string mNoneDrawRightWidth = GUBrgUIManager + "0x1930"; // int32_t
            public const string mNoneDrawTopHeight = GUBrgUIManager + "0x1934"; // int32_t
            public const string mNoneDrawBottomHeight = GUBrgUIManager + "0x1938"; // int32_t
            public const string mNowAdjustX = GUBrgUIManager + "0x193c"; // float
            public const string mNowAdjustY = GUBrgUIManager + "0x1940"; // float
            public const string mDebugFont = GUBrgUIManager + "0x1944"; // UBrgUIFont*
            public const string mDebugFontJP = GUBrgUIManager + "0x194c"; // UBrgUIFont*
            public const string mFont0x40 = GUBrgUIManager + "0x1954"; // UBrgUIFont*
            public const string mFont_Add0x40 = GUBrgUIManager + "0x1b54"; // UBrgUIFont*
            public const string mFont_UseMask0x40 = GUBrgUIManager + "0x1d54"; // UBrgUIFont*
            public const string mFont_UseMask_OneMinus0x40 = GUBrgUIManager + "0x1f54"; // UBrgUIFont*
            public const string mbKeyCtrol = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mbTouchPadEdgeRight = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mBlackScreenVisible = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mHideNetworkDebugInfo = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mAlwaysHUDVisible = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mBackgroundVisible = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mbTouchPadEdgeLeft = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mbTouchPadPressRight = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mbTouchPadPressLeft = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mbTouchPadPress = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mSetupDbNoneId = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mFontLoadEnd = GUBrgUIManager + "0x2154"; // uint32_t : 1
            public const string mFontLoadState = GUBrgUIManager + "0x2158"; // int32_t
            public const string mFontPaths0xa = GUBrgUIManager + "0x215c"; // FString
            public const string mFonts0xa = GUBrgUIManager + "0x21fc"; // UFont*
            public const string mDbPtNoneHeadId = GUBrgUIManager + "0x224c"; // FString
            public const string mDbPtNoneArmId = GUBrgUIManager + "0x225c"; // FString
            public const string mDbPtNoneBodyId = GUBrgUIManager + "0x226c"; // FString
            public const string mDbPtNoneLegsId = GUBrgUIManager + "0x227c"; // FString
            public const string mGamePadIconImageBase = GUBrgUIManager + "0x228c"; // UBrgUIImageBase*
            public const string mGamePadIconSrcGuide = GUBrgUIManager + "0x2294"; // UBrgUIImage*
            public const string mGamePadIconImage0x15 = GUBrgUIManager + "0x229c"; // UBrgUIImage*
            public const string mGamePadIconImagePath = GUBrgUIManager + "0x2344"; // FString
            public const string mNowInput = GUBrgUIManager + "0x2354"; // int32_t
            public const string mEdgeInput = GUBrgUIManager + "0x2358"; // int32_t
            public const string mRepeatInput = GUBrgUIManager + "0x235c"; // int32_t
            public const string mInputPhase0x10 = GUBrgUIManager + "0x2360"; // int32_t
            public const string mInputTime0x10 = GUBrgUIManager + "0x23a0"; // float
            public const string mInputTime20x10 = GUBrgUIManager + "0x23e0"; // float
            public const string mTouchPadInput = GUBrgUIManager + "0x2420"; // int32_t
            public const string mTouchPadEdgeInput = GUBrgUIManager + "0x2424"; // int32_t
            public const string mTouchOld0x5 = GUBrgUIManager + "0x2428"; // FVector
            public const string mTouchOld20x5 = GUBrgUIManager + "0x2464"; // FVector
            public const string mTouchOld30x5 = GUBrgUIManager + "0x24a0"; // FVector
            public const string mNowInputIgnoreStick = GUBrgUIManager + "0x24dc"; // int32_t
            public const string mEdgeInputIgnoreStick = GUBrgUIManager + "0x24e0"; // int32_t
            public const string mRepeatInputIgnoreStick = GUBrgUIManager + "0x24e4"; // int32_t
            public const string mInputPhaseIgnoreStick0x10 = GUBrgUIManager + "0x24e8"; // int32_t
            public const string mInputTimeIgnoreStick0x10 = GUBrgUIManager + "0x2528"; // float
            public const string mInputTime2IgnoreStick0x10 = GUBrgUIManager + "0x2568"; // float
            public const string mPausePointDbId = GUBrgUIManager + "0x25a8"; // FString
            public const string mBlackScreenAlphaSpeed = GUBrgUIManager + "0x25b8"; // float
            public const string mBlackScreenAlpha = GUBrgUIManager + "0x25bc"; // float
            public const string mBackgroundColor = GUBrgUIManager + "0x25c0"; // FColor
            public const string mBackgroundColorPM = GUBrgUIManager + "0x25c4"; // FParamMoveData
            public const string mBackgroundColorAlphaPM = GUBrgUIManager + "0x2630"; // FParamMoveData
            public const string mBackgroundVisibleAlpha = GUBrgUIManager + "0x269c"; // FParamMoveData
            public const string mNetworkAnimCounter = GUBrgUIManager + "0x2708"; // float
            public const string mMenuStartSC = GUBrgUIManager + "0x270c"; // USoundCue*
            public const string mPopUpOKSC = GUBrgUIManager + "0x2714"; // USoundCue*
            public const string mAccessSC = GUBrgUIManager + "0x271c"; // USoundCue*
            public const string mSystemWindow_Message_OpenSoundCue = GUBrgUIManager + "0x2724"; // USoundCue*
            public const string mSystemWindow_YesNo_OpenSoundCue = GUBrgUIManager + "0x272c"; // USoundCue*
            public const string mMenuSelectSC = GUBrgUIManager + "0x2734"; // USoundCue*
            public const string mMenuOKSC = GUBrgUIManager + "0x273c"; // USoundCue*
            public const string mMenuCancelSC = GUBrgUIManager + "0x2744"; // USoundCue*
            public const string mMenuNGSC = GUBrgUIManager + "0x274c"; // USoundCue*
            public const string mMenuOutSC = GUBrgUIManager + "0x2754"; // USoundCue*
            public const string mMenuTrash = GUBrgUIManager + "0x275c"; // USoundCue*
            public const string mSoundManager = GUBrgUIManager + "0x2764"; // UGHM_SoundManager*
            public const string mPlaySoundCueArray = GUBrgUIManager + "0x276c"; // TArray<FBrgUIManagerSoundInfo>
            public const string mFNameNone = GUBrgUIManager + "0x277c"; // FName
            public const string mFNameDeathOpacity = GUBrgUIManager + "0x2784"; // FName
            public const string mFNameOutlineWidth = GUBrgUIManager + "0x278c"; // FName
            public const string mFNameZ_Scale = GUBrgUIManager + "0x2794"; // FName
            public const string mFNameZ_Scale_Intensity = GUBrgUIManager + "0x279c"; // FName
            public const string mFNameDeathColor = GUBrgUIManager + "0x27a4"; // FName
            public const string mFNamePassiveState = GUBrgUIManager + "0x27ac"; // FName
            public const string mCameraPos = GUBrgUIManager + "0x27b4"; // FVector
            public const string mCameraTargetPos = GUBrgUIManager + "0x27c0"; // FVector
            public const string mNetworkResponseEndsp = GUBrgUIManager + "0x27cc"; // UBrgNetworkResponseEndsp*
            public const string mInputKeyTemp = GUBrgUIManager + "0x27d4"; // FString
        }
        public class UBrgUIManager: UBrgUIManagerBase
        {
            #region UBrguIManager Class
            // Inheritance: UBrgUIManagerBase > UObject
            public const string mGameInfo = GUBrgUIManager + "0x27e4,"; // ABrgGameInfo*
            public const string mGameInfoNative = GUBrgUIManager + "0x27ec,"; // ABrgGameInfoNative*
            public const string mHUD = GUBrgUIManager + "0x27f4,"; // ABrgHUD*
            public const string mFontRender = GUBrgUIManager + "0x27fc,"; // UBrgUIFontRender*
            public const string mUserData = GUBrgUIManager + "0x2804,"; // UBrgUserData*
            public const string mCamera = GUBrgUIManager + "0x280c,"; // ABrgCamera*
            public const string mDatabase = GUBrgUIManager + "0x2814,"; // UBrgDatabase*
            public const string mbActive = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mHierarchyMapSetArea = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mMushroomEffectVisible = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mOptionMenuDeathBagDisable = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mOptionMenuDeathMetalDisable = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mOptionMenuEmmaTyouDisable = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mVIPStatusVisible = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mUserPartResearchResetNewInfo = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mMenuCancelRequest = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mPlayerChangeBenchAccessState = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mDropItemAccess = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mPartMainAndSubShop_CancelFirstVoice = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mOnMemoryResource_Hub_AlwaysLoad = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mOnMemoryResource_Hub_AlwaysLoad_Initialize = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mbIsOnMemoryResource_Hub_Loading = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mTestFlag = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mTestSoundCueLoadStart = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mTestCharaActor_Base_Init = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mTestPauseOnOff = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mPackageLoadStateDrawInitialize = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mDebugReadTextureRequest = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mInsuranceMenu_LastClosedBySuspendException = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mbUISizeUpdate = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mbIsButtonGuideImage = GUBrgUIManager + "0x281c"; // uint32_t : 1
            public const string mEffectCharaManager = GUBrgUIManager + "0x2820,"; // UBrgUIEffectCharaManager*
            public const string mEffectStringManager = GUBrgUIManager + "0x2828,"; // UBrgUIEffectStringManager*
            public const string m3DNumberManager = GUBrgUIManager + "0x2830,"; // UBrgUI3DNumberManager*
            public const string m3DStatusManager = GUBrgUIManager + "0x2838,"; // UBrgUI3DStatusManager*
            public const string mParticleManager = GUBrgUIManager + "0x2840,"; // UBrgUIParticleManager*
            public const string mFloorTitle = GUBrgUIManager + "0x2848,"; // UBrgUIHUD_FloorTitle*
            public const string mDropItemManager = GUBrgUIManager + "0x2850,"; // UBrgDropItemManager*
            public const string mMeshOutlineManager = GUBrgUIManager + "0x2858,"; // UBrgMeshOutlineManager*
            public const string mDropItemTagManager = GUBrgUIManager + "0x2860,"; // UBrgUIDropItemTagManager*
            public const string mPanelManager2 = GUBrgUIManager + "0x2868,"; // UBrgUIMenuPart_PanelManager2*
            public const string mMiniMapManager = GUBrgUIManager + "0x2870,"; // UBrgUIMiniMapManager*
            public const string mSkillStickerOutLineInfo = GUBrgUIManager + "0x2878,"; // UBrgUISkillStickerOutLineInfo*
            public const string mSkillStickerCollisionInfo = GUBrgUIManager + "0x2880,"; // UBrgUISkillStickerCollisionInfo*
            public const string mNetworkManager = GUBrgUIManager + "0x2888,"; // TScriptInterface<Class>
            public const string mFortAssaultButtonManager = GUBrgUIManager + "0x2898,"; // UBrgFortAssaultButtonManager*
            public const string mUITutorialBalloonInfo = GUBrgUIManager + "0x28a0,"; // UBrgUITutorialBalloonInfo*
            public const string mInGameBrowser = GUBrgUIManager + "0x28a8,"; // UBrgInGameBrowserInterface*
            public const string mBlackPlaneActor = GUBrgUIManager + "0x28b0,"; // ABrgUIActor_BlackPlane*
            public const string mActorCounter = GUBrgUIManager + "0x28b8"; // float
            public const string mDevilPktBkActor = GUBrgUIManager + "0x28bc,"; // ABrgUIActor_DevilPocketBook*
            public const string mSketchBookActor = GUBrgUIManager + "0x28c4,"; // ABrgUIActor_SketchBook*
            public const string mSketchBookMasked = GUBrgUIManager + "0x28cc,"; // ABrgUIActor_SketchBook_Masked*
            public const string mSketchbookCover = GUBrgUIManager + "0x28d4,"; // ABrgUIActor_Sketchbook_Cover*
            public const string mFade = GUBrgUIManager + "0x28dc,"; // UBrgUIFade*
            public const string mFadeSub = GUBrgUIManager + "0x28e4,"; // UBrgUIFade*
            public const string mButtonGuideBig = GUBrgUIManager + "0x28ec,"; // UBrgUIButtonGuideBig*
            public const string mPlayerStatus = GUBrgUIManager + "0x28f4,"; // UBrgUIHUD_PlayerStatus*
            public const string mRaticle = GUBrgUIManager + "0x28fc,"; // UBrgUIHUD_Raticle*
            public const string mButtonGuide = GUBrgUIManager + "0x2904,"; // UBrgUIHUD_ButtonGuide*
            public const string mQuickuse = GUBrgUIManager + "0x290c,"; // UBrgUIHUD_QuickUse*
            public const string mBombRelease = GUBrgUIManager + "0x2914,"; // UBrgUIHUD_BombRelease*
            public const string mTimer = GUBrgUIManager + "0x291c,"; // UBrgUIHUD_Timer*
            public const string mAssault = GUBrgUIManager + "0x2924,"; // UBrgUIHUD_Assault*
            public const string mLoading = GUBrgUIManager + "0x292c,"; // UBrgUIHUD_Loading*
            public const string mLoadingNews = GUBrgUIManager + "0x2934,"; // UBrgUIHUD_Loading_News*
            public const string mIconNetwork = GUBrgUIManager + "0x293c,"; // UBrgUIHUD_IconNetwork*
            public const string mSubtitle = GUBrgUIManager + "0x2944,"; // UBrgUIHUD_Subtitle*
            public const string mLockOnIcon = GUBrgUIManager + "0x294c,"; // UBrgUIHUD_LockOnIcon*
            public const string mSystemWindow = GUBrgUIManager + "0x2954,"; // UBrgUIHUD_SystemWindow*
            public const string mIconSelect = GUBrgUIManager + "0x295c,"; // UBrgUIHUD_IconSelect*
            public const string mItemInfoDisp = GUBrgUIManager + "0x2964,"; // UBrgUIHUD_ItemInfoDisp*
            public const string mItemInfoManager = GUBrgUIManager + "0x296c,"; // UBrgUIHUD_ItemInfoManager*
            public const string mUncleDeath = GUBrgUIManager + "0x2974,"; // UBrgUIHUD_UncleDeath*
            public const string mBossHealth = GUBrgUIManager + "0x297c,"; // UBrgUIHUD_BossHealth*
            public const string mGetExp = GUBrgUIManager + "0x2984,"; // UBrgUIPopUp_GetExp*
            public const string mDamage = GUBrgUIManager + "0x298c,"; // UBrgUIPopUp_Damage*
            public const string mRecovery = GUBrgUIManager + "0x2994,"; // UBrgUIPopUp_Recovery*
            public const string mPopUpDuration = GUBrgUIManager + "0x299c,"; // UBrgUIPopUp_Duration*
            public const string mCommonStatusMenuPart = GUBrgUIManager + "0x29a4,"; // UBrgUIMenuPart_CommonStatus*
            public const string mCommonFighterStatus = GUBrgUIManager + "0x29ac,"; // UBrgUIMenuPart_PlayerStatus*
            public const string mLockOnTargetStatus = GUBrgUIManager + "0x29b4,"; // UBrgUIMenuPart_PlayerStatus*
            public const string mLockOnTargetStatusState = GUBrgUIManager + "0x29bc"; // int32_t
            public const string mStartupCurrentScreen = GUBrgUIManager + "0x29c0,"; // UBrgUIMenu_StartupBase*
            public const string mTitle = GUBrgUIManager + "0x29c8,"; // UBrgUIMenu_Title*
            public const string mGameOverNewNative = GUBrgUIManager + "0x29d0,"; // UBrgUIMenu_GameOverNewNative*
            public const string mGameOverNew = GUBrgUIManager + "0x29d8,"; // UBrgUIMenu_GameOverNew*
            public const string mTutorialEnd = GUBrgUIManager + "0x29e0,"; // UBrgUIMenu_TutorialEnd*
            public const string mPartShopOld = GUBrgUIManager + "0x29e8,"; // UBrgUIMenu_PartShop2*
            public const string mShop = GUBrgUIManager + "0x29f0,"; // UBrgUIMenu_ShopBase*
            public const string mKariShop = GUBrgUIManager + "0x29f8,"; // UBrgUIMenu_KariShop*
            public const string mBodyFreezer = GUBrgUIManager + "0x2a00,"; // UBrgUIMenu_BodyFreezer*
            public const string mFortAssault = GUBrgUIManager + "0x2a08,"; // UBrgUIMenu_FortAssault*
            public const string mSkillExchange = GUBrgUIManager + "0x2a10,"; // UBrgUIMenu_SkillExchange*
            public const string mSkillVendingMachine = GUBrgUIManager + "0x2a18,"; // UBrgUIMenu_SkillVendingMachine*
            public const string mCredit = GUBrgUIManager + "0x2a20,"; // UBrgUIMenu_Credit*
            public const string mElevator2 = GUBrgUIManager + "0x2a28,"; // UBrgUIMenu_Elevator2*
            public const string mCoinLockerMenu = GUBrgUIManager + "0x2a30,"; // UBrgUIMenu_CoinLocker*
            public const string mDailyRewardBoxMenu = GUBrgUIManager + "0x2a38,"; // UBrgUIMenu_DailyRewardBox*
            public const string mDeathBagMenu = GUBrgUIManager + "0x2a40,"; // UBrgUIMenu_DeathBag*
            public const string mPosterMenu = GUBrgUIManager + "0x2a48,"; // UBrgUIMenu_Poster*
            public const string mSelectBody = GUBrgUIManager + "0x2a50,"; // UBrgUIMenu_SelectBody*
            public const string mSelectAddBody = GUBrgUIManager + "0x2a58,"; // UBrgUIMenu_SelectAdditionalBody*
            public const string mOptionMenu = GUBrgUIManager + "0x2a60,"; // UBrgUIMenu_Option*
            public const string mPauseMap = GUBrgUIManager + "0x2a68,"; // UBrgUIMenuPart_PauseMap*
            public const string mMenuButtonGuide = GUBrgUIManager + "0x2a70,"; // UBrgUIMenuPart_ButtonGuide*
            public const string mFloorResultMenu = GUBrgUIManager + "0x2a78,"; // UBrgUIMenu_FloorResult*
            public const string mExploreResultMenu = GUBrgUIManager + "0x2a80,"; // UBrgUIMenu_ExploreResult*
            public const string mSimpleMenu = GUBrgUIManager + "0x2a88,"; // UBrgUIMenu_Simple*
            public const string mSaveMenu = GUBrgUIManager + "0x2a90,"; // UBrgUIMenu_Save*
            public const string mElevatorMenu = GUBrgUIManager + "0x2a98,"; // UBrgUIMenu_Elevator*
            public const string mSketchbookMenu = GUBrgUIManager + "0x2aa0,"; // UBrgUIMenu_Sketchbook*
            public const string mSketchbookResource = GUBrgUIManager + "0x2aa8,"; // UBrgUIMenu_Sketchbook_Resource_Manager*
            public const string mFourForcemenReceptionMenu = GUBrgUIManager + "0x2ab0,"; // UBrgUIMenu_FourForcemenReceptionMenu*
            public const string mReturnBaseMachineMenu = GUBrgUIManager + "0x2ab8,"; // UBrgUIMenu_ReturnBaseMachineMenu*
            public const string mDustShooterMenu = GUBrgUIManager + "0x2ac0,"; // UBrgUIMenu_DustShooter*
            public const string mGameEngine = GUBrgUIManager + "0x2ac8,"; // UBrgGameEngine*
            public const string mPRTs = GUBrgUIManager + "0x2ad0,"; // FBrgUIPersistentRenderTargets
            public const string mSketchbookCaptureImage = GUBrgUIManager + "0x2b68,"; // UBrgUIImage*
            public const string mFighterCaptureImage = GUBrgUIManager + "0x2b70,"; // UBrgUIImage*
            public const string mFighterCaptureImageSub0x2 = GUBrgUIManager + "0x2b78,"; // UBrgUIImage*
            public const string mSketchbookCharacter = GUBrgUIManager + "0x2b88,"; // ABrgUIActor_Chara_Sketchbook*
            public const string mSketchbookDoll = GUBrgUIManager + "0x2b90,"; // UBrgUIMenu_Sketchbook_DeathDoll*
            public const string mSketchbookMount = GUBrgUIManager + "0x2b98,"; // UBrgUIMenu_Sketchbook_Mount*
            public const string mTutorialMenu = GUBrgUIManager + "0x2ba0,"; // UBrgUIMenu_TutorialLetter*
            public const string mImageCache = GUBrgUIManager + "0x2ba8,"; // UBrgUI_ImageCache*
            public const string mCommonTopMenu2 = GUBrgUIManager + "0x2bb0,"; // UBrgUIMenu_CommonTop2*
            public const string mGameCenterProcessing = GUBrgUIManager + "0x2bb8,"; // UBrgUIMenu_GameCenterProcessing*
            public const string mCommerceInterfaceTest = GUBrgUIManager + "0x2bc0,"; // UBrgUIMenu_CommerceInterfaceTest*
            public const string mPresentBoxMenu = GUBrgUIManager + "0x2bc8,"; // UBrgUIMenu_PresentBox*
            public const string mBivouacMenu = GUBrgUIManager + "0x2bd0,"; // UBrgUIMenu_Bivouac*
            public const string mDefenseReport = GUBrgUIManager + "0x2bd8,"; // UBrgUIMenu_DefenseReport*
            public const string mHierarchyMap = GUBrgUIManager + "0x2be0,"; // UBrgUIMenuPart_HierarchyMap*
            public const string mKariMenuSample1 = GUBrgUIManager + "0x2be8,"; // UBrgUIMenu_KariMenuSample1*
            public const string mKariMenuSample2 = GUBrgUIManager + "0x2bf0,"; // UBrgUIMenu_KariMenuSample2*
            public const string mMessageWindow = GUBrgUIManager + "0x2bf8,"; // UBrgUIHUD_MessageWindow_Hud*
            public const string mMessageWindow_ImageTraining = GUBrgUIManager + "0x2c00,"; // UBrgUIHUD_MessageWindow_ImageTraining*
            public const string mInsuranceMenu = GUBrgUIManager + "0x2c08,"; // UBrgUIMenu_Insurance*
            public const string mGameCenterRadio = GUBrgUIManager + "0x2c10,"; // UBrgUIMenu_GameCenterRadio*
            public const string mFortTerminalMenu = GUBrgUIManager + "0x2c18,"; // UBrgUIMenu_FortTerminal*
            public const string mFortTerminalPlayerMenu = GUBrgUIManager + "0x2c20,"; // UBrgUIMenu_FortTerminal_ShareMenu_PlayerParam*
            public const string mPrisonMenu = GUBrgUIManager + "0x2c28,"; // UBrgUIMenu_Prison*
            public const string mStampRallySheetExchangerMenu = GUBrgUIManager + "0x2c30,"; // UBrgUIMenu_StampRallySheetExchanger*
            public const string mResultDroneMenu = GUBrgUIManager + "0x2c38,"; // UBrgUIMenu_ResultDrone*
            public const string mFortRaidResult = GUBrgUIManager + "0x2c40,"; // UBrgUIMenu_Fort_RaidResult*
            public const string mGameCenterMotherValve = GUBrgUIManager + "0x2c48,"; // UBrgUIMenu_GameCenterMotherValve*
            public const string mGameCenterNaomi = GUBrgUIManager + "0x2c50,"; // UBrgUIMenu_GameCenterNaomi*
            public const string mGameCenterMeijin = GUBrgUIManager + "0x2c58,"; // UBrgUIMenu_GameCenterMeijin*
            public const string mStampMiniGame = GUBrgUIManager + "0x2c60,"; // UBrgUIMenu_StampMiniGame*
            public const string mSketchbookSetupSkill = GUBrgUIManager + "0x2c68,"; // UBrgUIMenu_SkillSetup*
            public const string mMessageMenu = GUBrgUIManager + "0x2c70,"; // UBrgUIMenu_Message*
            public const string mUncleDeathQuestion = GUBrgUIManager + "0x2c78,"; // UBrgCutscene_UncleDeathQuestion*
            public const string mRaidInsuranceResultMenu = GUBrgUIManager + "0x2c80,"; // UBrgUIMenu_RaidInsuranceResult*
            public const string mDispItemInfoPageCount = GUBrgUIManager + "0x2c88"; // int32_t
            public const string mDispItemInfoPageInputEnableCount = GUBrgUIManager + "0x2c8c"; // int32_t
            public const string mItemInfoPageMax = GUBrgUIManager + "0x2c90"; // int32_t
            public const string mMushroomEffectVisibleAlpha = GUBrgUIManager + "0x2c94,"; // FParamMoveData
            public const string mOnMemoryResource = GUBrgUIManager + "0x2d00,"; // UBrgUIResource_OnMemory*
            public const string mOnMemoryResource_Hub_RefCount = GUBrgUIManager + "0x2d08"; // int32_t
            public const string mOnMemoryResource_Hub = GUBrgUIManager + "0x2d0c,"; // UBrgUIResource_OnMemory_Hub*
            public const string mPlayerPawnBaseNative = GUBrgUIManager + "0x2d14,"; // ABrgPawn_BaseNative*
            public const string mPawnPlayerBase = GUBrgUIManager + "0x2d1c,"; // ABrgPawn_PlayerBase*
            public const string mPawnCustomCharaPlayer = GUBrgUIManager + "0x2d24,"; // ABrgPawn_CustomCharaPlayer*
            public const string mPlayerCommonPawn = GUBrgUIManager + "0x2d34,"; // ABrgCommonPawn_CustomChara*
            public const string mPlayerCommonPawnNative = GUBrgUIManager + "0x2d3c,"; // ABrgCommonPawn_CustomCharaNative*
            public const string mPlayerCtrlCustomChara = GUBrgUIManager + "0x2d44,"; // ABrgPlayerCtrl_CustomChara*
            public const string mPlayerCtrlBase = GUBrgUIManager + "0x2d4C,"; // ABrgPlayerCtrl_Base*
            public const string mPlayerCtrlBaseNative = GUBrgUIManager + "0x2d54,"; // ABrgPlayerCtrl_BaseNative*
            public const string mClass_BrgUIParamEditMenuParam = GUBrgUIManager + "0x2d5C,"; // UObject*
            public const string mLockOnIcon_Z = GUBrgUIManager + "0x2d5c"; // int32_t
            public const string mDropItemUIAddX = GUBrgUIManager + "0x2d60"; // int32_t
            public const string mDropItemUIAddY = GUBrgUIManager + "0x2d64"; // int32_t
            public const string mMenu_Default_Color = GUBrgUIManager + "0x2d68,"; // FColor
            public const string mMenu_Option_Color = GUBrgUIManager + "0x2d6c,"; // FColor
            public const string mMenu_EnmaTyou_Color = GUBrgUIManager + "0x2d70,"; // FColor
            public const string mMenu_CoinLocker_Color = GUBrgUIManager + "0x2d74,"; // FColor
            public const string mMenu_RewardBox_Color = GUBrgUIManager + "0x2d78,"; // FColor
            public const string mMenu_HubPartShop_Color = GUBrgUIManager + "0x2d7c,"; // FColor
            public const string mMenu_SubPartShop_Color = GUBrgUIManager + "0x2d80,"; // FColor
            public const string mMenu_VendingMachine_Color = GUBrgUIManager + "0x2d84,"; // FColor
            public const string mMenu_MushroomShop_Color = GUBrgUIManager + "0x2d88,"; // FColor
            public const string mMenu_FortTerminal_Color = GUBrgUIManager + "0x2d8c,"; // FColor
            public const string mMenu_FortTerminal_War_Color = GUBrgUIManager + "0x2d90,"; // FColor
            public const string mMenu_BodyFreezer_Color = GUBrgUIManager + "0x2d94,"; // FColor
            public const string mMenu_Elevator_Color = GUBrgUIManager + "0x2d98,"; // FColor
            public const string mMenu_FortResult_Color = GUBrgUIManager + "0x2d9c,"; // FColor
            public const string mMenu_Prison_Color = GUBrgUIManager + "0x2da0,"; // FColor
            public const string mMenu_StampMiniGame_Color = GUBrgUIManager + "0x2da4,"; // FColor
            public const string mMenu_StampRallySheetExchanger_Color = GUBrgUIManager + "0x2da8,"; // FColor
            public const string mMenu_ResultDrone_Color = GUBrgUIManager + "0x2dac,"; // FColor
            public const string mMenu_TutorialLetter_Color = GUBrgUIManager + "0x2db0,"; // FColor
            public const string mMenu_FourForcemenReception_Color = GUBrgUIManager + "0x2db4,"; // FColor
            public const string mMenu_DustShooter_Color = GUBrgUIManager + "0x2db8,"; // FColor
            public const string mSketchbook_Font_Color = GUBrgUIManager + "0x2dbc,"; // TArray<FColor>
            public const string mSketchbook_Gauge_Color = GUBrgUIManager + "0x2dcc,"; // TArray<FColor>
            public const string mErrorStrArray = GUBrgUIManager + "0x2ddc,"; // TArray<FString>
            public const string mTestRP2D = GUBrgUIManager + "0x2dec,"; // UBrgRenderPrimitive2DSet*
            public const string mTestRenderTarget = GUBrgUIManager + "0x2df4,"; // UTextureRenderTarget2D*
            public const string mTestMaterial = GUBrgUIManager + "0x2dfc,"; // UMaterialInstanceConstant*
            public const string mTestMaterial2 = GUBrgUIManager + "0x2e04,"; // UMaterialInstanceConstant*
            public const string mTestMaterial3 = GUBrgUIManager + "0x2e0c,"; // UMaterialInstanceConstant*
            public const string mTestImage_Stream = GUBrgUIManager + "0x2e14,"; // UBrgUIImage_Stream*
            public const string mTestImage = GUBrgUIManager + "0x2e1c,"; // UBrgUIImage*
            public const string mTestImage2 = GUBrgUIManager + "0x2e24,"; // UBrgUIImage*
            public const string mTestImage3 = GUBrgUIManager + "0x2e2c,"; // UBrgUIImage*
            public const string mTestImage4 = GUBrgUIManager + "0x2e34,"; // UBrgUIImage*
            public const string mTestImage5 = GUBrgUIManager + "0x2e3c,"; // UBrgUIImage*
            public const string mTestImage5Counter = GUBrgUIManager + "0x2e44"; // float
            public const string mTestImage6 = GUBrgUIManager + "0x2e48,"; // UBrgUIImage*
            public const string mTestImage8 = GUBrgUIManager + "0x2e50,"; // UBrgUIImage*
            public const string mTestRGBImage = GUBrgUIManager + "0x2e58,"; // UBrgUIImage*
            public const string mTestRGBImage_SRGB = GUBrgUIManager + "0x2e60,"; // UBrgUIImage*
            public const string mTestStickerStandard = GUBrgUIManager + "0x2e68,"; // UBrgUIImage*
            public const string mTestStickerKira = GUBrgUIManager + "0x2e70,"; // UBrgUIImage*
            public const string mTestGlobalCount = GUBrgUIManager + "0x2e78"; // int32_t
            public const string mTestPositionX = GUBrgUIManager + "0x2e7c"; // int32_t
            public const string mTestPositionY = GUBrgUIManager + "0x2e80"; // int32_t
            public const string mTestTime = GUBrgUIManager + "0x2e84"; // float
            public const string mTestAngle = GUBrgUIManager + "0x2e88"; // float
            public const string mTestPosition = GUBrgUIManager + "0x2e8c"; // float
            public const string mTestAngle2 = GUBrgUIManager + "0x2e90"; // float
            public const string mTestPositionAdd = GUBrgUIManager + "0x2e94"; // float
            public const string mTestMoveParam = GUBrgUIManager + "0x2e98,"; // FParamMoveData
            public const string mTestCounter = GUBrgUIManager + "0x2f04"; // float
            public const string mTestImageMapImage = GUBrgUIManager + "0x2f08,"; // UBrgUIImage*
            public const string mTestImageMapImageBase = GUBrgUIManager + "0x2f10,"; // TArray<UBrgUIImageBase*>
            public const string mTestStringIndex = GUBrgUIManager + "0x2f20"; // int32_t
            public const string mTestStringCounter = GUBrgUIManager + "0x2f24"; // float
            public const string mTestSprite = GUBrgUIManager + "0x2f28,"; // UBrgUISprite*
            public const string mTestSpriteAnim1 = GUBrgUIManager + "0x2f30,"; // UBrgUISpriteAnim*
            public const string mTestSpriteAnim2 = GUBrgUIManager + "0x2f38,"; // UBrgUISpriteAnim*
            public const string mTestSpriteAnim3 = GUBrgUIManager + "0x2f40,"; // UBrgUISpriteAnim*
            public const string mTestCharaActor = GUBrgUIManager + "0x2f48,"; // ABrgUIActor_Chara*
            public const string mTestCharaActorCounter = GUBrgUIManager + "0x2f50"; // float
            public const string mTestSelectWindow = GUBrgUIManager + "0x2f54,"; // UBrgUIDebugSelectWindow*
            public const string mTestSoundCue = GUBrgUIManager + "0x2f5c,"; // USoundCue*
            public const string mTestActorCounter = GUBrgUIManager + "0x2f64"; // float
            public const string mTestCharaActor_Base = GUBrgUIManager + "0x2f68,"; // ABrgUIActor_Chara_Base*
            public const string mTestCharaActor_Base2 = GUBrgUIManager + "0x2f70,"; // ABrgUIActor_Chara_Base*
            public const string mTestCharaActor_FloorResult = GUBrgUIManager + "0x2f78,"; // ABrgUIActor_Chara_FloorResult*
            public const string mTestEquipChangeIndex = GUBrgUIManager + "0x2f80"; // int32_t
            public const string mTestEquipChangeCounter = GUBrgUIManager + "0x2f84"; // float
            public const string mTestCountDownTime = GUBrgUIManager + "0x2f88"; // float
            public const string mTestDebugEditNumber = GUBrgUIManager + "0x2f8c,"; // UBrgUIDebugEditNumber*
            public const string mTestPauseCounter = GUBrgUIManager + "0x2f94"; // int32_t
            public const string mDispBigTextCount = GUBrgUIManager + "0x2f98"; // int32_t
            public const string mDebugDrawString = GUBrgUIManager + "0x2f9c,"; // TArray<FBrgDebugDrawString>
            public const string mDebugMessage = GUBrgUIManager + "0x2fac,"; // UBrgUIDebugMessage*
            public const string mDebugSelectWindow = GUBrgUIManager + "0x2fb4,"; // UBrgUIDebugSelectWindow*
            public const string mDebugQuestInfoTimer = GUBrgUIManager + "0x2fbc"; // float
            public const string mDebugQuestInfo = GUBrgUIManager + "0x2fc0,"; // UBrgUIDebugMessage*
            public const string mDebugHunterInfoTimer = GUBrgUIManager + "0x2fc8"; // float
            public const string mDebugHunterInfo = GUBrgUIManager + "0x2fcc,"; // UBrgUIDebugMessage*
            public const string mGameOverPaxVer = GUBrgUIManager + "0x2fd4,"; // UBrgUIMenu_GameOverPaxVer*
            public const string mDebugReadTextureNames = GUBrgUIManager + "0x2fdc,"; // TArray<FName>
            public const string mUTCSecond = GUBrgUIManager + "0x2fec"; // int32_t
            public const string mBackAppSecond = GUBrgUIManager + "0x2ff0,"; // FDouble
            public const string mFOneSecTimeCnt = GUBrgUIManager + "0x2ff8"; // float
            public const string mColonFadeOpacity = GUBrgUIManager + "0x2ffc"; // float
            public const string mInsuranceMenu_LastCommerceInterfaceResult = GUBrgUIManager + "0x3000,"; // BrgUIMenu_CommerceInterface_Result
            public const string mDebugDrawThrowItemLine_MoveType = GUBrgUIManager + "0x3001,"; // EBrgMsrMov
            public const string mRenderToRTRequests = GUBrgUIManager + "0x3004,"; // TArray<FBrgUIRenderToRTRequest>
            public const string mMushroomThrowParams = GUBrgUIManager + "0x3014,"; // TArray<FBrgTreasureMushroomThrowParam>
            public const string mMushroomBeastThrowParams = GUBrgUIManager + "0x3024,"; // TArray<FBrgTreasureMushroomThrowParam>
            public const string mMushroomThrowParamEditTarget = GUBrgUIManager + "0x3034"; // int32_t
            public const string mMushBeastCaptureRanges = GUBrgUIManager + "0x3038,"; // TArray<FBrgMushbeastCaptureRange>
            public const string mDebugDrawThrowItemLine_ThrowGravity = GUBrgUIManager + "0x3048"; // float
            public const string mDebugDrawThrowItemLine_ThrowSpeed = GUBrgUIManager + "0x304c"; // float
            public const string mGlobalPartInfoParamEditTarget = GUBrgUIManager + "0x3050"; // int32_t
            public const string mPPT = GUBrgUIManager + "0x3054,"; // UBrgPredictedProjectileTrajectory*
            public const string mGameScreenCapture = GUBrgUIManager + "0x305c,"; // ABrgSceneCapture2DActor*
            public const string mOffscreenText = GUBrgUIManager + "0x3064,"; // TArray<FBrgHUD_OffscreenText>
            public const string mSketchbookFadeInParam = GUBrgUIManager + "0x3074"; // float
            public const string mSketchbookFadeOutParam = GUBrgUIManager + "0x3078"; // float
            public const string mPooled_BrgDropItemBaseInfo_Auto = GUBrgUIManager + "0x307c,"; // TArray<UBrgDropItemBaseInfo_Auto*>
            public const string mFortRaidSortIndexCache = GUBrgUIManager + "0x308c"; // int32_t
            public const string mFortTopSortIndexCache = GUBrgUIManager + "0x3090"; // int32_t
            #endregion

            // UBrgUIMiniMapManager Inheritance: UBrgUIManager > UBrgUIManagerBase > UObject
            public class UBrgUIMiniMapManager
            {
                public const string mUIManager = mMiniMapManager + "0x60,"; // UBrgUIManager*
                public const string mMapCenterLocation = mMiniMapManager + "0x68,"; // FVector
                public const string mMapBorderLocation0x2 = mMiniMapManager + "0x74,"; // FVector
                public const string mMiniMapSizeX = mMiniMapManager + "0x8c"; // int32_t
                public const string mMiniMapSizeY = mMiniMapManager + "0x90"; // int32_t
                public const string mSprayLifeTime = mMiniMapManager + "0x94"; // int32_t
                public const string mConstParam = mMiniMapManager + "0x98,"; // UBrgUIParamEditMenuParam*
                public const string mUnitTextureStatus = mMiniMapManager + "0xa0,"; // EBrgUIMiniMapManagerUnitTesxtureStatus
                public const string mSprayImage = mMiniMapManager + "0xa4,"; // UBrgUIImage*
                public const string mUnitImages = mMiniMapManager + "0xac,"; // TArray<UBrgUIImage*>
                public const string mUnitArrivedRateTexture = mMiniMapManager + "0xbc,"; // UTextureRenderTarget2D*
                public const string mUnitArrivedRateImage = mMiniMapManager + "0xc4,";// UBrgUIImage*
                public const string mMiniMapTextureSetup = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbShowMushroom = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbShowTreasure = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbShowEnemy = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbViewImpossible = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbMapBossNeckFlag = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbMapGoalFlag = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbMapStartFlag = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbAlwaysZeroClearUnitArrivedRate = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mbUnitArrivedRateNewFlag = mMiniMapManager + "0xcc"; // uint32_t : 1
                public const string mMapStartLocation = mMiniMapManager + "0xd0,"; // FVector
                public const string mMapGoalLocation = mMiniMapManager + "0xdc,";// FVector
                public const string mMapBossNeckLocation = mMiniMapManager + "0xe8,";// FVector
                public const string mMiniMapTexture = mMiniMapManager + "0xf4,"; // UTextureRenderTarget2D*
                public const string mIconMaskScreenTexture = mMiniMapManager + "0xfc,"; // UTexture*
                public const string mMiniMapDefaultCameraZoom = mMiniMapManager + "0x104"; // float
                public const string mMiniMapCameraViewPortY = mMiniMapManager + "0x108"; // int32_t
                public const string mMiniMapImageSize = mMiniMapManager + "0x10c"; // int32_t
                public const string mSearchDistance = mMiniMapManager + "0x110"; // int32_t
                public const string mSprayObjects = mMiniMapManager + "0x114,"; // TArray<FBrgUIMiniMapManagerSprayObject>
                public const string mUnitScale = mMiniMapManager + "0x124"; // float
                public const string mGridMap = mMiniMapManager + "0x128,"; // TArray<int32_t>
                public const string mMiniMapSpraySizeScale = mMiniMapManager + "0x138"; // float
                public const string mMiniMapCameraZoom = mMiniMapManager + "0x13c"; // float
                public const string mCells = mMiniMapManager + "0x140,"; // TArray<FBrgUIMiniMapCellInfo>
                public const string mHexagonOuterCircle = mMiniMapManager + "0x150"; // float
                public const string mHexagonInnerCircle = mMiniMapManager + "0x154"; // float
                public const string mHexagonSide = mMiniMapManager + "0x158"; // float
                public const string mRememberSprayLifeTime = mMiniMapManager + "0x15c"; // int32_t
                public const string mRememberScale = mMiniMapManager + "0x160"; // float
                public const string mRememberSprayOffsetScale = mMiniMapManager + "0x164"; // float
            }

            public class PlayerCtrlCustomChara : UBrgUIManager
            {
                public const string mRecoil = mPlayerCtrlCustomChara + "2E6"; // byte (bitfield)
                public const string mRecoilVerticalTarget = mPlayerCtrlCustomChara + "4D0C"; // Float
                public const string mRecoilHorizontalTarget = mPlayerCtrlCustomChara + "4D10"; // Float
                public const string mRecoilVerticalTotal = mPlayerCtrlCustomChara + "4D14"; // Float
                public const string mRecoilHorizontalTotal = mPlayerCtrlCustomChara + "4D18"; // Float
                public const string mRecoilNoAimAdjustRate = mPlayerCtrlCustomChara + "4D1C"; // Float
            }

            public class AActor : UBrgUIManager
            { // Inheritance(ABrgPawn_PlayerBase|mPawnPlayerBase):  -> UObject
                public const string Components = mPawnPlayerBase + "0x60,"; // TArray<UActorComponent*>
                public const string AllComponents = mPawnPlayerBase + "0x70,"; // TArray<UActorComponent*>
                public const string Location_X = mPawnPlayerBase + "0x80"; //  float
                public const string Location_Y = mPawnPlayerBase + "0x84"; //  float
                public const string Location_Z = mPawnPlayerBase + "0x88"; //  float
                public const string Rotation = mPawnPlayerBase + "0x8c,"; // FRotator
                public const string DrawScale = mPawnPlayerBase + "0x98"; // float
                public const string DrawScale3D_X = mPawnPlayerBase + "0x9c"; // float
                public const string DrawScale3D_Y = mPawnPlayerBase + "0xa0"; // float
                public const string DrawScale3D_Z = mPawnPlayerBase + "0xa4"; // float
                public const string PrePivot = mPawnPlayerBase + "0xa8,"; // FVector
                public const string EditorIconColor = mPawnPlayerBase + "0xb4,"; // FColor
                public const string DetachFence = mPawnPlayerBase + "0xb8,"; // FRenderCommandFence
                public const string CustomTimeDilation = mPawnPlayerBase + "0xbc"; // float
                public const string Physics = mPawnPlayerBase + "0xc0,"; // EPhysics
                public const string RemoteRole = mPawnPlayerBase + "0xc1,"; // ENetRole
                public const string Role = mPawnPlayerBase + "0xc2,"; // ENetRole
                public const string CollisionType = mPawnPlayerBase + "0xc3,"; // ECollisionType
                public const string BrgCollisionType = mPawnPlayerBase + "0xc4,"; // EBrgCollisionType
                public const string ReplicatedCollisionType = mPawnPlayerBase + "0xc5,"; // ECollisionType
                public const string TickGroup = mPawnPlayerBase + "0xc6,"; // ETickingGroup
                public const string Owner = mPawnPlayerBase + "0xc8,"; // AActor*
                public const string Base = mPawnPlayerBase + "0xd0,"; // AActor*
                public const string Timers = mPawnPlayerBase + "0xd8,"; // TArray<FTimerData>
                public const string bStatic = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bHidden = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bNoDelete = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bDeleteMe = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bTicked = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bOnlyOwnerSee = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bTickIsDisabled = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bPartialPauseControlled = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bWorldGeometry = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bIgnoreRigidBodyPawns = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bOrientOnSlope = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bIgnoreEncroachers = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bPushedByEncroachers = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bDestroyedByInterpActor = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bRouteBeginPlayEvenIfStatic = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bIsMoving = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bAlwaysEncroachCheck = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bHasAlternateTargetLocation = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bCanStepUpOn = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bNetTemporary = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bOnlyRelevantToOwner = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bNetDirty = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bAlwaysRelevant = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bReplicateInstigator = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bReplicateMovement = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bSkipActorPropertyReplication = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bUpdateSimulatedPosition = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bTearOff = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bOnlyDirtyReplication = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bAllowFluidSurfaceInteraction = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bDemoRecording = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bDemoOwner = mPawnPlayerBase + "0xe8"; // uint32_t : 1
                public const string bForceDemoRelevant = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bNetInitialRotation = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bReplicateRigidBodyLocation = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bKillDuringLevelTransition = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bExchangedRoles = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bConsiderAllStaticMeshComponentsForStreaming = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bDebug = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bPostRenderIfNotVisible = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bForceNetUpdate = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bPendingNetUpdate = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bHardAttach = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bIgnoreBaseRotation = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bShadowParented = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bSkipAttachedMoves = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCanBeAdheredTo = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCanBeFrictionedTo = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bHurtEntry = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bGameRelevant = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bMovable = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bDestroyInPainVolume = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCanBeDamaged = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bShouldBaseAtStartup = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bPendingDelete = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCanTeleport = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bAlwaysTick = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bBlocksNavigation = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string BlockRigidBody = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCollideWhenPlacing = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCollideActors = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCollideWorld = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bCollideComplex = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bBlockActors = mPawnPlayerBase + "0xec"; // uint32_t : 1
                public const string bProjTarget = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bBlocksTeleport = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bMoveIgnoresDestruction = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bProjectileMoveSingleBlocking = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bNoEncroachCheck = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bCollideAsEncroacher = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bPhysRigidBodyOutOfWorldCheck = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bComponentOutsideWorld = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bForceOctreeSNFilter = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bForceOctreeMNFilter = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bRigidBodyWasAwake = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bCallRigidBodyWakeEvents = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bBounce = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bJustTeleported = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bNetInitial = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bNetOwner = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEd = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bEditable = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdGroup = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdLayer = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdCustom = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdTemporary = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdLevel = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bHiddenEdScene = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bEdShouldSnap = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bTempEditor = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bPathColliding = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bForceDisablePathColliding = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bIgnoreBlockPawnMovement = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bPathTemp = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bScriptInitialized = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bLockLocation = mPawnPlayerBase + "0xf0"; // uint32_t : 1
                public const string bForceAllowKismetModification = mPawnPlayerBase + "0xf4"; // uint32_t : 1
                public const string bDebugEffectIsRelevant = mPawnPlayerBase + "0xf4"; // uint32_t : 1
                public const string NetTag = mPawnPlayerBase + "0xf8"; // int32_t
                public const string NetUpdateTime = mPawnPlayerBase + "0xfc,"; // FDouble
                public const string NetUpdateFrequency = mPawnPlayerBase + "0x104"; // float
                public const string NetPriority = mPawnPlayerBase + "0x108"; // float
                public const string LastNetUpdateTime = mPawnPlayerBase + "0x10c,"; // FDouble
                public const string TimeSinceLastTick = mPawnPlayerBase + "0x114"; // float
                public const string Instigator = mPawnPlayerBase + "0x118,"; // APawn*
                public const string WorldInfo = mPawnPlayerBase + "0x120,"; // AWorldInfo*
                public const string LifeSpan = mPawnPlayerBase + "0x128"; // float
                public const string CreationTime = mPawnPlayerBase + "0x12c,"; // FDouble
                public const string LastRenderTime = mPawnPlayerBase + "0x134,"; // FDouble
                public const string Tag = mPawnPlayerBase + "0x13c,"; // FName
                public const string InitialState = mPawnPlayerBase + "0x144,"; // FName
                public const string Layer = mPawnPlayerBase + "0x14c,"; // FName
                public const string Group = mPawnPlayerBase + "0x154,"; // FName
                public const string HiddenEditorViews = mPawnPlayerBase + "0x15c,"; // FQWord
                public const string Touching = mPawnPlayerBase + "0x164,"; // TArray<AActor*>
                public const string Children = mPawnPlayerBase + "0x174,"; // TArray<AActor*>
                public const string LatentFloat = mPawnPlayerBase + "0x184"; // float
                public const string LatentSeqNode = mPawnPlayerBase + "0x188,"; // UAnimNodeSequence*
                public const string LatentFrames = mPawnPlayerBase + "0x190"; // float
                public const string PhysicsVolume = mPawnPlayerBase + "0x194,"; // APhysicsVolume*
                public const string Velocity = mPawnPlayerBase + "0x19c,"; // FVector
                public const string Acceleration = mPawnPlayerBase + "0x1a8,"; // FVector
                public const string AngularVelocity = mPawnPlayerBase + "0x1b4,"; // FVector
                public const string BaseSkelComponent = mPawnPlayerBase + "0x1c0,"; // USkeletalMeshComponent*
                public const string BaseBoneName = mPawnPlayerBase + "0x1c8,"; // FName
                public const string Attached = mPawnPlayerBase + "0x1d0,"; // TArray<AActor*>
                public const string RelativeLocation = mPawnPlayerBase + "0x1e0,"; // FVector
                public const string RelativeRotation = mPawnPlayerBase + "0x1ec,"; // FRotator
                public const string CollisionComponent = mPawnPlayerBase + "0x1f8,"; // UPrimitiveComponent*
                public const string OverlapTag = mPawnPlayerBase + "0x200"; // int32_t
                public const string RotationRate = mPawnPlayerBase + "0x204,"; // FRotator
                public const string PendingTouch = mPawnPlayerBase + "0x210,"; // AActor*
                public const string MessageClass = mPawnPlayerBase + "0x218,"; // ULocalMessage*
                public const string SupportedEvents = mPawnPlayerBase + "0x220,"; // TArray<USequenceEvent*>
                public const string GeneratedEvents = mPawnPlayerBase + "0x230,"; // TArray<USequenceEvent*>
                public const string LatentActions = mPawnPlayerBase + "0x240,"; // TArray<USeqAct_Latent*>
                public const string mPreAnimRotation = mPawnPlayerBase + "0x250,"; // FRotator
                public const string ShadowSettingStack = mPawnPlayerBase + "0x25c,"; // TArray<AActor*>
                public const string AutoDisappearPSCs = mPawnPlayerBase + "0x26c,"; // TArray<FAutoDisappearPSCData>

                public const string mDurabilityDownDisable = mPawnPlayerBase + "0x5F8"; // Byte 32 Off | 64 On 
            }

            public class APawn
            {
                // Inheritance: AActor > UObject
                public const string VfTable_IInterface_Speaker = mPawnPlayerBase + "0x27c,"; // FPointer
                public const string MaxStepHeight = mPawnPlayerBase + "0x284"; // float
                public const string MaxJumpHeight = mPawnPlayerBase + "0x288"; // float
                public const string WalkableFloorZ = mPawnPlayerBase + "0x28c"; // float
                public const string LedgeCheckThreshold = mPawnPlayerBase + "0x290"; // float
                public const string PartialLedgeMoveDir = mPawnPlayerBase + "0x294,"; // FVector
                public const string Controller = mPawnPlayerBase + "0x2a0,"; // AController*
                public const string NextPawn = mPawnPlayerBase + "0x2a8,"; // APawn*
                public const string NetRelevancyTime = mPawnPlayerBase + "0x2b0,"; // FDouble
                public const string LastRealViewer = mPawnPlayerBase + "0x2b8,"; // APlayerController*
                public const string LastViewer = mPawnPlayerBase + "0x2c0,"; // AActor*
                public const string bScriptTickSpecial = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bUpAndOut = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bIsWalking = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bWantsToCrouch = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bIsCrouched = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bTryToUncrouch = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanCrouch = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCrawler = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bReducedSpeed = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bJumpCapable = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanJump = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanWalk = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanSwim = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanFly = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanClimbLadders = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanStrafe = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bAvoidLedges = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bStopAtLedges = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bAllowLedgeOverhang = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bPartiallyOverLedge = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bSimulateGravity = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bIgnoreForces = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanWalkOffLedges = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanBeBaseForPawns = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bSimGravityDisabled = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bDirectHitWall = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bPushesRigidBodies = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bForceFloorCheck = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bForceKeepAnchor = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanMantle = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanClimbUp = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanClimbCeilings = mPawnPlayerBase + "0x2c8"; // uint32_t : 1
                public const string bCanSwatTurn = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bCanLeap = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bCanCoverSlip = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bDisplayPathErrors = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bCanPickupInventory = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bAmbientCreature = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bLOSHearing = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bMuffledHearing = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bDontPossess = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bRollToDesired = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bStationary = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bCachedRelevant = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bNoWeaponFiring = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bModifyReachSpecCost = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bModifyNavPointDest = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bPathfindsAsVehicle = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bPrevBypassSimulatedClientPhysics = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bRunPhysicsWithNoController = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bForceMaxAccel = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bLimitFallAccel = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bReplicateHealthToAll = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bForceRMVelocity = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bForceRegularVelocity = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bPlayedDeath = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bDesiredRotationSet = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bLockDesiredRotation = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bUnlockWhenReached = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bNeedsBaseTickedFirst = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bUsedByMatinee = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bRootMotionFromInterpCurve = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bDebugShowCameraLocation = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string bFastAttachedMove = mPawnPlayerBase + "0x2cc"; // uint32_t : 1
                public const string WalkingPhysics = mPawnPlayerBase + "0x2d0,"; // EPhysics
                public const string PathSearchType = mPawnPlayerBase + "0x2d1,"; // EPathSearchType
                public const string RemoteViewPitch = mPawnPlayerBase + "0x2d2,"; // char
                public const string FlashCount = mPawnPlayerBase + "0x2d3,"; // char
                public const string FiringMode = mPawnPlayerBase + "0x2d4,"; // char
                public const string UncrouchTime = mPawnPlayerBase + "0x2d8"; // float
                public const string CrouchHeight = mPawnPlayerBase + "0x2dc"; // float
                public const string CrouchRadius = mPawnPlayerBase + "0x2e0"; // float
                public const string FullHeight = mPawnPlayerBase + "0x2e4"; // int32_t
                public const string NonPreferredVehiclePathMultiplier = mPawnPlayerBase + "0x2e8"; // float
                public const string PathConstraintList = mPawnPlayerBase + "0x2ec,"; // UPathConstraint*
                public const string PathGoalList = mPawnPlayerBase + "0x2f4,"; // UPathGoalEvaluator*
                public const string DesiredSpeed = mPawnPlayerBase + "0x2fc"; // float
                public const string MaxDesiredSpeed = mPawnPlayerBase + "0x300"; // float
                public const string HearingThreshold = mPawnPlayerBase + "0x304"; // float
                public const string Alertness = mPawnPlayerBase + "0x308"; // float
                public const string SightRadius = mPawnPlayerBase + "0x30c"; // float
                public const string PeripheralVision = mPawnPlayerBase + "0x310"; // float
                public const string AvgPhysicsTime = mPawnPlayerBase + "0x314"; // float
                public const string Mass = mPawnPlayerBase + "0x318"; // float
                public const string Buoyancy = mPawnPlayerBase + "0x31c"; // float
                public const string MeleeRange = mPawnPlayerBase + "0x320"; // float
                public const string Anchor = mPawnPlayerBase + "0x324,"; // ANavigationPoint*
                public const string AnchorItem = mPawnPlayerBase + "0x32c"; // int32_t
                public const string LastAnchor = mPawnPlayerBase + "0x330,"; // ANavigationPoint*
                public const string FindAnchorFailedTime = mPawnPlayerBase + "0x338,"; // FDouble
                public const string LastValidAnchorTime = mPawnPlayerBase + "0x340,"; // FDouble
                public const string DestinationOffset = mPawnPlayerBase + "0x348"; // float
                public const string NextPathRadius = mPawnPlayerBase + "0x34c"; // float
                public const string SerpentineDir = mPawnPlayerBase + "0x350,"; // FVector
                public const string SerpentineDist = mPawnPlayerBase + "0x35c"; // float
                public const string SerpentineTime = mPawnPlayerBase + "0x360"; // float
                public const string SpawnTime = mPawnPlayerBase + "0x364,"; // FDouble
                public const string MaxPitchLimit = mPawnPlayerBase + "0x36c"; // int32_t
                public const string GroundSpeed = mPawnPlayerBase + "0x370"; // float
                public const string WaterSpeed = mPawnPlayerBase + "0x374"; // float
                public const string AirSpeed = mPawnPlayerBase + "0x378"; // float
                public const string LadderSpeed = mPawnPlayerBase + "0x37c"; // float
                public const string AccelRate = mPawnPlayerBase + "0x380"; // float
                public const string JumpZ = mPawnPlayerBase + "0x384"; // float
                public const string OutofWaterZ = mPawnPlayerBase + "0x388"; // float
                public const string MaxOutOfWaterStepHeight = mPawnPlayerBase + "0x38c"; // float
                public const string AirControl = mPawnPlayerBase + "0x390"; // float
                public const string WalkingPct = mPawnPlayerBase + "0x394"; // float
                public const string MovementSpeedModifier = mPawnPlayerBase + "0x398"; // float
                public const string CrouchedPct = mPawnPlayerBase + "0x39c"; // float
                public const string MaxFallSpeed = mPawnPlayerBase + "0x3a0"; // float
                public const string AIMaxFallSpeedFactor = mPawnPlayerBase + "0x3a4"; // float
                public const string BaseEyeHeight = mPawnPlayerBase + "0x3a8"; // float
                public const string EyeHeight = mPawnPlayerBase + "0x3ac"; // float
                public const string Floor = mPawnPlayerBase + "0x3b0,"; // FVector
                public const string SplashTime = mPawnPlayerBase + "0x3bc,"; // FDouble
                public const string HeadVolume = mPawnPlayerBase + "0x3c4,"; // APhysicsVolume*
                public const string Health = mPawnPlayerBase + "0x3cc"; // int32_t
                public const string HealthMax = mPawnPlayerBase + "0x3d0"; // int32_t
                public const string BreathTime = mPawnPlayerBase + "0x3d4"; // float
                public const string UnderWaterTime = mPawnPlayerBase + "0x3d8"; // float
                public const string LastPainTime = mPawnPlayerBase + "0x3dc,"; // FDouble
                public const string KismetDeathDelayTime = mPawnPlayerBase + "0x3e4,"; // FDouble
                public const string RMVelocity = mPawnPlayerBase + "0x3ec,"; // FVector
                public const string noise1spot = mPawnPlayerBase + "0x3f8,"; // FVector
                public const string noise1time = mPawnPlayerBase + "0x404,"; // FDouble
                public const string noise1other = mPawnPlayerBase + "0x40c,"; // APawn*
                public const string noise1loudness = mPawnPlayerBase + "0x414"; // float
                public const string noise2spot = mPawnPlayerBase + "0x418,"; // FVector
                public const string noise2time = mPawnPlayerBase + "0x424,"; // FDouble
                public const string noise2other = mPawnPlayerBase + "0x42c,"; // APawn*
                public const string noise2loudness = mPawnPlayerBase + "0x434"; // float
                public const string SoundDampening = mPawnPlayerBase + "0x438"; // float
                public const string DamageScaling = mPawnPlayerBase + "0x43c"; // float
                public const string MenuName = mPawnPlayerBase + "0x440,"; // FString
                public const string ControllerClass = mPawnPlayerBase + "0x450,"; // AAIController*
                public const string PlayerReplicationInfo = mPawnPlayerBase + "0x458,"; // APlayerReplicationInfo*
                public const string OnLadder = mPawnPlayerBase + "0x460,"; // ALadderVolume*
                public const string LandMovementState = mPawnPlayerBase + "0x468,"; // FName
                public const string WaterMovementState = mPawnPlayerBase + "0x470,"; // FName
                public const string LastStartSpot = mPawnPlayerBase + "0x478,"; // APlayerStart*
                public const string LastStartTime = mPawnPlayerBase + "0x480,"; // FDouble
                public const string TakeHitLocation = mPawnPlayerBase + "0x488,"; // FVector
                public const string HitDamageType = mPawnPlayerBase + "0x494,"; // UDamageType*
                public const string TearOffMomentum = mPawnPlayerBase + "0x49c,"; // FVector
                public const string Mesh = mPawnPlayerBase + "0x4a8,"; // USkeletalMeshComponent*
                public const string CylinderComponent = mPawnPlayerBase + "0x4b0,"; // UCylinderComponent*
                public const string RBPushRadius = mPawnPlayerBase + "0x4b8"; // float
                public const string RBPushStrength = mPawnPlayerBase + "0x4bc"; // float
                public const string DrivenVehicle = mPawnPlayerBase + "0x4c0,"; // AVehicle*
                public const string AlwaysRelevantDistanceSquared = mPawnPlayerBase + "0x4c8"; // float
                public const string VehicleCheckRadius = mPawnPlayerBase + "0x4cc"; // float
                public const string LastHitBy = mPawnPlayerBase + "0x4d0,"; // AController*
                public const string ViewPitchMin = mPawnPlayerBase + "0x4d8"; // float
                public const string ViewPitchMax = mPawnPlayerBase + "0x4dc"; // float
                public const string AllowedYawError = mPawnPlayerBase + "0x4e0"; // int32_t
                public const string DesiredRotation = mPawnPlayerBase + "0x4e4,"; // FRotator
                public const string InventoryManagerClass = mPawnPlayerBase + "0x4f0,"; // AInventoryManager*
                public const string InvManager = mPawnPlayerBase + "0x4f8,"; // AInventoryManager*
                public const string Weapon = mPawnPlayerBase + "0x500,"; // AWeapon*
                public const string FlashLocation = mPawnPlayerBase + "0x508,"; // FVector
                public const string LastFiringFlashLocation = mPawnPlayerBase + "0x514,"; // FVector
                public const string ShotCount = mPawnPlayerBase + "0x520"; // int32_t
                public const string PreRagdollCollisionComponent = mPawnPlayerBase + "0x524,"; // UPrimitiveComponent*
                public const string PhysicsPushBody = mPawnPlayerBase + "0x52c,"; // URB_BodyInstance*
                public const string FailedLandingCount = mPawnPlayerBase + "0x534"; // int32_t
                public const string SlotNodes = mPawnPlayerBase + "0x538,"; // TArray<UAnimNodeSlot*>
                public const string InterpGroupList = mPawnPlayerBase + "0x548,"; // TArray<UInterpGroup*>
                public const string FacialAudioComp = mPawnPlayerBase + "0x558,"; // UAudioComponent*
                public const string MIC_PawnMat = mPawnPlayerBase + "0x560,"; // UMaterialInstanceConstant*
                public const string MIC_PawnHair = mPawnPlayerBase + "0x568,"; // UMaterialInstanceConstant*
                public const string ScalarParameterInterpArray = mPawnPlayerBase + "0x570,"; // TArray<FScalarParameterInterpStruct>
                public const string RootMotionInterpCurve = mPawnPlayerBase + "0x580,"; // FRootMotionCurve
                public const string RootMotionInterpRate = mPawnPlayerBase + "0x5a0"; // float
                public const string RootMotionInterpCurrentTime = mPawnPlayerBase + "0x5a4"; // float
                public const string RootMotionInterpCurveLastValue = mPawnPlayerBase + "0x5a8,"; // FVector
                public const string cfDyingDestroyCheckInitialTime = mPawnPlayerBase + "0x5b4"; // float
                public const string cfDyingDestroyCheckIntervalTime = mPawnPlayerBase + "0x5b8"; // float
                public const string WallSlideMoveOffsetFromWall = mPawnPlayerBase + "0x5bc"; // float
            }

            public class ABrgGameInfoNativeBase
            {
                public const string mGameMode = mGameInfo + "0x5f0,"; // EBrgGameMode
                public const string mHubStartMode = mGameInfo + "0x5f1,"; // EBrgHubStartMode
                public const string MsgpackErrorBehaviour = mGameInfo + "0x5f2,"; // MsgpackManagerErrorBehavior
                public const string mReturnToHubEitemid = mGameInfo + "0x5f4,"; // FString
                public const string mSkillSetupPointLocations = mGameInfo + "0x604,"; // TArray<FVector>
                public const string mCoinLockerLocations = mGameInfo + "0x614,"; // TArray<FVector>
                public const string mDailyRewardBoxLocations = mGameInfo + "0x624,"; // TArray<FVector>
                public const string mEscalatorLocations = mGameInfo + "0x634,"; // TArray<FVector>
                public const string mGameCenterLocations = mGameInfo + "0x644,"; // TArray<FVector>
                public const string mStampTableLocations = mGameInfo + "0x654,"; // TArray<FVector>
                public const string mBalloonLocations = mGameInfo + "0x664,"; // TArray<FVector>
                public const string mButtonLocations = mGameInfo + "0x674,"; // TArray<FVector>
                public const string mSecuritySwitchLocations = mGameInfo + "0x684,"; // TArray<FVector>
                public const string mBossButtonLocations = mGameInfo + "0x694,"; // TArray<FVector>
                public const string mMaterialLocations = mGameInfo + "0x6a4,"; // TArray<FVector>
                public const string mRMapLocations = mGameInfo + "0x6b4,"; // TArray<FVector>
                public const string mMagazineLocations = mGameInfo + "0x6c4,"; // TArray<FVector>
                public const string mVendingMachineLocations = mGameInfo + "0x6d4,"; // TArray<FVector>
                public const string mReceptionLocations = mGameInfo + "0x6e4,"; // TArray<FVector>
                public const string mBreakableObjectLocations = mGameInfo + "0x6f4,"; // TArray<FVector>
                public const string mPartShopLocations = mGameInfo + "0x704,"; // TArray<FVector>
                public const string mSisterPartShopLocations = mGameInfo + "0x714,"; // TArray<FVector>
                public const string mDrinkMachineLocations = mGameInfo + "0x724,"; // TArray<FVector>
                public const string mBodyFreezerLocations = mGameInfo + "0x734,"; // TArray<FVector>
                public const string mFortAssaultLocations = mGameInfo + "0x744,"; // TArray<FVector>
                public const string mSkillExchangeLocations = mGameInfo + "0x754,"; // TArray<FVector>
                public const string mSkillVendingMachineLocations = mGameInfo + "0x764,"; // TArray<FVector>
                public const string mSafeLocations = mGameInfo + "0x774,"; // TArray<FVector>
                public const string mPresentBoxLocations = mGameInfo + "0x784,"; // TArray<FVector>
                public const string mElevator2Locations = mGameInfo + "0x794,"; // TArray<FVector>
                public const string mElevator2_SwitchLocations = mGameInfo + "0x7a4,"; // TArray<FVector>
                public const string mShowTentLocations = mGameInfo + "0x7b4,"; // TArray<FVector>
                public const string mResourceLoadManager = mGameInfo + "0x7c4,"; // UBrgResourceLoadManager*
                public const string mLocalizedResourceManager = mGameInfo + "0x7cc,"; // UBrgLocalizedResourceManager*
                public const string mBrgHUDBase = mGameInfo + "0x7d4,"; // ABrgHUDBase*
                public const string mUIManagerBase = mGameInfo + "0x7dc,"; // UBrgUIManagerBase*
                public const string mDemoSkipUITime = mGameInfo + "0x7e4"; // float
                public const string mNetworkManager = mGameInfo + "0x7e8,"; // TScriptInterface<Class>
                public const string mLangText = mGameInfo + "0x7f8,"; // FString
                public const string mLangSound = mGameInfo + "0x808,"; // FString
                public const string mItemOutlineMinWidth = mGameInfo + "0x818"; // float
                public const string mItemOutlineMaxWidth = mGameInfo + "0x81c"; // float
                public const string mItemOutlineMinDistance = mGameInfo + "0x820"; // float
                public const string mItemOutlineMaxDistance = mGameInfo + "0x824"; // float
                public const string mDefaultMaxDrawDistance = mGameInfo + "0x828"; // float
                public const string mGoreMeshDamageSettings = mGameInfo + "0x82c,"; // TArray<FBrgGoreMeshDamageSetting>

                public class ElevatorLocations : ABrgGameInfoNativeBase
                {
                    public const string ElevatorLocation1_X = mElevator2Locations + "0x00"; // float
                    public const string ElevatorLocation1_Y = mElevator2Locations + "0x04"; // float
                    public const string ElevatorLocation1_Z = mElevator2Locations + "0x08"; // float
                    public const string ElevatorLocation2_X = mElevator2Locations + "0x0C"; // float
                    public const string ElevatorLocation2_Y = mElevator2Locations + "0x10"; // float
                    public const string ElevatorLocation2_Z = mElevator2Locations + "0x14"; // float
                }

                public class EscalatorLocations : ABrgGameInfoNativeBase
                {
                    public const string EscalatorLocation1_X = mEscalatorLocations + "0x00";  // float
                    public const string EscalatorLocation1_Y = mEscalatorLocations + "0x04";  // float
                    public const string EscalatorLocation1_Z = mEscalatorLocations + "0x08";  // float
                    public const string EscalatorLocation2_X = mEscalatorLocations + "0x0C";  // float
                    public const string EscalatorLocation2_Y = mEscalatorLocations + "0x10";  // float
                    public const string EscalatorLocation2_Z = mEscalatorLocations + "0x14";  // float
                    public const string EscalatorLocation3_X = mEscalatorLocations + "0x18";  // float
                    public const string EscalatorLocation3_Y = mEscalatorLocations + "0x1C";  // float
                    public const string EscalatorLocation3_Z = mEscalatorLocations + "0x20";  // float
                    public const string EscalatorLocation4_X = mEscalatorLocations + "0x24";  // float
                    public const string EscalatorLocation4_Y = mEscalatorLocations + "0x28";  // float
                    public const string EscalatorLocation4_Z = mEscalatorLocations + "0x2C";  // float
                    public const string EscalatorLocation5_X = mEscalatorLocations + "0x30";  // float
                    public const string EscalatorLocation5_Y = mEscalatorLocations + "0x34";  // float
                    public const string EscalatorLocation5_Z = mEscalatorLocations + "0x38";  // float
                }

                public class MagazineLocations : ABrgGameInfoNativeBase
                {
                    public const string MagazineLocation_X = mMagazineLocations + "0x00";
                    public const string MagazineLocation_Y = mMagazineLocations + "0x04";
                    public const string MagazineLocation_Z = mMagazineLocations + "0x08";
                }
                public class StampTableLocation : ABrgGameInfoNativeBase
                {
                    public const string StampTable_X = mStampTableLocations + "0x00";
                    public const string StampTable_Y = mStampTableLocations + "0x04";
                    public const string StampTable_Z = mStampTableLocations + "0x08";
                }
                //--------------------------------------------------------------------------------------------------------------
                //--------------------------------------------------------------------------------------------------------------
                public class SkillSetupPoints : ABrgGameInfoNativeBase
                {

                }
                //--------------------------------------------------------------------------------------------------------------
                public class CoinLocker : ABrgGameInfoNativeBase
                {

                }
                //--------------------------------------------------------------------------------------------------------------
                public class DailyRewardBox : ABrgGameInfoNative
                {
                    public const string mbOpen = mDailyRewardBoxArray + "0x00,0x30C"; // Bitmap (36 = Box Closed Timed | 38 = OPEN BOX | 50 = OPENED BOX | 51 = OPENED BOX AND GONE!)
                }

                public class MaterialLocations : ABrgGameInfoNativeBase
                {
                    public const string MaterialLocation1_X = mMaterialLocations + "0x00"; // float 
                    public const string MaterialLocation1_Y = mMaterialLocations + "0x04"; // float
                    public const string MaterialLocation1_Z = mMaterialLocations + "0x08"; // float

                    public const string MaterialLocation2_X = mMaterialLocations + "0x0C"; // float 
                    public const string MaterialLocation2_Y = mMaterialLocations + "0x10"; // float
                    public const string MaterialLocation2_Z = mMaterialLocations + "0x14"; // float

                    public const string MaterialLocation3_X = mMaterialLocations + "0x18"; // float 
                    public const string MaterialLocation3_Y = mMaterialLocations + "0x1C"; // float
                    public const string MaterialLocation3_Z = mMaterialLocations + "0x20"; // float

                    public const string MaterialLocation4_X = mMaterialLocations + "0x24"; // float 
                    public const string MaterialLocation4_Y = mMaterialLocations + "0x28"; // float
                    public const string MaterialLocation4_Z = mMaterialLocations + "0x2C"; // float

                    public const string MaterialLocation5_X = mMaterialLocations + "0x30"; // float 
                    public const string MaterialLocation5_Y = mMaterialLocations + "0x34"; // float
                    public const string MaterialLocation5_Z = mMaterialLocations + "0x38"; // float

                    public const string MaterialLocation6_X = mMaterialLocations + "0x3C"; // float 
                    public const string MaterialLocation6_Y = mMaterialLocations + "0x40"; // float
                    public const string MaterialLocation6_Z = mMaterialLocations + "0x44"; // float

                    public const string MaterialLocation7_X = mMaterialLocations + "0x48"; // float 
                    public const string MaterialLocation7_Y = mMaterialLocations + "0x4C"; // float
                    public const string MaterialLocation7_Z = mMaterialLocations + "0x50"; // float

                    public const string MaterialLocation8_X = mMaterialLocations + "0x54"; // float 
                    public const string MaterialLocation8_Y = mMaterialLocations + "0x58"; // float
                    public const string MaterialLocation8_Z = mMaterialLocations + "0x5C"; // float

                    public const string MaterialLocation9_X = mMaterialLocations + "0x60"; // float 
                    public const string MaterialLocation9_Y = mMaterialLocations + "0x64"; // float
                    public const string MaterialLocation9_Z = mMaterialLocations + "0x68"; // float

                    public const string MaterialLocation10_X = mMaterialLocations + "0x6C"; // float 
                    public const string MaterialLocation10_Y = mMaterialLocations + "0x70"; // float
                    public const string MaterialLocation10_Z = mMaterialLocations + "0x74"; // float

                }
            }

            public class ABrgGameInfoNative : ABrgGameInfoNativeBase
            {
                // Inheritance: ABrgGameInfoNativeBase > AGHM_GameInfo > AGameInfo > AInfo > AActor > UObject
                public const string mPerceptionSoundManager = mGameInfoNative + "0x83c,"; // UBrgPerceptionSoundManager*
                public const string mEquipMawashi = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mGameRestartWait = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbTitleLogoFinished = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mDatabaseIsLoadedCheck = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbTutorial = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbAssaultFortEvent = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbPreAssaultFortEvent = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbFortTutorial = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbFortSimulation = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbFortRevenge = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbTipsEnable = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbDisableInsurance = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbCinematicMode = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string TreatScriptWarningsFatal = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string ScriptStackForScriptWarning = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mLoadingCustomLevel = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbPause = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mMenuGamePause = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mDropItemAccessStep = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mEnableTutorialDisable = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbEnablePerformanceOutput = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbAutoRun = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbEditRun = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbTestStart = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mIsProduction = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mGameStarted = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbDebugQABuild = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mbDebugPAXBuild = mGameInfoNative + "0x844"; // uint32_t : 1
                public const string mPlayerCtrl = mGameInfoNative + "0x848,"; // ABrgPlayerCtrl_BaseNative*
                public const string mEnemyCtrlArray = mGameInfoNative + "0x850,"; // TArray<ABrgAICtrl_EnemyBase*>
                public const string mEnemyCtrlNativeArray = mGameInfoNative + "0x860,"; // TArray<ABrgAICtrl_BaseNative*>
                public const string mNpcCtrlArray = mGameInfoNative + "0x870,"; // TArray<ABrgAICtrl_NpcBase*>
                public const string mPawnArray = mGameInfoNative + "0x880,"; // TArray<ABrgPawn_Base*>
                public const string mPawnNativeArray = mGameInfoNative + "0x890,"; // TArray<ABrgPawn_BaseNative*>
                public const string mPlayerPawn = mGameInfoNative + "0x8a0,"; // ABrgPawn_PlayerBase*
                public const string mPlayerPawnNative = mGameInfoNative + "0x8a8,"; // ABrgPawn_BaseNative*
                public const string mEnemyPawnArray = mGameInfoNative + "0x8b0,"; // TArray<ABrgPawn_EnemyBase*>
                public const string mEnemyPawnNativeArray = mGameInfoNative + "0x8c0,"; // TArray<ABrgPawn_BaseNative*>
                public const string mNormalEnemyPawnArray = mGameInfoNative + "0x8d0,"; // TArray<ABrgPawn_EnemyBase*>
                public const string mTargetArray = mGameInfoNative + "0x8e0,"; // TArray<AActor*>
                public const string mMiddleBossPawnArray = mGameInfoNative + "0x8f0,"; // TArray<ABrgPawn_MiddleBossBase*>
                public const string mBossPawnArray = mGameInfoNative + "0x900,"; // TArray<ABrgPawn_MiddleBossBase*>
                public const string mMiddleBossHunkArray = mGameInfoNative + "0x910,"; // TArray<ABrgPawn_MiddleBossHunk*>
                public const string mMushBeastPawnArray = mGameInfoNative + "0x920,"; // TArray<ABrgPawn_MushBeastBase*>
                public const string mNpcPawnArray = mGameInfoNative + "0x930,"; // TArray<ABrgPawn_NpcBase*>
                public const string mMushroomSoupShopNative = mGameInfoNative + "0x940,"; // ABrgPawn_BaseNative*
                public const string mDecoyPawnArray = mGameInfoNative + "0x948,"; // TArray<ABrgPawn_MushroomDecoy*>
                public const string mRandomGenerateObjectArray = mGameInfoNative + "0x958,"; // TArray<ABrgActor_RandomGenerateObject*>
                public const string mBrgOtherActorArray = mGameInfoNative + "0x968,"; // TArray<AActor*>
                public const string mEnemyTargetPoints = mGameInfoNative + "0x978,"; // TArray<ABrgRandomGenerateEnemyTargetPoint*>
                public const string mDebugEnemyTargetPoints = mGameInfoNative + "0x988,"; // TArray<ABrgRandomGenerateDebugEnemyTargetPoint*>
                public const string mMbossTargetPoints = mGameInfoNative + "0x998,"; // TArray<ABrgRandomGenerateMiddleBossTargetPoint*>
                public const string m4ForceMenTargetPoints = mGameInfoNative + "0x9a8,"; // TArray<ABrgRandomGenerate4ForceMenTargetPoint*>
                public const string mNormalEnemyTargetPoints = mGameInfoNative + "0x9b8,"; // TArray<ABrgRandomGenerateNormalEnemyTargetPoint*>
                public const string mBoss4TreasureBoxTargetPoint = mGameInfoNative + "0x9c8,"; // ABrgTargetPoint_Boss4_TreasureBox*
                public const string mBossNeckTargetPoint = mGameInfoNative + "0x9d0,"; // TArray<ABrgRandomGenerateBossNeckTargetPoint*>
                public const string mWarpPoints = mGameInfoNative + "0x9e0,"; // TArray<ABrgWarpPoint*>
                public const string mLookAtPoints = mGameInfoNative + "0x9f0,"; // TArray<ABrgLookAtPoint*>
                public const string mPathActors = mGameInfoNative + "0xa00,"; // TArray<ABrgPathActor*>
                public const string mMbjWarpTargetPoints = mGameInfoNative + "0xa10,"; // TArray<ABrgMbjWarpTargetPoint*>
                public const string mAreaJumpTargetPoints = mGameInfoNative + "0xa20,"; // TArray<ABrgAreaJumpTargetPoint*>
                public const string mFireballLunchPoints = mGameInfoNative + "0xa30,"; // TArray<ABrgFireballLunchPoint*>
                public const string mBombStarterPoints = mGameInfoNative + "0xa40,"; // TArray<ABrgBombStarterPoint*>
                public const string mPlayerTargetPoints = mGameInfoNative + "0xa50,"; // TArray<ABrgPlayerTargetPoint*>
                public const string mMoveSafeTargetPoints = mGameInfoNative + "0xa60,"; // TArray<ABrgMoveSafeTargetPoint*>
                public const string m4FMRNTargetPoints = mGameInfoNative + "0xa70,"; // TArray<ABrg4FMRNTargetPoint*>
                public const string m4FMPWTargetPoints = mGameInfoNative + "0xa80,"; // TArray<ABrg4FMPWTargetPoint*>
                public const string mBrgPawnPlaceables = mGameInfoNative + "0xa90,"; // TArray<ABrgPawnPlaceable*>
                public const string mEmitterMushrooms = mGameInfoNative + "0xaa0,"; // TArray<ABrgEmitter_Mushroom*>
                public const string mCoinLockerArray = mGameInfoNative + "0xab0,"; // TArray<ABrgActor_CoinLocker*>
                public const string mCoinLockerVolumes = mGameInfoNative + "0xac0,"; // TArray<ABrgVolume_CoinLocker*>
                public const string mCoinLockerTargetPoints = mGameInfoNative + "0xad0,"; // TArray<ABrgRandomGenerateCoinLockerTargetPoint*>
                public const string mPresentBoxArray = mGameInfoNative + "0xae0,"; // TArray<ABrgActor_PresentBox*>
                public const string mPresentBoxVolumes = mGameInfoNative + "0xaf0,"; // TArray<ABrgVolume_PresentBox*>
                public const string mPartShopArray = mGameInfoNative + "0xb00,"; // TArray<ABrgActor_PartShop*>
                public const string mPartShopVolumes = mGameInfoNative + "0xb10,"; // TArray<ABrgVolume_PartShop*>
                public const string mPartShopTargetPoints = mGameInfoNative + "0xb20,"; // TArray<ABrgRandomGeneratePartShopTargetPoint*>
                public const string mMushroomSoupShop = mGameInfoNative + "0xb30,"; // ABrgPawn_MushroomSoupShop*
                public const string mMushroomSoupShopTargetPoints = mGameInfoNative + "0xb38,"; // TArray<ABrgRandomGenerateMushroomSoupShopTargetPoint*>
                public const string mBodyFreezerArray = mGameInfoNative + "0xb48,"; // TArray<ABrgActor_BodyFreezer*>
                public const string mBodyFreezerVolumes = mGameInfoNative + "0xb58,"; // TArray<ABrgVolume_BodyFreezer*>
                public const string mDailyRewardBoxArray = mGameInfoNative + "0xb68,"; // TArray<ABrgActor_DailyRewardBox*>
                public const string mDailyRewardBoxVolumes = mGameInfoNative + "0xb78,"; // TArray<ABrgVolume_DailyRewardBox*>
                public const string mDailyRewardBoxTargetPoints = mGameInfoNative + "0xb88,"; // TArray<ABrgRandomGenerateDailyRewardBoxTargetPoint*>
                public const string mItemVendingMachineVolumes = mGameInfoNative + "0xb98,"; // TArray<ABrgVolume_ItemVendingMachine*>
                public const string mItemVendingMachineTargetPoints = mGameInfoNative + "0xba8,"; // TArray<ABrgRandomGenerateItemVMTargetPoint*>
                public const string mPrisonVolumes = mGameInfoNative + "0xbb8,"; // TArray<ABrgVolume_Prison*>
                public const string mFortTerminalVolumes = mGameInfoNative + "0xbc8,"; // TArray<ABrgVolume_FortTerminal*>
                public const string mGameCenterVolumes = mGameInfoNative + "0xbd8,"; // TArray<ABrgVolume_GameCenter*>
                public const string mStampRallySheetExchangerVolumes = mGameInfoNative + "0xbe8,"; // TArray<ABrgVolume_StampRallySheetExchanger*>
                public const string mPosterTargetPoints = mGameInfoNative + "0xbf8,"; // TArray<ABrgRandomGeneratePosterTargetPoint*>
                public const string mPosterVolumes = mGameInfoNative + "0xc08,"; // TArray<ABrgVolume_Poster*>
                public const string mResultDroneVolumes = mGameInfoNative + "0xc18,"; // TArray<ABrgVolume_ResultDrone*>
                public const string mSafeArray = mGameInfoNative + "0xc28,"; // TArray<ABrgActor_Safe*>
                public const string mSafeVolumes = mGameInfoNative + "0xc38,"; // TArray<ABrgVolume_Safe*>
                public const string mSuperScope703Volumes = mGameInfoNative + "0xc48,"; // TArray<ABrgVolume_SuperScope703*>
                public const string mFortSafeTargetPoints = mGameInfoNative + "0xc58,"; // TArray<ABrgRandomGenerateFortSafeTargetPoint*>
                public const string mFortTankTargetPoints = mGameInfoNative + "0xc68,"; // TArray<ABrgRandomGenerateFortTankTargetPoint*>
                public const string mFortJailTargetPoints = mGameInfoNative + "0xc78,"; // TArray<ABrgRandomGenerateFortJailTargetPoint*>
                public const string mFortAssaultOutVolumes = mGameInfoNative + "0xc88,"; // TArray<ABrgVolume_FortAssaultOut*>
                public const string mBalloonArray = mGameInfoNative + "0xc98,"; // TArray<ABrgActor_Balloon*>
                public const string mBalloonVolumes = mGameInfoNative + "0xca8,"; // TArray<ABrgVolume_Balloon*>
                public const string mBalloonTargetPoints = mGameInfoNative + "0xcb8,"; // TArray<ABrgRandomGenerateBalloonTargetPoint*>
                public const string mStampTableArray = mGameInfoNative + "0xcc8,"; // TArray<ABrgActor_StampTable*>
                public const string mStampRallyPointVolumes = mGameInfoNative + "0xcd8,"; // TArray<ABrgVolume_StampRallyPoint*>
                public const string mStampTableTargetPoints = mGameInfoNative + "0xce8,"; // TArray<ABrgRandomGenerateStampTableTargetPoint*>
                public const string mSisterPartShopArray = mGameInfoNative + "0xcf8,"; // TArray<ABrgActor_SisterPartShop*>
                public const string mSisterPartShopVolumes = mGameInfoNative + "0xd08,"; // TArray<ABrgVolume_SisterPartShop*>
                public const string mSisterPartShopTargetPoints = mGameInfoNative + "0xd18,"; // TArray<ABrgRandomGenerateSisterPartShopTargetPoint*>
                public const string mElevator2_SwitchArray = mGameInfoNative + "0xd28,"; // TArray<ABrgActor_Elevator2_Switch*>
                public const string mElevator2_SwitchVolumes = mGameInfoNative + "0xd38,"; // TArray<ABrgVolume_Elevator2_Switch*>
                public const string mElevator2Volumes = mGameInfoNative + "0xd48,"; // TArray<ABrgVolume_Elevator2*>
                public const string mEscalatorVolumes = mGameInfoNative + "0xd58,"; // TArray<ABrgVolume_Escalator*>
                public const string mEscalatorTargetPoints = mGameInfoNative + "0xd68,"; // TArray<ABrgRandomGenerateEscalatorTargetPoint*>
                public const string mEscalatorParticleTargetPoints = mGameInfoNative + "0xd78,"; // TArray<ABrgRandomGenerateEscalatorParticleTargetPoint*>
                public const string mEscalatorClosedPSTargetPoints = mGameInfoNative + "0xd88,"; // TArray<ABrgRandomGenerateEscalatorClosedPSTargetPoint*>
                public const string mCandleButtonArray = mGameInfoNative + "0xd98,"; // TArray<ABrgActor_CandleButton*>
                public const string mButtonVolumes = mGameInfoNative + "0xda8,"; // TArray<ABrgVolume_Button*>
                public const string mButtonTargetPoints = mGameInfoNative + "0xdb8,"; // TArray<ABrgRandomGenerateButtonTargetPoint*>
                public const string mSecuritySwitchArray = mGameInfoNative + "0xdc8,"; // TArray<ABrgActor_SecuritySwitch*>
                public const string mSecuritySwitchVolumes = mGameInfoNative + "0xdd8,"; // TArray<ABrgVolume_SecuritySwitch*>
                public const string mSecuritySwitchTargetPoints = mGameInfoNative + "0xde8,"; // TArray<ABrgRandomGenerateSecuritySwitchTargetPoint*>
                public const string mBossButtonArray = mGameInfoNative + "0xdf8,"; // TArray<ABrgActor_BossButton*>
                public const string mBossButtonVolumes = mGameInfoNative + "0xe08,"; // TArray<ABrgVolume_BossButton*>
                public const string mBossButtonTargetPoints = mGameInfoNative + "0xe18,"; // TArray<ABrgRandomGenerateBossButtonTargetPoint*>
                public const string mVendingMachineArray = mGameInfoNative + "0xe28,"; // TArray<ABrgActor_VendingMachine*>
                public const string mVendingMachineVolumes = mGameInfoNative + "0xe38,"; // TArray<ABrgVolume_VendingMachine*>
                public const string mVendingMachineTargetPoints = mGameInfoNative + "0xe48,"; // TArray<ABrgRandomGenerateVendingMachineTargetPoint*>
                public const string mReceptionArray = mGameInfoNative + "0xe58,"; // TArray<ABrgActor_Reception*>
                public const string mReceptionVolumes = mGameInfoNative + "0xe68,"; // TArray<ABrgVolume_Reception*>
                public const string mReceptionTargetPoints = mGameInfoNative + "0xe78,"; // TArray<ABrgRandomGenerateReceptionTargetPoint*>
                public const string mReturnBaseMachineArray = mGameInfoNative + "0xe88,"; // TArray<ABrgActor_ReturnBaseMachine*>
                public const string mReturnBaseMachineVolumes = mGameInfoNative + "0xe98,"; // TArray<ABrgVolume_ReturnBaseMachine*>
                public const string mReturnBaseMachineTargetPoints = mGameInfoNative + "0xea8,"; // TArray<ABrgRandomGenerateReturnBaseMachineTargetPoint*>
                public const string mDustShooterArray = mGameInfoNative + "0xeb8,"; // TArray<ABrgActor_DustShooter*>
                public const string mDustShooterVolumes = mGameInfoNative + "0xec8,"; // TArray<ABrgVolume_DustShooter*>
                public const string mDustShooterTargetPoints = mGameInfoNative + "0xed8,"; // TArray<ABrgRandomGenerateDustShooterTargetPoint*>
                public const string mUncleDeathStatueVolumes = mGameInfoNative + "0xee8,"; // TArray<ABrgVolume_UncleDeathStatue*>
                public const string mValveVolumes = mGameInfoNative + "0xef8,"; // TArray<ABrgVolume_Valve*>
                public const string mDoorButtonVolumes = mGameInfoNative + "0xf08,"; // TArray<ABrgVolume_DoorButton*>
                public const string mStartTargetPoints = mGameInfoNative + "0xf18,"; // TArray<ABrgRandomGenerateStartTargetPoint*>
                public const string mGoalTargetPoints = mGameInfoNative + "0xf28,"; // TArray<ABrgRandomGenerateGoalTargetPoint*>
                public const string mBreakableObjectArray = mGameInfoNative + "0xf38,"; // TArray<ABrgActor_BreakableObject*>
                public const string mBreakableObjectTargetPoints = mGameInfoNative + "0xf48,"; // TArray<ABrgRandomGenerateBreakableObjectTargetPoint*>
                public const string mCoinArray = mGameInfoNative + "0xf58,"; // TArray<ABrgActor_Coin*>
                public const string mSpiritArray = mGameInfoNative + "0xf68,"; // TArray<ABrgActor_Spirit*>
                public const string mBloodniumArray = mGameInfoNative + "0xf78,"; // TArray<ABrgActor_Bloodnium*>
                public const string mMagazineTargetPoints = mGameInfoNative + "0xf88,"; // TArray<ABrgRandomGenerateMagazineTargetPoint*>
                public const string mItemTargetPoints = mGameInfoNative + "0xf98,"; // TArray<ABrgRandomGenerateItemTargetPoint*>
                public const string mBeastTargetPoints = mGameInfoNative + "0xfa8,"; // TArray<ABrgRandomGenerateBeastTargetPoint*>
                public const string mMushroomTargetPoints = mGameInfoNative + "0xfb8,"; // TArray<ABrgRandomGenerateMushroomTargetPoint*>
                public const string mInfinityMushCreaterArray = mGameInfoNative + "0xfc8,"; // TArray<ABrgActor_InfinityMushCreater*>
                public const string mInfinityMushroomTargetPoints = mGameInfoNative + "0xfd8,"; // TArray<ABrgRandomGenerateInfinityMushroomTargetPoint*>
                public const string mTreasureArray = mGameInfoNative + "0xfe8,"; // TArray<ABrgActor_Treasure*>
                public const string mTreasureTargetPoints = mGameInfoNative + "0xff8,"; // TArray<ABrgRandomGenerateTreasureTargetPoint*>
                public const string mMineArray = mGameInfoNative + "0x1008,"; // TArray<ABrgObject_Mine*>
                public const string mFireArray = mGameInfoNative + "0x1018,"; // TArray<ABrgObject_Fire*>
                public const string mShootArray = mGameInfoNative + "0x1028,"; // TArray<ABrgBreakableObject_Env*>
                public const string mFortAssaultButtonArray = mGameInfoNative + "0x1038,"; // TArray<ABrgActor_FortAssaultButton*>
                public const string mFortAssaultVolumes = mGameInfoNative + "0x1048,"; // TArray<ABrgVolume_FortAssault*>
                public const string mFortAssaultButtonTargetPoints = mGameInfoNative + "0x1058,"; // TArray<ABrgTargetPoint_FortAssaultButton*>
                public const string mShowTentVolumes = mGameInfoNative + "0x1068,"; // TArray<ABrgVolume_ShowTent*>
                public const string mKariShopVolumes = mGameInfoNative + "0x1078,"; // TArray<ABrgVolume_KariShop*>
                public const string mSkillSetupArray = mGameInfoNative + "0x1088,"; // TArray<ABrgActor_SkillSetup*>
                public const string mSkillSetupPointVolumes = mGameInfoNative + "0x1098,"; // TArray<ABrgVolume_SkillSetupPoint*>
                public const string mSkillSetupTargetPoints = mGameInfoNative + "0x10a8,"; // TArray<ABrgRandomGenerateSkillSetupTargetPoint*>
                public const string mDrinkMachineArray = mGameInfoNative + "0x10b8,"; // TArray<ABrgActor_DrinkMachine*>
                public const string mDrinkMachineVolumes = mGameInfoNative + "0x10c8,"; // TArray<ABrgVolume_DrinkMachine*>
                public const string mSkillVendingMachineArray = mGameInfoNative + "0x10d8,"; // TArray<ABrgActor_SkillVendingMachine*>
                public const string mSkillVendingMachineVolumes = mGameInfoNative + "0x10e8,"; // TArray<ABrgVolume_SkillVendingMachine*>
                public const string mSkillExchangeArray = mGameInfoNative + "0x10f8,"; // TArray<ABrgActor_SkillExchange*>
                public const string mSkillExchangeVolumes = mGameInfoNative + "0x1108,"; // TArray<ABrgVolume_SkillExchange*>
                public const string mPauseTargetActorArray = mGameInfoNative + "0x1118,"; // TArray<AActor*>
                public const string mBrgTargetPointArray = mGameInfoNative + "0x1128,"; // TArray<ABrgTargetPoint*>
                public const string mPrisonSPMetorTargetArray = mGameInfoNative + "0x1138,"; // TArray<AInterpActor*>
                public const string mDontUsePrisonSPMetorTargetArray = mGameInfoNative + "0x1148,"; // TArray<AInterpActor*>
                public const string mPrisonSPLightArray = mGameInfoNative + "0x1158,"; // TArray<AEmitter*>
                public const string mDontUsePrisonSPLightArray = mGameInfoNative + "0x1168,"; // TArray<AEmitter*>
                public const string mPrisonSPToiletArray = mGameInfoNative + "0x1178,"; // TArray<AInterpActor*>
                public const string mDontUsePrisonSPToiletArray = mGameInfoNative + "0x1188,"; // TArray<AInterpActor*>
                public const string mWorldTimeScaleManager = mGameInfoNative + "0x1198,"; // UBrgWorldTimeScaleManager*
                public const string mDebugEditParams = mGameInfoNative + "0x11a0,"; // UBrgUIDebugEditParams*
                public const string mGameObjectVisibleManager = mGameInfoNative + "0x11a8,"; // UBrgGameObjectVisibleManager*
                public const string mCameraNative = mGameInfoNative + "0x11b0,"; // ABrgCameraNative*
                public const string mAIDirector = mGameInfoNative + "0x11b8,"; // UBrgAIDirector*
                public const string mIgnitionObjectManager = mGameInfoNative + "0x11c0,"; // UBrgIgnitionObjectManager*
                public const string mImageTraining = mGameInfoNative + "0x11c8,"; // UBrgImageTraining*
                public const string mPerformanceManager = mGameInfoNative + "0x11d0,"; // UBrgPerformanceManager*
                public const string mJsonObjectManager = mGameInfoNative + "0x11d8,"; // UBrgJsonObjectManager*
                public const string mMoneyVacuumFrame = mGameInfoNative + "0x11e0"; // int32_t
                public const string mEventLog = mGameInfoNative + "0x11e4,"; // UBrgUIMenu_PlayerEventLog*
                public const string mBrgHUD = mGameInfoNative + "0x11ec,"; // ABrgHUD*
                public const string mUIManager = mGameInfoNative + "0x11f4,"; // UBrgUIManager*
                public const string mFloorShopBuyProductFlags = mGameInfoNative + "0x11fc,"; // TArray<char>
                public const string mHeadPartDropHairFadeInStartParam = mGameInfoNative + "0x120c"; // float
                public const string mHeadPartDropHairFadeInTime = mGameInfoNative + "0x1210"; // float
                public const string mGlobalPartInfo = mGameInfoNative + "0x1214,"; // UBrgGlobalPartInfo*
                public const string mAssaultFortResultDetail = mGameInfoNative + "0x121c,"; // FBrgDbAssaultFortResultDetail
                public const string mFortResultAbducted = mGameInfoNative + "0x132c,"; // TArray<FBrgDbFortTakeoutChara>
                public const string mFortResultRescued = mGameInfoNative + "0x133c,"; // TArray<FBrgDbFortTakeoutChara>
                public const string mAssaultFortHateLevel = mGameInfoNative + "0x134c,"; // int32_t
                public const string mHubcustomize = mGameInfoNative + "0x1350,"; // TArray<FBrgDbUserHubCustomize>
                public const string mHubCustomTargetPoints = mGameInfoNative + "0x1360,"; // TArray<UObject*>
                public const string mLastDeltaTime = mGameInfoNative + "0x1370"; // float
                public const string mServerEnv = mGameInfoNative + "0x1374,"; // FString
                public const string mServerEnvName = mGameInfoNative + "0x1384,"; // FString
                public const string mLoginManager = mGameInfoNative + "0x1394,"; // UBrgLoginManagerInterface*
                public const string mChunkManager = mGameInfoNative + "0x139c,"; // UBrgChunkManagerInterface*
                public const string mStageManager = mGameInfoNative + "0x13a4,"; // UBrgStageManager*
                public const string mHubManager = mGameInfoNative + "0x13ac,"; // UBrgHubManager*
                public const string mQuestManager = mGameInfoNative + "0x13b4,"; // UBrgQuestManager*
                public const string mWarManager = mGameInfoNative + "0x13bc,"; // UBrgWarManager*
                public const string mWarMonitorManager = mGameInfoNative + "0x13c4,"; // UBrgWarMonitorManager*
                public const string mDatabase = mGameInfoNative + "0x13cc,"; // UBrgDatabase*
                public const string mDatabaseParam = mGameInfoNative + "0x13d4,"; // UBrgDatabaseParam*
                public const string mReportFrameSkip = mGameInfoNative + "0x13dc,"; // UBrgErrorReport_FrameSkip*
                public const string mUserData = mGameInfoNative + "0x13e4,"; // UBrgUserData*
                public const string mNetworkErrorDialog = mGameInfoNative + "0x13ec,"; // UBrgNetworkErrorDialog*
                public const string mFortBattlePoint = mGameInfoNative + "0x13f4,"; // int32_t
                public const string mPrison = mGameInfoNative + "0x13f8,"; // TArray<FBrgDbUserPrison>
                public const string mOldPrison = mGameInfoNative + "0x1408,"; // TArray<FBrgDbUserPrison>
                public const string mDbDailyRewardBoxArray = mGameInfoNative + "0x1418,"; // TArray<FBrgDbUserDeathbox>
                public const string mIs_imagetraining = mGameInfoNative + "0x1428,"; // int32_t
                public const string mTeams = mGameInfoNative + "0x142c,"; // TArray<FBrgDbTeam>
                public const string mGCManager = mGameInfoNative + "0x143c,"; // UBrgGCManager*
                public const string mConfig = mGameInfoNative + "0x1444,"; // FBrgConfig
                public const string mRandomGenerateLevelManager = mGameInfoNative + "0x1450,"; // UBrgRandomGenerateLevelManager*
                public const string mLevelUnitTestMode = mGameInfoNative + "0x1458,"; // int32_t
                public const string mDebugDebugEntityId = mGameInfoNative + "0x145c,"; // int32_t
                public const string mDebugMenu = mGameInfoNative + "0x1460,"; // UBrgDebugMenu*
                public const string mDbHeadInfos = mGameInfoNative + "0x1468,"; // TArray<FBrgDbListInfo>
                public const string mDbArmInfos = mGameInfoNative + "0x1478,"; // TArray<FBrgDbListInfo>
                public const string mDbBodyInfos = mGameInfoNative + "0x1488,"; // TArray<FBrgDbListInfo>
                public const string mDbLegsInfos = mGameInfoNative + "0x1498,"; // TArray<FBrgDbListInfo>
                public const string mDbBodyAsset_BodyInfos = mGameInfoNative + "0x14a8,"; // TArray<FBrgDbListInfo>
                public const string mDbBodyAsset_HairInfos = mGameInfoNative + "0x14b8,"; // TArray<FBrgDbListInfo>
                public const string mDebugRegion = mGameInfoNative + "0x14c8,"; // FString
                public const string mCntMilliSecondInfos = mGameInfoNative + "0x14d8,"; // TArray<FBrgGameInfo_CntMilliSecondInfo>
                public const string mTitleVersion = mGameInfoNative + "0x14e8,"; // FString
                public const string TempSceneView = mGameInfoNative + "0x14f8,"; // FPointer

                public class UBrgDatabaseParam : ABrgGameInfoNative
                {
                    public const string mbParamInit = mDatabaseParam + "0x60"; // uint32_t : 1
                    public const string mPlayerDownSec = mDatabaseParam + "0x64"; // float
                    public const string mPlayerEnemyDownSec = mDatabaseParam + "0x68"; // float
                    public const string mEnemyDownSec = mDatabaseParam + "0x6c"; // float
                    public const string mDownShortSec = mDatabaseParam + "0x70"; // float
                    public const string mNakedAtkPower = mDatabaseParam + "0x74"; // int32_t
                    public const string mNakedDefPower = mDatabaseParam + "0x78"; // int32_t
                    public const string mAvoidStaminaConsumption = mDatabaseParam + "0x7c"; // float
                    public const string mStepStaminaConsumption = mDatabaseParam + "0x80"; // float
                    public const string mDashStaminaConsumption = mDatabaseParam + "0x84"; // float
                    public const string mDirectAttackStaminaConsumption = mDatabaseParam + "0x88"; // float
                    public const string mGuardStaminaConsumption = mDatabaseParam + "0x8c"; // float
                    public const string mBreakFallStaminaConsumption = mDatabaseParam + "0x90"; // float
                    public const string mAccumuDamageLimit = mDatabaseParam + "0x94"; // float
                    public const string mAccumuDamageRecovery = mDatabaseParam + "0x98"; // float
                    public const string mAccumuDamageCounterRate = mDatabaseParam + "0x9c"; // float
                    public const string mJustGuardDmgReduceRate = mDatabaseParam + "0xa0"; // float
                    public const string mJustGuardStaminaConsumption = mDatabaseParam + "0xa4"; // float
                    public const string mStrAdjustRate = mDatabaseParam + "0xa8"; // float
                    public const string mDexAdjustRate = mDatabaseParam + "0xac"; // float
                    public const string mVitAdjustRate = mDatabaseParam + "0xb0"; // float
                    public const string mCriticalMax = mDatabaseParam + "0xb4"; // int32_t
                    public const string mCriticalCharacteristic = mDatabaseParam + "0xb8"; // int32_t
                    public const string mCriticalCounterAdjust = mDatabaseParam + "0xbc"; // float
                    public const string mCriticalTiredAdjust = mDatabaseParam + "0xc0"; // float
                    public const string mCriticalEyeDamageAdjust = mDatabaseParam + "0xc4"; // float
                    public const string mCriticalFlipAdjust = mDatabaseParam + "0xc8"; // float
                    public const string mDamageCounterSetTime = mDatabaseParam + "0xcc"; // float
                    public const string mDefenceCharacteristic = mDatabaseParam + "0xd0"; // float
                    public const string mFinalAttackAdjust = mDatabaseParam + "0xd4"; // float
                    public const string mBackDirAdjust = mDatabaseParam + "0xd8"; // float
                    public const string mAvoidDmgReductionRate = mDatabaseParam + "0xdc"; // float
                    public const string mAvoidDmgReductionTime = mDatabaseParam + "0xe0"; // float
                    public const string mGuardBaseDmgReduceRate = mDatabaseParam + "0xe4"; // float
                    public const string mGuardProjectileDmgReduceRate = mDatabaseParam + "0xe8"; // float
                    public const string mGuardJackalRebornDmgReduceRate = mDatabaseParam + "0xec"; // float
                    public const string mFallBaseDamagePer = mDatabaseParam + "0xf0"; // float
                    public const string mFallAddDamagePer = mDatabaseParam + "0xf4"; // float
                    public const string mFireKeepDmgPerAttackPowerRate = mDatabaseParam + "0xf8"; // float
                    public const string mAvoidFireKeepDmgTimeAdjustRate = mDatabaseParam + "0xfc"; // float
                    public const string mFireInvalidTolerance = mDatabaseParam + "0x100"; // float
                    public const string mElectInvalidTolerance = mDatabaseParam + "0x104"; // float
                    public const string mPoisonInvalidTolerance = mDatabaseParam + "0x108"; // float
                    public const string mPoisonAccumAdjust = mDatabaseParam + "0x10c"; // float
                    public const string mPoisonAccumLimit = mDatabaseParam + "0x110"; // float
                    public const string mPoisonAccumRecovery = mDatabaseParam + "0x114"; // float
                    public const string mPoisonDamageInterval = mDatabaseParam + "0x118"; // float
                    public const string mPoisonKeepDamageRate = mDatabaseParam + "0x11c"; // float
                    public const string mDeadlyPoisonThreshold = mDatabaseParam + "0x120"; // float
                    public const string mFatalPoisonThreshold = mDatabaseParam + "0x124"; // float
                    public const string mHungrySpeed = mDatabaseParam + "0x128"; // float
                    public const string mHungryHealthRecoveryTime = mDatabaseParam + "0x12c"; // float
                    public const string mHungryHealthRecoveryThreshold = mDatabaseParam + "0x130"; // float
                    public const string mHungryStaminaConsumpUpThreshold = mDatabaseParam + "0x134"; // float
                    public const string mHungryStaminaConsumpUpRate = mDatabaseParam + "0x138"; // float
                    public const string mHungryPlaySEIntarval = mDatabaseParam + "0x13c"; // float
                    public const string mSleepHpRecoveryRate = mDatabaseParam + "0x140"; // float
                    public const string mSmokeEyeDamageTime = mDatabaseParam + "0x144"; // float
                    public const string mSandEyeDamageTime = mDatabaseParam + "0x148"; // float
                    public const string mJackalSpawnStartTime = mDatabaseParam + "0x14c"; // float
                    public const string mJackalSpawnAddProb = mDatabaseParam + "0x150"; // float
                    public const string mJackalSpawnFirstStartProb = mDatabaseParam + "0x154"; // float
                    public const string mJackalSpawnSecondStartProb = mDatabaseParam + "0x158"; // float
                    public const string mJackalSpawnThirdStartProb = mDatabaseParam + "0x15c"; // float
                    public const string mJackalAwakeSpawnDisable = mDatabaseParam + "0x160"; // int32_t
                    public const string mJackalAwakeSpawnStartTime = mDatabaseParam + "0x164"; // float
                    public const string mJackalAwakeSpawnInterval = mDatabaseParam + "0x168"; // float
                    public const string mJackalAwakeSpawnAddProb = mDatabaseParam + "0x16c"; // float
                    public const string mJackalAwakeSpawnFirstStartProb = mDatabaseParam + "0x170"; // float
                    public const string mJackalAwakeSpawnSecondStartProb = mDatabaseParam + "0x174"; // float
                    public const string mJackalAwakeSpawnThirdStartProb = mDatabaseParam + "0x178"; // float
                    public const string mJackalRebornSpawnDisable = mDatabaseParam + "0x17c"; // int32_t
                    public const string mJackalRebornSpawnStartTime = mDatabaseParam + "0x180"; // float
                    public const string mJackalRebornSpawnInterval = mDatabaseParam + "0x184"; // float
                    public const string mJackalRebornSpawnAddProb = mDatabaseParam + "0x188"; // float
                    public const string mJackalRebornSpawnFirstStartProb = mDatabaseParam + "0x18c"; // float
                    public const string mJackalRebornSpawnSecondStartProb = mDatabaseParam + "0x190"; // float
                    public const string mJackalRebornSpawnThirdStartProb = mDatabaseParam + "0x194"; // float
                    public const string mJackalRebornEliteSpawnFloor = mDatabaseParam + "0x198"; // int32_t
                    public const string mJackalSwordCounterRate = mDatabaseParam + "0x19c"; // int32_t
                    public const string mJackalXProjectileDamageRate = mDatabaseParam + "0x1a0"; // float
                    public const string mJackalYProjectileDamageRate = mDatabaseParam + "0x1a4"; // float
                    public const string mJackalZProjectileDamageRate = mDatabaseParam + "0x1a8"; // float
                    public const string mJackalXNormalAtkDamageRate = mDatabaseParam + "0x1ac"; // float
                    public const string mJackalYNormalAtkDamageRate = mDatabaseParam + "0x1b0"; // float
                    public const string mJackalZNormalAtkDamageRate = mDatabaseParam + "0x1b4"; // float
                    public const string mJackalXMedusaDamageRate = mDatabaseParam + "0x1b8"; // float
                    public const string mJackalYMedusaDamageRate = mDatabaseParam + "0x1bc"; // float
                    public const string mJackalZMedusaDamageRate = mDatabaseParam + "0x1c0"; // float
                    public const string mJackalXMushCloakDamageRate = mDatabaseParam + "0x1c4"; // float
                    public const string mJackalYMushCloakDamageRate = mDatabaseParam + "0x1c8"; // float
                    public const string mJackalZMushCloakDamageRate = mDatabaseParam + "0x1cc"; // float
                    public const string mJackalXMushInvincibleDamageRate = mDatabaseParam + "0x1d0"; // float
                    public const string mJackalYMushInvincibleDamageRate = mDatabaseParam + "0x1d4"; // float
                    public const string mJackalZMushInvincibleDamageRate = mDatabaseParam + "0x1d8"; // float
                    public const string mJackalXMushSlowDamageRate = mDatabaseParam + "0x1dc"; // float
                    public const string mJackalYMushSlowDamageRate = mDatabaseParam + "0x1e0"; // float
                    public const string mJackalZMushSlowDamageRate = mDatabaseParam + "0x1e4"; // float
                    public const string mJackalMushDrainDamageRate = mDatabaseParam + "0x1e8"; // float
                    public const string mJackalMushConfusionDamageRate = mDatabaseParam + "0x1ec"; // float
                    public const string mJackalMushDamageRateMin = mDatabaseParam + "0x1f0"; // float
                    public const string mJackalMushNoDmgShortTime = mDatabaseParam + "0x1f4"; // float
                    public const string mJackalProjectileExplosionDamageRate = mDatabaseParam + "0x1f8"; // float
                    public const string mJackalBowlingRageDamageRate = mDatabaseParam + "0x1fc"; // float
                    public const string mJackalXThunderRodDamageRate = mDatabaseParam + "0x200"; // float
                    public const string mJackalYThunderRodDamageRate = mDatabaseParam + "0x204"; // float
                    public const string mJackalZThunderRodDamageRate = mDatabaseParam + "0x208"; // float
                    public const string mJackalFireWorksDamageRate = mDatabaseParam + "0x20c"; // float
                    public const string mJackalXFireWorksRageDamageRate = mDatabaseParam + "0x210"; // float
                    public const string mJackalYFireWorksRageDamageRate = mDatabaseParam + "0x214"; // float
                    public const string mJackalZFireWorksRageDamageRate = mDatabaseParam + "0x218"; // float
                    public const string mJackalXWhiteSteelClawDamageRate = mDatabaseParam + "0x21c"; // float
                    public const string mJackalYWhiteSteelClawDamageRate = mDatabaseParam + "0x220"; // float
                    public const string mJackalZWhiteSteelClawDamageRate = mDatabaseParam + "0x224"; // float
                    public const string mJackalPeckerRageDamageRate = mDatabaseParam + "0x228"; // float
                    public const string mJackalXPeckerDamageRate = mDatabaseParam + "0x22c"; // float
                    public const string mJackalYPeckerDamageRate = mDatabaseParam + "0x230"; // float
                    public const string mJackalZPeckerDamageRate = mDatabaseParam + "0x234"; // float
                    public const string mJackalXAssaultRifleDamageRate = mDatabaseParam + "0x238"; // float
                    public const string mJackalYAssaultRifleDamageRate = mDatabaseParam + "0x23c"; // float
                    public const string mJackalZAssaultRifleDamageRate = mDatabaseParam + "0x240"; // float
                    public const string mJackalXBeamMacheteDamageRate = mDatabaseParam + "0x244"; // float
                    public const string mJackalYBeamMacheteDamageRate = mDatabaseParam + "0x248"; // float
                    public const string mJackalZBeamMacheteDamageRate = mDatabaseParam + "0x24c"; // float
                    public const string mJackalSpearRageDamageRate = mDatabaseParam + "0x250"; // float
                    public const string mJackalXSpearDamageRate = mDatabaseParam + "0x254"; // float
                    public const string mJackalYSpearDamageRate = mDatabaseParam + "0x258"; // float
                    public const string mJackalZSpearDamageRate = mDatabaseParam + "0x25c"; // float
                    public const string mJackalXDrillDamageRate = mDatabaseParam + "0x260"; // float
                    public const string mJackalYDrillDamageRate = mDatabaseParam + "0x264"; // float
                    public const string mJackalZDrillDamageRate = mDatabaseParam + "0x268"; // float
                    public const string mJackalXSniperRifleRageDamageRate = mDatabaseParam + "0x26c"; // float
                    public const string mJackalYSniperRifleRageDamageRate = mDatabaseParam + "0x270"; // float
                    public const string mJackalZSniperRifleRageDamageRate = mDatabaseParam + "0x274"; // float
                    public const string mJackalXBeamSwordDamageRate = mDatabaseParam + "0x278"; // float
                    public const string mJackalYBeamSwordDamageRate = mDatabaseParam + "0x27c"; // float
                    public const string mJackalZBeamSwordDamageRate = mDatabaseParam + "0x280"; // float
                    public const string mJackalXBeamYoyoDamageRate = mDatabaseParam + "0x284"; // float
                    public const string mJackalYBeamYoyoDamageRate = mDatabaseParam + "0x288"; // float
                    public const string mJackalZBeamYoyoDamageRate = mDatabaseParam + "0x28c"; // float
                    public const string mJackalXPoisonRecoveryRate = mDatabaseParam + "0x290"; // float
                    public const string mJackalYPoisonRecoveryRate = mDatabaseParam + "0x294"; // float
                    public const string mJackalZPoisonRecoveryRate = mDatabaseParam + "0x298"; // float
                    public const string mJackalXBobsledProjectileDamageRate = mDatabaseParam + "0x29c"; // float
                    public const string mJackalYBobsledProjectileDamageRate = mDatabaseParam + "0x2a0"; // float
                    public const string mJackalZBobsledProjectileDamageRate = mDatabaseParam + "0x2a4"; // float
                    public const string mJackalXDrillRageDamageRate = mDatabaseParam + "0x2a8"; // float
                    public const string mJackalYDrillRageDamageRate = mDatabaseParam + "0x2ac"; // float
                    public const string mJackalZDrillRageDamageRate = mDatabaseParam + "0x2b0"; // float
                    public const string mJackalXBlackThunderSwordDamageRate = mDatabaseParam + "0x2b4"; // float
                    public const string mJackalYBlackThunderSwordDamageRate = mDatabaseParam + "0x2b8"; // float
                    public const string mJackalZBlackThunderSwordDamageRate = mDatabaseParam + "0x2bc"; // float
                    public const string mJackalArcweldingFootLockTime = mDatabaseParam + "0x2c0"; // float
                    public const string mJackalArcweldingCannonFootLockTime = mDatabaseParam + "0x2c4"; // float
                    public const string mJackalFallToTeleportTime = mDatabaseParam + "0x2c8"; // float
                    public const string mJackalClifAfterTime = mDatabaseParam + "0x2cc"; // float
                    public const string mJackalJumpAfterTime = mDatabaseParam + "0x2d0"; // float
                    public const string mTakeAttackRecoveryGroggyAccum = mDatabaseParam + "0x2d4"; // float
                    public const string mGroggyRoketLauncherTime = mDatabaseParam + "0x2d8"; // float
                    public const string mGroggyHealthRateArray = mDatabaseParam + "0x2dc"; // TArray<float>
                    public const string mGroggyHealthTimeArray = mDatabaseParam + "0x2ec"; // TArray<float>
                    public const string mArcheryChargeAttackMinRate = mDatabaseParam + "0x2fc"; // float
                    public const string mArcherySkillMoveTime = mDatabaseParam + "0x300"; // float
                    public const string mBikeChargeAttackMinRate = mDatabaseParam + "0x304"; // float
                    public const string mBikeChargeTime = mDatabaseParam + "0x308"; // float
                    public const string mShieldDefStaminaRate = mDatabaseParam + "0x30c"; // float
                    public const string mShovelPowerUpSec = mDatabaseParam + "0x310"; // float
                    public const string mShovelPowerUpScale = mDatabaseParam + "0x314"; // float
                    public const string mShovelChargeTime = mDatabaseParam + "0x318"; // float
                    public const string mShovelChargeRate = mDatabaseParam + "0x31c"; // float
                    public const string mPitchingMachinePowerUpSec = mDatabaseParam + "0x320"; // float
                    public const string mBeamYoyoSkillMoveSec = mDatabaseParam + "0x324"; // float
                    public const string mMorningStarChargeSec = mDatabaseParam + "0x328"; // float
                    public const string mMorningStarOverdriveRate = mDatabaseParam + "0x32c"; // float
                    public const string mShotDamageReduction_MorningStar = mDatabaseParam + "0x330"; // float
                    public const string mGuardThroughRateMorningStarAtkNormal = mDatabaseParam + "0x334"; // int32_t
                    public const string mGuardThroughRateMorningStarAtkExtend = mDatabaseParam + "0x338"; // int32_t
                    public const string mChangeBlowRateMorningStarAtkNormal = mDatabaseParam + "0x33c"; // int32_t
                    public const string mChangeBlowRateMorningStarAtkExtend = mDatabaseParam + "0x340"; // int32_t
                    public const string mMorningStarSpecificAddRate = mDatabaseParam + "0x344"; // int32_t
                    public const string mMorningStarGuardDamageReduceRate = mDatabaseParam + "0x348"; // int32_t
                    public const string mMorningStarCounterDamageRate = mDatabaseParam + "0x34c"; // float
                    public const string mPeckerLChargeRate = mDatabaseParam + "0x350"; // float
                    public const string mPeckerRChargeRate = mDatabaseParam + "0x354"; // float
                    public const string mPeckerLChargeTime = mDatabaseParam + "0x358"; // float
                    public const string mPeckerRChargeTime = mDatabaseParam + "0x35c"; // float
                    public const string mStunRodElectTimeChargeRate = mDatabaseParam + "0x360"; // float
                    public const string mTaserGunChargeTime = mDatabaseParam + "0x364"; // float
                    public const string mTaserGunAttachTime = mDatabaseParam + "0x368"; // float
                    public const string mTaserGunElectricAttackInterval = mDatabaseParam + "0x36c"; // float
                    public const string mTaserGunDetachRate = mDatabaseParam + "0x370"; // int32_t
                    public const string mWeaponDrainRate = mDatabaseParam + "0x374"; // float
                    public const string mWeaponDrainRateMax = mDatabaseParam + "0x378"; // float
                    public const string mSkillMoveConvRate = mDatabaseParam + "0x37c"; // float
                    public const string mRecileNotAimAdjustRate = mDatabaseParam + "0x380"; // float
                    public const string mDiffusionNotAimAdjustRate = mDatabaseParam + "0x384"; // float
                    public const string mDefInvincibleTime = mDatabaseParam + "0x388"; // float
                    public const string mFireworksExplodeTime = mDatabaseParam + "0x38c"; // float
                    public const string mFireworksHitInterval = mDatabaseParam + "0x390"; // float
                    public const string mFireBatonPowerUpTime = mDatabaseParam + "0x394"; // float
                    public const string mFireBatonPowerDownTime = mDatabaseParam + "0x398"; // float
                    public const string mFireBatonPowerUpRate = mDatabaseParam + "0x39c"; // float
                    public const string mFireBatonPowerDownRate = mDatabaseParam + "0x3a0"; // float
                    public const string mBikeSandDist = mDatabaseParam + "0x3a4"; // float
                    public const string mBikeSandSpeed = mDatabaseParam + "0x3a8"; // float
                    public const string mSabreJustComboRate0 = mDatabaseParam + "0x3ac"; // int32_t
                    public const string mSabreJustComboRate1 = mDatabaseParam + "0x3b0"; // int32_t
                    public const string mSabreJustComboAtkRate = mDatabaseParam + "0x3b4"; // float
                    public const string mBoxingGloveComboRate = mDatabaseParam + "0x3b8"; // float
                    public const string mBoxingGloveRalityRate = mDatabaseParam + "0x3bc"; // float
                    public const string mBoxingGloveFortRate = mDatabaseParam + "0x3c0"; // float
                    public const string mBoxingGloveChanceRate = mDatabaseParam + "0x3c4"; // float
                    public const string mBoxingGloveDev1Rate = mDatabaseParam + "0x3c8"; // float
                    public const string mBoxingGloveDev2Rate = mDatabaseParam + "0x3cc"; // float
                    public const string mBoxingGloveDev3Rate = mDatabaseParam + "0x3d0"; // float
                    public const string mBoxingGloveDev4Rate = mDatabaseParam + "0x3d4"; // float
                    public const string mBoxingGloveLvl1Rate = mDatabaseParam + "0x3d8"; // float
                    public const string mBoxingGloveLvl2Rate = mDatabaseParam + "0x3dc"; // float
                    public const string mBoxingGloveLvl3Rate = mDatabaseParam + "0x3e0"; // float
                    public const string mBoxingGloveLvl4Rate = mDatabaseParam + "0x3e4"; // float
                    public const string mBoxingGloveLvl5Rate = mDatabaseParam + "0x3e8"; // float
                    public const string mBoxingGloveChanceTime = mDatabaseParam + "0x3ec"; // float
                    public const string mBoxingGloveChanceAddTime = mDatabaseParam + "0x3f0"; // float
                    public const string mBoxingGloveChanceMax = mDatabaseParam + "0x3f4"; // int32_t
                    public const string mBoxingGloveChanceEndKill = mDatabaseParam + "0x3f8"; // int32_t
                    public const string mDamageChargeMax = mDatabaseParam + "0x3fc"; // int32_t
                    public const string mBreakFallRate_1 = mDatabaseParam + "0x400"; // int32_t
                    public const string mBreakFallRate_2 = mDatabaseParam + "0x404"; // int32_t
                    public const string mBreakFallRate_3 = mDatabaseParam + "0x408"; // int32_t
                    public const string mBreakFallRate_4 = mDatabaseParam + "0x40c"; // int32_t
                    public const string mBreakFallRate_5 = mDatabaseParam + "0x410"; // int32_t
                    public const string mBreakFallRate_Jackal = mDatabaseParam + "0x414"; // int32_t
                    public const string mDownDamageDecreaseRate = mDatabaseParam + "0x418"; // float
                    public const string mDownDamageDecreaseRate_4fm_RN = mDatabaseParam + "0x41c"; // float
                    public const string mDownDamageDecreaseRate_Jackals = mDatabaseParam + "0x420"; // float
                    public const string mDuralilityDownAdjustVsEnemy = mDatabaseParam + "0x424"; // float
                    public const string mPlayerEnemyPreShotAimDexStageArray = mDatabaseParam + "0x428"; // TArray<float>
                    public const string mZombieEnemyPreShotAimDexStageArray = mDatabaseParam + "0x438"; // TArray<float>
                    public const string mPlayerEnemyPreShotAimTimeArray = mDatabaseParam + "0x448"; // TArray<float>
                    public const string mZombieEnemyPreShotAimTimeArray = mDatabaseParam + "0x458"; // TArray<float>
                    public const string mPlayerEnemyAvoidRateByLevelMin = mDatabaseParam + "0x468"; // float
                    public const string mPlayerEnemyAvoidRateByLevelMax = mDatabaseParam + "0x46c"; // float
                    public const string mDurDownMushEfct0 = mDatabaseParam + "0x470"; // float
                    public const string mDurDownMushEfct1 = mDatabaseParam + "0x474"; // float
                    public const string mDurDownMushEfct2 = mDatabaseParam + "0x478"; // float
                    public const string mDurDownMushEfct3 = mDatabaseParam + "0x47c"; // float
                    public const string mDurDownMushEfct4 = mDatabaseParam + "0x480"; // float
                    public const string mWhiteSteelHammerExplodeRange_N = mDatabaseParam + "0x484"; // int32_t
                    public const string mWhiteSteelHammerExplodeRange_S = mDatabaseParam + "0x488"; // int32_t
                    public const string mWhiteSteelHammerExplodeRange_D = mDatabaseParam + "0x48c"; // int32_t
                    public const string mWhiteSteelHammerExplodeRange_R3 = mDatabaseParam + "0x490"; // int32_t
                    public const string mWhiteSteelHammerExplodeRange_R4 = mDatabaseParam + "0x494"; // int32_t
                    public const string mWhiteSteelVomitRate = mDatabaseParam + "0x498"; // int32_t
                    public const string mRedNapalmGunGreanadeWeakReactionTime = mDatabaseParam + "0x49c"; // float
                    public const string mRedNapalmGunSkillMoveRotSpeedAdjust = mDatabaseParam + "0x4a0"; // float
                    public const string mRedNapalmGunBulletConsumptionNum0x6 = mDatabaseParam + "0x4a4"; // int32_t
                    public const string mRedNapalmGunBulletSelRangeLv10x6 = mDatabaseParam + "0x4bc"; // int32_t
                    public const string mRedNapalmGunBulletSelRangeLv60x6 = mDatabaseParam + "0x4d4"; // int32_t
                    public const string mRedNapalmGunBulletSelRangeLv100x6 = mDatabaseParam + "0x4ec"; // int32_t
                    public const string mRedNapalmGunBulletAccuracy0x6 = mDatabaseParam + "0x504"; // int32_t
                    public const string mRedNapalmGunBulletNoAimAccuracy = mDatabaseParam + "0x51c"; // int32_t
                    public const string mRedNapalmGunBulletDownDurability0x6 = mDatabaseParam + "0x520"; // int32_t
                    public const string mRedNapalmGunBulletHeadShotScale0x6 = mDatabaseParam + "0x538"; // int32_t
                    public const string mBlackThunderMedusaLife = mDatabaseParam + "0x550"; // int32_t
                    public const string mBlackThunderMedusaDrainMax = mDatabaseParam + "0x554"; // int32_t
                    public const string mBlackThunderAtkDownRateCollision = mDatabaseParam + "0x558"; // float
                    public const string mRageHammerCost = mDatabaseParam + "0x55c"; // float
                    public const string mRageHammerAtkRate = mDatabaseParam + "0x560"; // float
                    public const string mRageMacheteCost = mDatabaseParam + "0x564"; // float
                    public const string mRageMacheteAtkRate = mDatabaseParam + "0x568"; // float
                    public const string mGoreFinishApproachRange = mDatabaseParam + "0x56c"; // float
                    public const string mGoreFinishExpRate = mDatabaseParam + "0x570"; // float
                    public const string mFortAtkUpScale = mDatabaseParam + "0x574"; // float
                    public const string mFortDefUpScale = mDatabaseParam + "0x578"; // float
                    public const string mVomitRate_Dist_00_11 = mDatabaseParam + "0x57c"; // float
                    public const string mVomitRate_Dist_10_21 = mDatabaseParam + "0x580"; // float
                    public const string mVomitRate_Dist_20_31 = mDatabaseParam + "0x584"; // float
                    public const string mVomitRate_Dist_30_41 = mDatabaseParam + "0x588"; // float
                    public const string mVomitRate_Dist_41 = mDatabaseParam + "0x58c"; // float
                    public const string mVomitRate_HpRate_00_11 = mDatabaseParam + "0x590"; // float
                    public const string mVomitRate_HpRate_10_36 = mDatabaseParam + "0x594"; // float
                    public const string mVomitRate_HpRate_35_71 = mDatabaseParam + "0x598"; // float
                    public const string mVomitRate_HpRate_70_101 = mDatabaseParam + "0x59c"; // float
                    public const string mVomitRate_Clazz_00 = mDatabaseParam + "0x5a0"; // float
                    public const string mVomitRate_Clazz_01 = mDatabaseParam + "0x5a4"; // float
                    public const string mVomitRate_Clazz_02 = mDatabaseParam + "0x5a8"; // float
                    public const string mVomitRate_Clazz_03 = mDatabaseParam + "0x5ac"; // float
                    public const string mVomitRate_Clazz_04 = mDatabaseParam + "0x5b0"; // float
                    public const string mRangeInviteOtherEnemies = mDatabaseParam + "0x5b4"; // int32_t
                    public const string mFortTimeLimit = mDatabaseParam + "0x5b8"; // int32_t
                    public const string mFortEnemyAppearInterval = mDatabaseParam + "0x5bc"; // int32_t
                    public const string mFortAlarmTime = mDatabaseParam + "0x5c0"; // float
                    public const string mTDMPoint0x6 = mDatabaseParam + "0x5c4"; // int32_t
                    public const string mBloodniumPoint_Enemy = mDatabaseParam + "0x5dc"; // int32_t
                    public const string mBloodniumPoint_EliteEnemy = mDatabaseParam + "0x5e0"; // int32_t
                    public const string mBloodniumPoint_Zombie = mDatabaseParam + "0x5e4"; // int32_t
                    public const string mBloodniumPoint_NormalEnemy = mDatabaseParam + "0x5e8"; // int32_t
                    public const string mBloodniumPoint_MBoss = mDatabaseParam + "0x5ec"; // int32_t
                    public const string mBloodniumPoint_Boss = mDatabaseParam + "0x5f0"; // int32_t
                    public const string mBlackThunderStageRuleTime = mDatabaseParam + "0x5f4"; // float
                    public const string mBlackThunderStageRuleStartTime = mDatabaseParam + "0x5f8"; // float
                    public const string mBlackThunderStageRuleInterval = mDatabaseParam + "0x5fc"; // float
                    public const string mBlackThunderStageHpUpInterval = mDatabaseParam + "0x600"; // float
                    public const string mBlackThunderStageHpUpRate = mDatabaseParam + "0x604"; // float
                    public const string mBlackThunderStageGaugeUpInterval = mDatabaseParam + "0x608"; // float
                    public const string mBlackThunderStageGaugeUpRate = mDatabaseParam + "0x60c"; // float
                    public const string mBlackThunderStageAtkUpRate = mDatabaseParam + "0x610"; // float
                    public const string mBlackThunderStageFantasyAtkUpRate = mDatabaseParam + "0x614"; // float
                    public const string mBlackThunderStageFantasyDefUpRate = mDatabaseParam + "0x618"; // float
                    public const string mCameraChangeUpdateFlg = mDatabaseParam + "0x61c"; // int32_t
                    public const string mReportFrameSkipSec = mDatabaseParam + "0x620"; // int32_t
                }

                public class UBrgAIDirector : ABrgGameInfoNative
                {
                    public const string mbActive = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbAnyoneAttackToPlayer = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbSearchSurround = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbResearchNaviMesh = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbJackalSpawnCheck = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbJackalSpawnEnable = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbEnemyInNear = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbJudgeAllEnemyKill = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mQuestBossKill = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbPathTestFinish = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbPathTestCreateFalse = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbPathTestList = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mbPathTestLoadUnitReq = mAIDirector + "0x60"; // uint32_t : 1
                    public const string mAILevel = mAIDirector + "0x64"; // int32_t
                    public const string mAttackDelayToRush = mAIDirector + "0x68"; // float
                    public const string mNumTargetToPlayer = mAIDirector + "0x6c"; // int32_t
                    public const string mAdjustTargetDistCnt = mAIDirector + "0x70"; // float
                    public const string mAdjustAggressiveCnt = mAIDirector + "0x74"; // float
                    public const string mbAggressiveEnemy = mAIDirector + "0x78"; // ABrgAICtrl_EnemyBase*
                    public const string mDengerAreaSphereArray = mAIDirector + "0x80"; // TArray<UBrgDengerArea_Sphere*>
                    public const string mEnemyDiedEnd = mAIDirector + "0x90"; // ABrgPawn_EnemyBase*
                    public const string mSetupMineArray = mAIDirector + "0x98"; // TArray<ABrgObject_Mine*>
                    public const string mRelaunchPathingCnt = mAIDirector + "0xa8"; // int32_t
                    public const string meCurrentTickGroup = mAIDirector + "0xac"; // EBrgAITickGroup
                    public const string mTickStateManageAICtrlArray = mAIDirector + "0xb0"; // TArray<ABrgAICtrl_Base*>
                    public const string mJackalSpawnTime = mAIDirector + "0xc0"; // float
                    public const string mJackalSpawnNum = mAIDirector + "0xc4"; // int32_t
                    public const string mJackalSpawnProb = mAIDirector + "0xc8"; // int32_t
                    public const string mJackalSpawnTypeArray = mAIDirector + "0xcc"; // TArray<EBrgJackalType>
                    public const string mJackalSpawnPoint = mAIDirector + "0xdc"; // FVector
                    public const string mJackalTeleportPoint = mAIDirector + "0xe8"; // FVector
                    public const string mJackalSpawnTargetPoint = mAIDirector + "0xf4"; // ABrgMoveSafeTargetPoint*
                    public const string mDeathAICtrl = mAIDirector + "0xfc"; // ABrgAICtrl_Death*
                    public const string mDeathPawn = mAIDirector + "0x104"; // ABrgPawn_RecoveryDeath*
                    public const string mRemainEnemyKill = mAIDirector + "0x10c"; // int32_t
                    public const string mFloorEnemyNum = mAIDirector + "0x110"; // int32_t
                    public const string mShowLevel = mAIDirector + "0x114"; // int32_t
                    public const string mShowAIState = mAIDirector + "0x118"; // int32_t
                    public const string mShowDengerArea = mAIDirector + "0x11c"; // int32_t
                    public const string mCheckNaviMeshOut = mAIDirector + "0x120"; // int32_t
                    public const string mShowEnemyDebugInformation = mAIDirector + "0x124"; // int32_t
                    public const string mShowNormalEnemyDebugInformation = mAIDirector + "0x128"; // int32_t
                    public const string mShowMiddleBossDebugInformation = mAIDirector + "0x12c"; // int32_t
                    public const string mShowMushBeastDebugInformation = mAIDirector + "0x130"; // int32_t
                    public const string mShowEnemyRewardDebugInformation = mAIDirector + "0x134"; // int32_t
                    public const string mShowAreaDebugInformation = mAIDirector + "0x138"; // int32_t
                    public const string mDebugEnemyInfoItems = mAIDirector + "0x13c"; // TArray<FString>
                    public const string mDebugEnemyRewardInfoItems = mAIDirector + "0x14c"; // TArray<FString>
                    public const string mPathTestUnitArray = mAIDirector + "0x15c"; // TArray<FBrgPathTestUnit>
                    public const string mPathTestAICtrlArray = mAIDirector + "0x16c"; // TArray<ABrgAICtrl_CustomChara*>
                    public const string mPathTestTargetPointArray = mAIDirector + "0x17c"; // TArray<FVector>
                    public const string mPathTestErrorArray = mAIDirector + "0x18c"; // TArray<FBrgPathTestError>
                    public const string mPathTestCnt = mAIDirector + "0x19c"; // float
                    public const string mPathTestFinishPerRate = mAIDirector + "0x1a0"; // float
                    public const string mPathTestCreatePosScale = mAIDirector + "0x1a4"; // float
                    public const string mPathTestCurrentIndex = mAIDirector + "0x1a8"; // int32_t
                }

                public class StageManager : ABrgGameInfo
                {
                    public const string cFloorNumber = mStageManager + "0x90"; // uint_32t
                }

                // ABrgPawn_Base Inheritance: ABrgPawn_BaseNative > AGHM_Pawn > AGamePawn > APawn > AActor > UObject
                public class ABrgPawn_Base: ABrgGameInfo
                {
                    #region PLAYER BASE
                    public class PlayerBase : ABrgPawn_Base
                    {
                        public const string pBase = mPawnArray + "0x00"; // int 8 bytes
                        public const string Location_X = mPawnArray + "0x00,0x80"; // float
                        public const string Location_Y = mPawnArray + "0x00,0x84"; // float
                        public const string Location_Z = mPawnArray + "0x00,0x88"; // float
                        public const string DrawScale = mPawnArray + "0x00,0x98"; // float
                        public const string DrawScale3D_X = mPawnArray + "0x00,0x9C"; // float
                        public const string DrawScale3D_Y = mPawnArray + "0x00,0xA0"; // float
                        public const string DrawScale3D_Z = mPawnArray + "0x00,0xA4"; // float
                        public const string Health = mPawnArray + "0x00,0x3CC"; // int
                        public const string HealthMax = mPawnArray + "0x00,0x3D0"; // int
                        public const string Mesh = mPawnArray + "0x00,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mPawnArray + "0x00,0xAD8"; // float
                        public const string mStaminaMax = mPawnArray + "0x00,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent: PlayerBase
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    #endregion
                    #region ENTITY LIST
                    #region NORMAL ENTITIES/BEASTS?
                    public class EntityBase0 : ABrgPawn_Base
                    {
                        public const string eBase0 = mEnemyPawnArray + "0x00"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x00,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x00,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x00,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x00,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x00,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x00,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x00,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x00,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x00,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x00,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x00,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x00,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x00,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase0
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase1 : ABrgPawn_Base
                    {
                        public const string eBase1 = mEnemyPawnArray + "0x08"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x08,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x08,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x08,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x08,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x08,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x08,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x08,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x08,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x08,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x08,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x08,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x08,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x08,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x08,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x08,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x08,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x08,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x08,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x08,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x08,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase1
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase2 : ABrgPawn_Base
                    {
                        public const string eBase2 = mEnemyPawnArray + "0x10"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x10,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x10,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x10,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x10,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x10,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x10,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x10,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x10,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x10,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x10,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x10,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x10,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x10,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x10,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x10,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x10,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x10,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x10,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x10,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x10,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase2
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class EntityBase3 : ABrgPawn_Base
                    {
                        public const string eBase3 = mEnemyPawnArray + "0x18"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x18,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x18,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x18,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x18,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x18,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x18,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x18,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x18,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x18,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x18,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x18,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x18,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x18,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x18,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x18,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x18,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x18,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x18,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x18,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x18,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase3
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class EntityBase4 : ABrgPawn_Base
                    {
                        public const string eBase4 = mEnemyPawnArray + "0x20"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x20,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x20,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x20,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x20,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x20,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x20,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x20,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x20,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x20,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x20,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x20,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x20,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x20,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x20,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x20,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x20,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x20,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x20,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x20,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x20,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase4
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase5 : ABrgPawn_Base
                    {
                        public const string eBase5 = mEnemyPawnArray + "0x28"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x28,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x28,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x28,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x28,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x28,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x28,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x28,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x28,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x28,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x28,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x28,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x28,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x28,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x28,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x28,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x28,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x28,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x28,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x28,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x28,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase5
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase6 : ABrgPawn_Base
                    {
                        public const string eBase6 = mEnemyPawnArray + "0x30"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x30,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x30,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x30,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x30,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x30,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x30,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x30,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x30,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x30,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x30,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x30,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x30,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x30,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x30,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x30,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x30,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x30,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x30,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x30,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x30,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase6
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase7 : ABrgPawn_Base
                    {
                        public const string eBase7 = mEnemyPawnArray + "0x38"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x38,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x38,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x38,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x38,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x38,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x38,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x38,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x38,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x38,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x38,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x38,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x38,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x38,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x38,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x38,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x38,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x38,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x38,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x38,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x38,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase7
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase8 : ABrgPawn_Base
                    {
                        public const string eBase8 = mEnemyPawnArray + "0x40"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x40,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x40,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x40,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x40,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x40,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x40,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x40,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x40,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x40,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x40,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x40,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x40,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x40,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x40,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x40,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x40,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x40,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x40,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x40,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x40,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase8
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase9 : ABrgPawn_Base
                    {
                        public const string eBase9 = mEnemyPawnArray + "0x48"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x48,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x48,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x48,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x48,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x48,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x48,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x48,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x48,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x48,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x48,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x48,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x48,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x48,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x48,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x48,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x48,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x48,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x48,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x48,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x48,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase9
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase10 : ABrgPawn_Base
                    {
                        public const string eBase10 = mEnemyPawnArray + "0x50"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x50,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x50,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x50,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x50,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x50,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x50,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x50,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x50,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x50,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x50,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x50,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x50,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x50,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x50,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x50,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x50,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x50,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x50,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x50,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x50,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase10
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase11 : ABrgPawn_Base
                    {
                        public const string eBase11 = mEnemyPawnArray + "0x58"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x58,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x58,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x58,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x58,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x58,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x58,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x58,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x58,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x58,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x58,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x58,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x58,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x58,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x58,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x58,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x58,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x58,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x58,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x58,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x58,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase11
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase12 : ABrgPawn_Base
                    {
                        public const string eBase12 = mEnemyPawnArray + "0x60"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x60,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x60,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x60,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x60,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x60,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x60,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x60,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x60,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x60,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x60,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x60,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x60,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x60,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x60,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x60,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x60,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x60,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x60,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x60,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x60,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase12
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase13 : ABrgPawn_Base
                    {
                        public const string eBase13 = mEnemyPawnArray + "0x68"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x68,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x68,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x68,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x68,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x68,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x68,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x68,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x68,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x68,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x68,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x68,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x68,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x68,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x68,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x68,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x68,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x68,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x68,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x68,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x68,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase13
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase14 : ABrgPawn_Base
                    {
                        public const string eBase14 = mEnemyPawnArray + "0x70"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x70,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x70,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x70,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x70,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x70,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x70,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x70,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x70,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x70,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x70,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x70,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x70,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x70,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x70,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x70,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x70,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x70,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x70,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x70,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x70,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase14
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase15 : ABrgPawn_Base
                    {
                        public const string eBase15 = mEnemyPawnArray + "0x78"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x78,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x78,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x78,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x78,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x78,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x78,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x78,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x78,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x78,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x78,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x78,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x78,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x78,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x78,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x78,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x78,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x78,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x78,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x78,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x78,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase15
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase16 : ABrgPawn_Base
                    {
                        public const string eBase16 = mEnemyPawnArray + "0x80"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x80,0x80"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x80,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x80,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x80,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x80,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x80,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x80,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x80,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x80,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x80,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x80,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x80,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x80,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x80,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x80,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x80,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x80,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x80,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x80,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x80,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase16
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase17 : ABrgPawn_Base
                    {
                        public const string eBase17 = mEnemyPawnArray + "0x88"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x88,0x88"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x88,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x88,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x88,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x88,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x88,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x88,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x88,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x88,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x88,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x88,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x88,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x88,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x88,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x88,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x88,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x88,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x88,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x88,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x88,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase17
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase18 : ABrgPawn_Base
                    {
                        public const string eBase18 = mEnemyPawnArray + "0x90"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x90,0x90"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x90,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x90,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x90,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x90,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x90,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x90,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x90,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x90,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x90,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x90,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x90,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x90,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x90,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x90,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x90,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x90,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x90,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x90,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x90,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase18
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class EntityBase19 : ABrgPawn_Base
                    {
                        public const string eBase19 = mEnemyPawnArray + "0x98"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0x98,0x98"; // float
                        public const string Location_Y = mEnemyPawnArray + "0x98,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0x98,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0x98,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0x98,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0x98,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0x98,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0x98,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0x98,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x98,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0x98,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0x98,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0x98,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0x98,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0x98,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0x98,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0x98,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0x98,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0x98,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0x98,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase19
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class EntityBase20 : ABrgPawn_Base
                    {
                        public const string eBase20 = mEnemyPawnArray + "0xA0"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0xA0,0xA0"; // float
                        public const string Location_Y = mEnemyPawnArray + "0xA0,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0xA0,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0xA0,0xA0"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0xA0,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0xA0,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0xA0,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0xA0,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0xA0,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0xA0,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0xA0,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0xA0,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0xA0,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0xA0,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0xA0,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0xA0,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0xA0,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0xA0,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0xA0,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0xA0,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase20
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class EntityBase21 : ABrgPawn_Base
                    {
                        public const string eBase20 = mEnemyPawnArray + "0xA8"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0xA8,0xA8"; // float
                        public const string Location_Y = mEnemyPawnArray + "0xA8,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0xA8,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0xA8,0xA8"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0xA8,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0xA8,0xA8"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0xA8,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0xA8,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0xA8,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0xA8,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0xA8,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0xA8,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0xA8,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0xA8,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0xA8,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0xA8,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0xA8,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0xA8,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0xA8,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0xA8,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase21
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class EntityBase22 : ABrgPawn_Base
                    {
                        public const string eBase20 = mEnemyPawnArray + "0xB0"; // int 8 bytes
                        public const string Location_X = mEnemyPawnArray + "0xB0,0xB0"; // float
                        public const string Location_Y = mEnemyPawnArray + "0xB0,0x84"; // float
                        public const string Location_Z = mEnemyPawnArray + "0xB0,0x88"; // float
                        public const string DrawScale = mEnemyPawnArray + "0xB0,0xB0"; // float
                        public const string DrawScale3D_X = mEnemyPawnArray + "0xB0,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnArray + "0xB0,0xB0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnArray + "0xB0,0xA4"; // float
                        public const string Health = mEnemyPawnArray + "0xB0,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnArray + "0xB0,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnArray + "0x80,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnArray + "0xB0,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnArray + "0xB0,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnArray + "0xB0,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnArray + "0xB0,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnArray + "0xB0,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnArray + "0xB0,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnArray + "0xB0,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnArray + "0xB0,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnArray + "0xB0,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnArray + "0xB0,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : EntityBase22
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    #endregion
                    #region HATERS ENTITIES
                    public class HaterBase0 : ABrgPawn_Base
                    {
                        public const string hBase0 = mNormalEnemyPawnArray + "0x00"; // int 8 bytes
                        public const string Location_X = mNormalEnemyPawnArray + "0x00,0x80"; // float
                        public const string Location_Y = mNormalEnemyPawnArray + "0x00,0x84"; // float
                        public const string Location_Z = mNormalEnemyPawnArray + "0x00,0x88"; // float
                        public const string DrawScale = mNormalEnemyPawnArray + "0x00,0x98"; // float
                        public const string DrawScale3D_X = mNormalEnemyPawnArray + "0x00,0x9C"; // float
                        public const string DrawScale3D_Y = mNormalEnemyPawnArray + "0x00,0xA0"; // float
                        public const string DrawScale3D_Z = mNormalEnemyPawnArray + "0x00,0xA4"; // float
                        public const string Health = mNormalEnemyPawnArray + "0x00,0x3CC"; // int
                        public const string HealthMax = mNormalEnemyPawnArray + "0x00,0x3D0"; // int
                        public const string MeshBase = mNormalEnemyPawnArray + "0x00,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mNormalEnemyPawnArray + "0x00,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mNormalEnemyPawnArray + "0x00,0xAD8"; // float
                        public const string mStaminaMax = mNormalEnemyPawnArray + "0x00,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mNormalEnemyPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mNormalEnemyPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mNormalEnemyPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mNormalEnemyPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mNormalEnemyPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mNormalEnemyPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mNormalEnemyPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase0
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion

                    }
                    public class HaterBase00 : ABrgPawn_Base
                    {
                        public const string hBase1 = mEnemyPawnNativeArray + "0x08"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x08,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x08,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x08,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x08,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x08,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x08,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x08,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x08,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x08,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x00,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x08,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x08,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x08,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x08,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x08,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase1
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase1 : ABrgPawn_Base
                    {
                        public const string hBase1 = mEnemyPawnNativeArray + "0x08"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x08,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x08,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x08,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x08,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x08,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x08,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x08,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x08,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x08,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x08,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x08,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x08,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x08,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x08,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x08,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x08,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase1
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase2 : ABrgPawn_Base
                    {
                        public const string hBase2 = mEnemyPawnNativeArray + "0x10"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x10,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x10,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x10,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x10,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x10,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x10,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x10,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x10,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x10,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x10,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x10,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x10,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x10,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x10,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x10,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x10,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x10,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x10,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x10,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x10,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase2
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase3 : ABrgPawn_Base
                    {
                        public const string hBase3 = mEnemyPawnNativeArray + "0x18"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x18,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x18,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x18,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x18,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x18,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x18,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x18,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x18,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x18,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x18,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x18,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x18,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x18,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x18,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x18,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x18,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x18,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x18,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x18,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x18,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase3
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase4 : ABrgPawn_Base
                    {
                        public const string hBase4 = mEnemyPawnNativeArray + "0x20"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x20,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x20,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x20,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x20,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x20,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x20,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x20,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x20,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x20,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x20,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x20,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x20,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x20,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x20,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x20,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x20,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x20,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x20,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x20,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x20,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase4
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase5 : ABrgPawn_Base
                    {
                        public const string hBase5 = mEnemyPawnNativeArray + "0x28"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x28,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x28,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x28,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x28,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x28,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x28,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x28,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x28,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x28,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x28,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x28,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x28,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x28,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x28,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x28,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x28,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x28,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x28,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x28,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x28,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase5
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase6 : ABrgPawn_Base
                    {
                        public const string hBase6 = mEnemyPawnNativeArray + "0x30"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x30,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x30,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x30,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x30,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x30,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x30,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x30,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x30,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x30,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x30,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x30,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x30,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x30,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x30,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x30,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x30,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x30,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x30,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x30,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x30,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase6
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase7 : ABrgPawn_Base
                    {
                        public const string hBase7 = mEnemyPawnNativeArray + "0x38"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x38,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x38,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x38,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x38,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x38,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x38,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x38,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x38,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x38,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x38,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x38,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x38,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x38,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x38,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x38,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x38,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x38,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x38,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x38,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x38,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase7
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class HaterBase8 : ABrgPawn_Base
                    {
                        public const string hBase8 = mEnemyPawnNativeArray + "0x40"; // int 8 bytes
                        public const string Location_X = mEnemyPawnNativeArray + "0x40,0x80"; // float
                        public const string Location_Y = mEnemyPawnNativeArray + "0x40,0x84"; // float
                        public const string Location_Z = mEnemyPawnNativeArray + "0x40,0x88"; // float
                        public const string DrawScale = mEnemyPawnNativeArray + "0x40,0x98"; // float
                        public const string DrawScale3D_X = mEnemyPawnNativeArray + "0x40,0x9C"; // float
                        public const string DrawScale3D_Y = mEnemyPawnNativeArray + "0x40,0xA0"; // float
                        public const string DrawScale3D_Z = mEnemyPawnNativeArray + "0x40,0xA4"; // float
                        public const string Health = mEnemyPawnNativeArray + "0x40,0x3CC"; // int
                        public const string HealthMax = mEnemyPawnNativeArray + "0x40,0x3D0"; // int
                        public const string MeshBase = mEnemyPawnNativeArray + "0x40,0x4A8"; // UBrgSkeletalMeshComponent*
                        public const string Mesh = mEnemyPawnNativeArray + "0x40,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mEnemyPawnNativeArray + "0x40,0xAD8"; // float
                        public const string mStaminaMax = mEnemyPawnNativeArray + "0x40,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x40,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mEnemyPawnNativeArray + "0x40,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mEnemyPawnNativeArray + "0x40,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mEnemyPawnNativeArray + "0x40,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mEnemyPawnNativeArray + "0x40,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mEnemyPawnNativeArray + "0x40,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mEnemyPawnNativeArray + "0x40,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : HaterBase8
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpachBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpachBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    #endregion
                    #endregion
                    #region BEAST LIST
                    public class BeastBase1 : ABrgPawn_Base
                    {
                        public const string bBase1 = mMushBeastPawnArray + "0x00"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x00,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x00,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x00,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x00,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x00,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x00,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x00,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x00,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x00,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x00,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase1
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase2 : ABrgPawn_Base
                    {
                        public const string bBase2 = mMushBeastPawnArray + "0x08"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x08,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x08,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x08,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x08,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x08,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x08,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x08,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x08,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x08,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x08,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x08,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x08,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x08,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x08,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x08,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x08,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x08,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x08,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x08,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase2
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase3 : ABrgPawn_Base
                    {
                        public const string bBase3 = mMushBeastPawnArray + "0x10"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x10,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x10,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x10,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x10,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x10,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x10,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x10,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x10,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x10,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x10,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x10,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x10,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x10,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x10,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x10,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x10,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x10,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x10,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x10,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase3
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase4 : ABrgPawn_Base
                    {
                        public const string bBase4 = mMushBeastPawnArray + "0x18"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x18,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x18,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x18,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x18,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x18,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x18,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x18,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x18,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x18,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x18,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x18,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x18,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x18,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x18,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x18,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x18,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x18,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x18,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x18,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase4
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase5 : ABrgPawn_Base
                    {
                        public const string bBase5 = mMushBeastPawnArray + "0x20"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x20,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x20,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x20,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x20,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x20,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x20,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x20,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x20,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x20,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x20,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x20,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x20,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x20,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x20,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x20,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x20,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x20,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x20,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x20,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase5
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase6 : ABrgPawn_Base
                    {
                        public const string bBase6 = mMushBeastPawnArray + "0x28"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x28,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x28,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x28,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x28,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x28,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x28,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x28,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x28,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x28,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x28,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x28,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x28,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x28,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x28,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x28,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x28,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x28,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x28,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x28,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase6
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase7 : ABrgPawn_Base
                    {
                        public const string bBase7 = mMushBeastPawnArray + "0x30"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x30,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x30,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x30,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x30,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x30,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x30,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x30,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x30,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x30,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x30,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x30,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x30,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x30,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x30,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x30,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x30,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x30,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x30,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x30,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase7
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase8 : ABrgPawn_Base
                    {
                        public const string bBase8 = mMushBeastPawnArray + "0x38"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x38,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x38,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x38,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x38,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x38,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x38,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x38,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x38,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x38,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x38,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x38,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x38,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x38,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x38,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x38,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x38,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x38,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x38,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x38,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase8
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class BeastBase9 : ABrgPawn_Base
                    {
                        public const string bBase5 = mMushBeastPawnArray + "0x40"; // int 8 bytes
                        public const string Location_X = mMushBeastPawnArray + "0x40,0x80"; // float
                        public const string Location_Y = mMushBeastPawnArray + "0x40,0x84"; // float
                        public const string Location_Z = mMushBeastPawnArray + "0x40,0x88"; // float
                        public const string DrawScale = mMushBeastPawnArray + "0x40,0x98"; // float
                        public const string DrawScale3D_X = mMushBeastPawnArray + "0x40,0x9C"; // float
                        public const string DrawScale3D_Y = mMushBeastPawnArray + "0x40,0xA0"; // float
                        public const string DrawScale3D_Z = mMushBeastPawnArray + "0x40,0xA4"; // float
                        public const string Health = mMushBeastPawnArray + "0x40,0x3CC"; // int
                        public const string HealthMax = mMushBeastPawnArray + "0x40,0x3D0"; // int
                        public const string Mesh = mMushBeastPawnArray + "0x40,0x4A8,"; // UBrgSkeletalMeshComponent*
                        public const string mStamina = mMushBeastPawnArray + "0x40,0xAD8"; // float
                        public const string mStaminaMax = mMushBeastPawnArray + "0x40,0xADC"; // float
                        public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x40,0xEB4"; // float (180 = Default Value)
                        public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x40,0xEC4"; // float (540 = Default Value)
                        public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x40,0xEC8"; // float (850 = Default Value)
                        public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x40,0xED0"; // float (150 = Default Value)
                        public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x40,0xED4"; // float (450 = Default Value)
                        public const string mJumpStartPower = mMushBeastPawnArray + "0x40,0x1500"; // float (1100 = Default Value)
                        public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x40,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : BeastBase9
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    #endregion
                }

                public class ABrgActor_Treasure : ABrgGameInfo
                {
                    public class TreasureBase1 : ABrgPawn_Base
                    {
                        public const string mTreasureBase1 = mTreasureArray + "0X00"; // int
                        public const string Location_X = mTreasureArray + "0x00,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x00,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x00,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x00,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x00,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x00,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x00,0xA4"; // float
                        public const string Health = mTreasureArray + "0x00,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x00,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x00,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase1
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase2 : ABrgPawn_Base
                    {
                        public const string mTreasureBase2 = mTreasureArray + "0X8"; // int
                        public const string Location_X = mTreasureArray + "0x08,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x08,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x08,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x08,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x08,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x08,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x08,0xA4"; // float
                        public const string Health = mTreasureArray + "0x08,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x08,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x08,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase2
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase3 : ABrgPawn_Base
                    {
                        public const string mTreasureBase3 = mTreasureArray + "0X10"; // int
                        public const string Location_X = mTreasureArray + "0x10,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x10,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x10,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x10,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x10,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x10,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x10,0xA4"; // float
                        public const string Health = mTreasureArray + "0x10,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x10,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x10,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase3
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase4 : ABrgPawn_Base
                    {
                        public const string mTreasureBase4 = mTreasureArray + "0X18"; // int
                        public const string Location_X = mTreasureArray + "0x18,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x18,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x18,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x18,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x18,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x18,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x18,0xA4"; // float
                        public const string Health = mTreasureArray + "0x18,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x18,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x18,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase4
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase5 : ABrgPawn_Base
                    {
                        public const string mTreasureBase5 = mTreasureArray + "0X20"; // int
                        public const string Location_X = mTreasureArray + "0x20,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x20,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x20,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x20,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x20,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x20,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x20,0xA4"; // float
                        public const string Health = mTreasureArray + "0x20,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x20,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x20,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase5
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase6 : ABrgPawn_Base
                    {
                        public const string mTreasureBase6 = mTreasureArray + "0X28"; // int
                        public const string Location_X = mTreasureArray + "0x28,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x28,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x28,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x28,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x28,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x28,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x28,0xA4"; // float
                        public const string Health = mTreasureArray + "0x28,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x28,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x28,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase6
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase7 : ABrgPawn_Base
                    {
                        public const string mTreasureBase7 = mTreasureArray + "0X30"; // int
                        public const string Location_X = mTreasureArray + "0x30,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x30,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x30,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x30,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x30,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x30,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x30,0xA4"; // float
                        public const string Health = mTreasureArray + "0x30,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x30,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x30,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase7
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase8 : ABrgPawn_Base
                    {
                        public const string mTreasureBase8 = mTreasureArray + "0X38"; // int
                        public const string Location_X = mTreasureArray + "0x38,0x80"; // float
                        public const string Location_Y = mTreasureArray + "0x38,0x84"; // float
                        public const string Location_Z = mTreasureArray + "0x38,0x88"; // float
                        public const string DrawScale = mTreasureArray + "0x38,0x98"; // float
                        public const string DrawScale3D_X = mTreasureArray + "0x38,0x9C"; // float
                        public const string DrawScale3D_Y = mTreasureArray + "0x38,0xA0"; // float
                        public const string DrawScale3D_Z = mTreasureArray + "0x38,0xA4"; // float
                        public const string Health = mTreasureArray + "0x38,0x3CC"; // int
                        public const string HealthMax = mTreasureArray + "0x38,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x38,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase8
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase9 : ABrgPawn_Base
                    {
                        public const string mTreasureBase9 = mTreasureArray + "0X40"; // int
                        //public const string Location_X = mMushBeastPawnArray + "0x40,0x80"; // float
                        //public const string Location_Y = mMushBeastPawnArray + "0x40,0x84"; // float
                        //public const string Location_Z = mMushBeastPawnArray + "0x40,0x88"; // float
                        //public const string DrawScale = mMushBeastPawnArray + "0x40,0x98"; // float
                        //public const string DrawScale3D_X = mMushBeastPawnArray + "0x40,0x9C"; // float
                        //public const string DrawScale3D_Y = mMushBeastPawnArray + "0x40,0xA0"; // float
                        //public const string DrawScale3D_Z = mMushBeastPawnArray + "0x40,0xA4"; // float
                        //public const string Health = mMushBeastPawnArray + "0x40,0x3CC"; // int
                        //public const string HealthMax = mMushBeastPawnArray + "0x40,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x40,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase9
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                    public class TreasureBase10 : ABrgPawn_Base
                    {
                        public const string mTreasureBase10 = mTreasureArray + "0X48"; // int
                        //public const string Location_X = mMushBeastPawnArray + "0x48,0x80"; // float
                        //public const string Location_Y = mMushBeastPawnArray + "0x48,0x84"; // float
                        //public const string Location_Z = mMushBeastPawnArray + "0x48,0x88"; // float
                        //public const string DrawScale = mMushBeastPawnArray + "0x48,0x98"; // float
                        //public const string DrawScale3D_X = mMushBeastPawnArray + "0x48,0x9C"; // float
                        //public const string DrawScale3D_Y = mMushBeastPawnArray + "0x48,0xA0"; // float
                        //public const string DrawScale3D_Z = mMushBeastPawnArray + "0x48,0xA4"; // float
                        //public const string Health = mMushBeastPawnArray + "0x48,0x3CC"; // int
                        //public const string HealthMax = mMushBeastPawnArray + "0x48,0x3D0"; // int
                        public const string Mesh = mTreasureArray + "0x48,0x4E4,"; // UBrgSkeletalMeshComponent*
                        //public const string mStamina = mMushBeastPawnArray + "0x00,0xAD8"; // float
                        //public const string mStaminaMax = mMushBeastPawnArray + "0x00,0xADC"; // float
                        //public const string mWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEB4"; // float (180 = Default Value)
                        //public const string mRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC4"; // float (540 = Default Value)
                        //public const string mDashSpeedPerSecond = mMushBeastPawnArray + "0x00,0xEC8"; // float (850 = Default Value)
                        //public const string mCarryWalkSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED0"; // float (150 = Default Value)
                        //public const string mCarryRunSpeedPerSecond = mMushBeastPawnArray + "0x00,0xED4"; // float (450 = Default Value)
                        //public const string mJumpStartPower = mMushBeastPawnArray + "0x00,0x1500"; // float (1100 = Default Value)
                        //public const string mSkillMoveGaugeStockNum = mMushBeastPawnArray + "0x00,0x4C78"; // int

                        #region UBrgSkeletalMeshComponent Class
                        public class UBrgSkeletalMeshComponent : TreasureBase10
                        {
                            public const string SkeletalMesh = Mesh + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = Mesh + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = Mesh + "0x288,"; // UAnimTree*
                            public const string Animations = Mesh + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = Mesh + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = Mesh + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = Mesh + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = Mesh + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = Mesh + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = Mesh + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = Mesh + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = Mesh + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = Mesh + "0x300"; // float
                            public const string GlobalAnimRateScale = Mesh + "0x304"; // float
                            public const string StreamingDistanceMultiplier = Mesh + "0x308"; // float
                            public const string MeshObject = Mesh + "0x30c,"; // FPointer
                            public const string WireframeColor = Mesh + "0x314,"; // FColor
                            public const string SpaceBases = Mesh + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = Mesh + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = Mesh + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = Mesh + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = Mesh + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = Mesh + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = Mesh + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = Mesh + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = Mesh + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = Mesh + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = Mesh + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = Mesh + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = Mesh + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = Mesh + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = Mesh + "0x3d0"; // int32_t
                            public const string RequiredBones = Mesh + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = Mesh + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = Mesh + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = Mesh + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = Mesh + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = Mesh + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = Mesh + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = Mesh + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = Mesh + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = Mesh + "0x45c,"; // TMap<None, None>
                            public const string Attachments = Mesh + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = Mesh + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = Mesh + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = Mesh + "0x4d4"; // int32_t
                            public const string MinLodModel = Mesh + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = Mesh + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = Mesh + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = Mesh + "0x4e4"; // float
                            public const string AnimationLODFrameRate = Mesh + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = Mesh + "0x4ec"; // float
                            public const string ChunkIndexPreview = Mesh + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = Mesh + "0x4f4"; // int32_t
                            public const string bForceWireframe = Mesh + "0x4f8"; // int32_t
                            public const string bForceRefpose = Mesh + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = Mesh + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = Mesh + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = Mesh + "0x508"; // int32_t
                            public const string bShowPrePhysBones = Mesh + "0x50c"; // int32_t
                            public const string bHideSkin = Mesh + "0x510"; // int32_t
                            public const string bForceRawOffset = Mesh + "0x514"; // int32_t
                            public const string bIgnoreControllers = Mesh + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = Mesh + "0x51c"; // int32_t
                            public const string TickTag = Mesh + "0x520"; // int32_t
                            public const string InitTag = Mesh + "0x524"; // int32_t
                            public const string CachedAtomsTag = Mesh + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = Mesh + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = Mesh + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = Mesh + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = Mesh + "0x538"; // float
                            public const string FramesPhysicsAsleep = Mesh + "0x53c"; // int32_t
                            public const string bHasValidBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = Mesh + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = Mesh + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = Mesh + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = Mesh + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = Mesh + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = Mesh + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = Mesh + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = Mesh + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = Mesh + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = Mesh + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = Mesh + "0x540"; // uint32_t : 1
                            public const string bUseRawData = Mesh + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = Mesh + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = Mesh + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = Mesh + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = Mesh + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = Mesh + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = Mesh + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = Mesh + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = Mesh + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = Mesh + "0x548,"; // FVector
                            public const string bEnableClothSimulation = Mesh + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = Mesh + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = Mesh + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = Mesh + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = Mesh + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = Mesh + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = Mesh + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = Mesh + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = Mesh + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = Mesh + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = Mesh + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = Mesh + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = Mesh + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = Mesh + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = Mesh + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = Mesh + "0x584,"; // FRotator
                            public const string ClothExternalForce = Mesh + "0x590,"; // FVector
                            public const string ClothWind = Mesh + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = Mesh + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = Mesh + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = Mesh + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = Mesh + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = Mesh + "0x5c0"; // float
                            public const string MinPosDampRange = Mesh + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = Mesh + "0x5d0,"; // FVector
                            public const string MinPosDampScale = Mesh + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = Mesh + "0x5e8,"; // FVector
                            public const string ClothSim = Mesh + "0x5f4,"; // FPointer
                            public const string SceneIndex = Mesh + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = Mesh + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = Mesh + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = Mesh + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = Mesh + "0x630"; // int32_t
                            public const string NumClothMeshIndices = Mesh + "0x634"; // int32_t
                            public const string ClothMeshParentData = Mesh + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = Mesh + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = Mesh + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = Mesh + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = Mesh + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = Mesh + "0x67c"; // int32_t
                            public const string ClothRBChannel = Mesh + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = Mesh + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = Mesh + "0x688"; // float
                            public const string ClothImpulseScale = Mesh + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = Mesh + "0x690"; // float
                            public const string bClothUseCompartment = Mesh + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = Mesh + "0x698"; // float
                            public const string LastClothLocation = Mesh + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = Mesh + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = Mesh + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = Mesh + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = Mesh + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = Mesh + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = Mesh + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = Mesh + "0x6c4"; // float
                            public const string bSkipInitClothing = Mesh + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = Mesh + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = Mesh + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = Mesh + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = Mesh + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = Mesh + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = Mesh + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = Mesh + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = Mesh + "0x704"; // float
                            public const string bSoftBodyFrozen = Mesh + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = Mesh + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = Mesh + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = Mesh + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = Mesh + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = Mesh + "0x714,"; // FPointer
                            public const string LimitMaterial = Mesh + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = Mesh + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = Mesh + "0x750,"; // FVector
                            public const string RootBoneTranslation = Mesh + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = Mesh + "0x768,"; // FVector
                            public const string RootMotionMode = Mesh + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = Mesh + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = Mesh + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = Mesh + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = Mesh + "0x778"; // int32_t
                            public const string RootMotionRotationMode = Mesh + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = Mesh + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = Mesh + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = Mesh + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = Mesh + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = Mesh + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = Mesh + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = Mesh + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = Mesh + "0x7c4,"; // char
                            public const string MorphTargetsQueried = Mesh + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = Mesh + "0x7d8"; // uint32_t : 1
                        }
                        #endregion
                    }
                }

                // UBrgStageManager Inheritance: ABrgGameInfo > ABrgGameInfoNativeBase > AGHM_GameInfo > AGameInfo > AInfo > AActor > UObject
                public class UBrgStageManager : ABrgGameInfo
                {
                    public const string mCurrentFloor = mStageManager + "0x60,"; // FBrgDbFloor
                    public const string mCurrentFort = mStageManager + "0x294,"; // FBrgDbFort
                    public const string mCurrentFloorMsgs = mStageManager + "0x468,"; // TArray<FString>
                    public const string mIsError = mStageManager + "0x478"; // uint32_t : 1
                    public const string mStartFloorCalled = mStageManager + "0x478"; // uint32_t : 1
                    public const string mSkipStartFloor = mStageManager + "0x478"; // uint32_t : 1
                    public const string mIgnoreSkipStartFloor = mStageManager + "0x478"; // uint32_t : 1
                    public const string mIsUpElevator = mStageManager + "0x478"; // uint32_t : 1
                    public const string mIsVipElevator = mStageManager + "0x478"; // uint32_t : 1
                    public const string mIsFirstTimeArea = mStageManager + "0x478"; // uint32_t : 1
                    public const string mFinishedCallingStarthubApiForEditor = mStageManager + "0x478"; // uint32_t : 1
                    public const string mStarthubIsCalled = mStageManager + "0x478"; // uint32_t : 1
                    public const string mIsRemoveEntityMode = mStageManager + "0x478"; // uint32_t : 1
                    public const string mDbDeffenceFortHubState = mStageManager + "0x47c,"; // FBrgDbDeffenceFortHubState
                    public const string mResStartfloorParam = mStageManager + "0x4dc,"; // UBrgNetworkResponseStartfloor*
                    public const string mResClearfloorParam = mStageManager + "0x4e4,"; // UBrgNetworkResponseClearfloor*
                    public const string mResMovefloorParam = mStageManager + "0x4ec,"; // UBrgNetworkResponseMovefloor*
                    public const string mResTakeElevatorParam = mStageManager + "0x4f4,"; // UBrgNetworkResponseTakeelv*
                    public const string mResArrivefloorParam = mStageManager + "0x4fc,"; // UBrgNetworkResponseArrival*
                    public const string mResDbgStartfloorParam = mStageManager + "0x504,"; // UBrgNetworkResponseDbg_startfloor*
                    public const string mResDbgClearfloorParam = mStageManager + "0x50c,"; // UBrgNetworkResponseDbg_clearfloor*
                    public const string mResDbgMovefloorParam = mStageManager + "0x514,"; // UBrgNetworkResponseDbg_movefloor*
                    public const string mResDbgTakeElevatorParam = mStageManager + "0x51c,"; // UBrgNetworkResponseDbg_takeelv*
                    public const string mErrorCode = mStageManager + "0x524,"; // FString
                    public const string mErrorMessage = mStageManager + "0x534,"; // FString
                    public const string mStatusExceptionCode = mStageManager + "0x544"; // int32_t
                    public const string mAreaTemplateInfo = mStageManager + "0x548,"; // FBrgDbAreaTemplateInfo
                    public const string mpAreaInfo = mStageManager + "0x598,"; // FPointer
                    public const string mpAreaTemplateRepository = mStageManager + "0x5a0,"; // FPointer
                    public const string mpCurrentAreaTemplate = mStageManager + "0x5a8,"; // FPointer
                    public const string mpPrebiosAreaTemplate = mStageManager + "0x5b0,"; // FPointer
                    public const string mCurrentAreaTemplateId = mStageManager + "0x5b8,"; // FString
                    public const string mCurrentFloorId = mStageManager + "0x5c8,"; // FString
                    public const string mCurrentAreaId = mStageManager + "0x5d8,"; // FString
                    public const string mCurrentUnitId = mStageManager + "0x5e8,"; // FString
                    public const string mCurrentRefAreaId = mStageManager + "0x5f8,"; // FString
                    public const string mPrevFloorId = mStageManager + "0x608,"; // FString
                    public const string mPrevAreaId = mStageManager + "0x618,"; // FString
                    public const string mPrevRefAreaId = mStageManager + "0x628,"; // FString
                    public const string mPrevUnitId = mStageManager + "0x638,"; // FString
                    public const string mFloorMoveMethod = mStageManager + "0x648,"; // EBrgFloorMoveMethod
                    public const string mRequestElevatorStopFloorId = mStageManager + "0x64c,"; // FString
                    public const string mRefEscalatorUnits = mStageManager + "0x65c,"; // TArray<FBrgRefEscalatorUnit>
                    public const string mAreaMapCashFloorId = mStageManager + "0x66c,"; // FString
                    public const string mAreaMapCashAreaId = mStageManager + "0x67c,"; // FString
                    public const string mAreaMapCashFloorNo = mStageManager + "0x68c"; // int32_t
                    public const string mResDbgStarthub = mStageManager + "0x690,"; // UBrgNetworkResponseDbg_starthub*
                    public const string RetryCount = mStageManager + "0x698"; // int32_t
                    public const string RetryTimer = mStageManager + "0x69c"; // float
                    public const string RetryTimerDef = mStageManager + "0x6a0"; // float
                    public const string mRemoveZmbs = mStageManager + "0x6a4,"; // TArray<FString>
                    public const string mRemoveZks = mStageManager + "0x6b4,"; // TArray<FString>
                    public const string mRemoveTrbs = mStageManager + "0x6c4,"; // TArray<FString>
                    public const string mRemoveMsrs = mStageManager + "0x6d4,"; // TArray<FString>
                    public const string mRemoveBsts = mStageManager + "0x6e4,"; // TArray<FString>
                    public const string mRemoveItems = mStageManager + "0x6f4,"; // TArray<FString>
                    public const string mRemoveVms = mStageManager + "0x704,"; // TArray<FString>
                    public const string mRemoveBos = mStageManager + "0x714,"; // TArray<FString>
                    public const string mRemovePts = mStageManager + "0x724,"; // TArray<FString>
                    public const string mEscLogFloorName = mStageManager + "0x734,"; // FString

                    // FBrgDbFloor Inheritance: UBrgStageManager > ABrgGameInfo > ABrgGameInfoNativeBase > AGHM_GameInfo > AGameInfo > AInfo > AActor > UObject
                    public class FBrgDbFloor: UBrgStageManager
                    {

                    }
                }

                // UBrgWorldTimeScaleManager Inheritance: ABrgGameInfo > ABrgGameInfoNativeBase > AGHM_GameInfo > AGameInfo > AInfo > AActor > UObject
                public class UBrgWorldTimeScaleManager : ABrgGameInfo
                {
                    public const string mAnims0x8 = mWorldTimeScaleManager + "0x60,"; // FBrgTimeScaleAnim
                    public const string mDefaultTimeScale = mWorldTimeScaleManager + "0x200"; // float
                    public const string mMatineeTimeScale = mWorldTimeScaleManager + "0x204"; // float
                    public const string mCurrentTimeScale = mWorldTimeScaleManager + "0x208"; // float
                    public const string mGameInfo = mWorldTimeScaleManager + "0x20c,"; // ABrgGameInfoNative*
                    public const string mbShowHUD = mWorldTimeScaleManager + "0x214"; // uint32_t : 1
                    public const string __OnFinishTimeScaleAnim__Delegate = mWorldTimeScaleManager + "0x218,"; // DelegateProperty
                }
            }

            public class ABrgGameInfo : ABrgGameInfoNative
            {
                // Inheritance: ABrgGameInfoNative > ABrgGameInfoNativeBase > AGHM_GameInfo > AGameInfo > AInfo > AActor > UObject
                public const string mLaunchProcessState = mGameInfo + "0x1500,"; // LaunchProcessState
                public const string mTickAsyncState = mGameInfo + "0x1501,"; // BrgGameInfo_TickAsyncState
                public const string mTerminateReason = mGameInfo + "0x1502,"; // BrgGameInfo_TerminateReason
                public const string meSpawnCurrentTickGroup = mGameInfo + "0x1503,"; // EBrgAITickGroup
                public const string meKnockbackType = mGameInfo + "0x1504,"; // EBrgKnockbackType
                public const string mGameStartType = mGameInfo + "0x1505,"; // EBrgGameStartType
                public const string meLockonType = mGameInfo + "0x1506,"; // ELockonType
                public const string mAssaultFortResult = mGameInfo + "0x1507,"; // EBrgAssaultFortResult
                public const string mRGOState = mGameInfo + "0x1508,"; // EBrgRandomGenerateObjectsState
                public const string mFourForcemenStageLevel = mGameInfo + "0x1509,"; // EBrgFourForcemenStage
                public const string mPartDurRepairPrice = mGameInfo + "0x150c"; // int32_t
                public const string mTGSUIMode = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mSetupNetworkDebugMenu = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mUserDataLoadStart = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mUserDataIsLoadedCheck = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mPlayerFirstSetup = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbPlayerEmergency = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbPlayerEmergencyRemoteEvent = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mContinueRevival = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbInBossStage = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbPreLevelBossStage = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbNPCTalking = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbAllSkillMoveDisable = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbInGunkanyamaBattle = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbInPreGunkanyamaBattle = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbPostProcessChainInitialized = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbPS3SystemMenuPaused = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbEnableSavePoint = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbPartialPause = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbTickDuringAsyncWorkDisable = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mStampRallyPointFlag = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mBalloonFlag = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mDisableGenerateDebugEnemy = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbInGameCenter = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckDizzyPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckHappyPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckMidBossPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckGoreFinishPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckGoreAuguryPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckEnlightenmentPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckSlowMotionPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckTriptaminePostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckUpper41fPostProcess = mGameInfo + "0x1510"; // uint32_t : 1
                public const string mbOffCheckUpper51fPostProcess = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbOffCheckSuperScope703PostProcess = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbRunSlowMotionPostProcess = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mOnMemoryResLoad = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbReqGameModeChangePlayer = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbDeadInfoOutputCancel = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbIgnoreDeadInfoOutputCancel = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbSoundMute = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbSuppressOutputLogTitle = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mGasCoinIsUsedInsteadOfDeathMetal_DeathBagExpand = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mGasCoinIsUsedInsteadOfDeathMetal_CoinLockerExpand = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mGasCoinIsUsedInsteadOfDeathMetal_Continue = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mDebugMushroom = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mDebugItem = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbPluralSpawn = mGameInfo + "0x1514"; // uint32_t : 1
                public const string DebugFloorRestarting = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mbThisFrameRenderTickProcessed = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mRGOIsFortMode = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mSteamNetworkErrorExit = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mDisableDebugMenu = mGameInfo + "0x1514"; // uint32_t : 1
                public const string mBuildEnv = mGameInfo + "0x1518,"; // UBrgBuildEnv*
                public const string mOnlineSubsystem = mGameInfo + "0x1520,"; // UBrgOnlineSubsystem*
                public const string mChargeManager = mGameInfo + "0x1528,"; // UBrgChargeManagerInterface*
                public const string mSaveLoadManager = mGameInfo + "0x1530,"; // UBrgSaveLoadManager*
                public const string mMaterialConstManager = mGameInfo + "0x1538,"; // UBrgMaterialConstManager*
                public const string mPostEffectMatInstActor = mGameInfo + "0x1540,"; // ABrgPostEffectMaterialInstanceActor*
                public const string mMatineeManager = mGameInfo + "0x1548,"; // UBrgMatineeManager*
                public const string mParticleManager = mGameInfo + "0x1550,"; // UBrgParticleManager*
                public const string mGameTimeManager = mGameInfo + "0x1558,"; // UBrgGameTimeManager*
                public const string mVideoRecorder = mGameInfo + "0x1560,"; // UBrgVideoRecorder*
                public const string mBgmManager = mGameInfo + "0x1568,"; // UBrgBgmManager*
                public const string mBrgCorpseBulletManager = mGameInfo + "0x1570,"; // UBrgCorpseBulletManager*
                public const string mBrgBossMaxElectricDamageManager = mGameInfo + "0x1578,"; // UBrgBossMax_ElectricDamageManager*
                public const string mPlayerStatistics = mGameInfo + "0x1580,"; // UBrgPlayerStatistics*
                public const string mCamera = mGameInfo + "0x1588,"; // ABrgCamera*
                public const string mProjectileList = mGameInfo + "0x1590,"; // TArray<ABrgProjectile_Base*>
                public const string mCommerceDialog = mGameInfo + "0x15a0,"; // UBrgCommerceDialog*
                public const string mCache = mGameInfo + "0x15a8"; // int32_t
                public const string mEmblem = mGameInfo + "0x15ac"; // int32_t
                public const string mStockExp = mGameInfo + "0x15b0"; // int32_t
                public const string mPlayTime = mGameInfo + "0x15b4"; // float
                public const string mCharaMotionSpeedRate = mGameInfo + "0x15b8"; // float
                public const string mPlayerMotionSpeedRate = mGameInfo + "0x15bc"; // float
                public const string mEnemyMotionSpeedRate = mGameInfo + "0x15c0"; // float
                public const string mMushroomGrowSoundCue = mGameInfo + "0x15c4,"; // USoundCue*
                public const string mPlaeryDamagePostProcessActor = mGameInfo + "0x15cc,"; // ABrgMaterialInstanceActor*
                public const string mPlaeryDamagePostProcessTimeCnt = mGameInfo + "0x15d4"; // float
                public const string mResumeLocation = mGameInfo + "0x15d8,"; // FVector
                public const string mResumeRotation = mGameInfo + "0x15e4,"; // FRotator
                public const string mRevivalLocation = mGameInfo + "0x15f0,"; // FVector
                public const string mRevivalRotation = mGameInfo + "0x15fc,"; // FRotator
                public const string mNameGenerator = mGameInfo + "0x1608,"; // UBrgNameGenerator*
                public const string mPS3OnlineUtility = mGameInfo + "0x1610,"; // UBrgPS3OnlineUtility*
                public const string mTickerDuringAsyncWork = mGameInfo + "0x1618,"; // ABrgTicker_DuringAsyncWork*
                public const string mTouchCoinLockerVolume = mGameInfo + "0x1620,"; // ABrgVolume_CoinLocker*
                public const string mTouchDailyRewardBoxVolume = mGameInfo + "0x1628,"; // ABrgVolume_DailyRewardBox*
                public const string mTouchItemVendingMachineVolume = mGameInfo + "0x1630,"; // ABrgVolume_ItemVendingMachine*
                public const string mTouchPrisonVolume = mGameInfo + "0x1638,"; // ABrgVolume_Prison*
                public const string mTouchStampRallySheetExchangerVolume = mGameInfo + "0x1640,"; // ABrgVolume_StampRallySheetExchanger*
                public const string mTouchFortTerminalVolume = mGameInfo + "0x1648,"; // ABrgVolume_FortTerminal*
                public const string mTouchResultDroneVolume = mGameInfo + "0x1650,"; // ABrgVolume_ResultDrone*
                public const string mTouchShowTentVolume = mGameInfo + "0x1658,"; // ABrgVolume_ShowTent*
                public const string mTouchSkillSetupPointVolume = mGameInfo + "0x1660,"; // ABrgVolume_SkillSetupPoint*
                public const string mTouchStampRallyPointVolume = mGameInfo + "0x1668,"; // ABrgVolume_StampRallyPoint*
                public const string mTouchBalloonVolume = mGameInfo + "0x1670,"; // ABrgVolume_Balloon*
                public const string mTouchButtonVolume = mGameInfo + "0x1678,"; // ABrgVolume_Button*
                public const string mTouchSecuritySwitchVolume = mGameInfo + "0x1680,"; // ABrgVolume_SecuritySwitch*
                public const string mTouchBossButtonVolume = mGameInfo + "0x1688,"; // ABrgVolume_BossButton*
                public const string mTouchVendingMachineVolume = mGameInfo + "0x1690,"; // ABrgVolume_VendingMachine*
                public const string mTouchPosterVolume = mGameInfo + "0x1698,"; // ABrgVolume_Poster*
                public const string mTouchKariShopVolume = mGameInfo + "0x16a0,"; // ABrgVolume_KariShop*
                public const string mTouchPartShopVolume = mGameInfo + "0x16a8,"; // ABrgVolume_PartShop*
                public const string mTouchSisterPartShopVolume = mGameInfo + "0x16b0,"; // ABrgVolume_SisterPartShop*
                public const string mTouchDrinkMachineVolume = mGameInfo + "0x16b8,"; // ABrgVolume_DrinkMachine*
                public const string mTouchBodyFreezerVolume = mGameInfo + "0x16c0,"; // ABrgVolume_BodyFreezer*
                public const string mTouchFortAssaultVolume = mGameInfo + "0x16c8,"; // ABrgVolume_FortAssault*
                public const string mTouchFortAssaultOutVolume = mGameInfo + "0x16d0,"; // ABrgVolume_FortAssaultOut*
                public const string mTouchSkillExchangeVolume = mGameInfo + "0x16d8,"; // ABrgVolume_SkillExchange*
                public const string mTouchSkillVendingMachineVolume = mGameInfo + "0x16e0,"; // ABrgVolume_SkillVendingMachine*
                public const string mTouchSafeVolume = mGameInfo + "0x16e8,"; // ABrgVolume_Safe*
                public const string mTouchPresentBoxVolume = mGameInfo + "0x16f0,"; // ABrgVolume_PresentBox*
                public const string mTouchValveVolume = mGameInfo + "0x16f8,"; // ABrgVolume_Valve*
                public const string mTouchElevator2Volume = mGameInfo + "0x1700,"; // ABrgVolume_Elevator2*
                public const string mTouchElevator2_SwitchVolume = mGameInfo + "0x1708,"; // ABrgVolume_Elevator2_Switch*
                public const string mTouchEscalatorVolume = mGameInfo + "0x1710,"; // ABrgVolume_Escalator*
                public const string mTouchGameCenterVolume = mGameInfo + "0x1718,"; // ABrgVolume_GameCenter*
                public const string mTouchReceptionVolume = mGameInfo + "0x1720,"; // ABrgVolume_Reception*
                public const string mTouchReturnBaseMachineVolume = mGameInfo + "0x1728,"; // ABrgVolume_ReturnBaseMachine*
                public const string mTouchDustShooterVolume = mGameInfo + "0x1730,"; // ABrgVolume_DustShooter*
                public const string mTouchDoorButtonVolume = mGameInfo + "0x1738,"; // ABrgVolume_DoorButton*
                public const string mTouchSuperScope703Volume = mGameInfo + "0x1740,"; // ABrgVolume_SuperScope703*
                public const string mTouchUncleDeathStatueVolume = mGameInfo + "0x1748,"; // ABrgVolume_UncleDeathStatue*
                public const string mStoredStatus = mGameInfo + "0x1750,"; // UBrgUIMenu_PlayerStoredStatus*
                public const string mCorpseBullets = mGameInfo + "0x1758,"; // TArray<ABrgProjectile_CorpseBullet*>
                public const string mLobbyObjects = mGameInfo + "0x1768,"; // TArray<ABrgActor_RandomGenerateObject*>
                public const string mOnMemoryResLoadState = mGameInfo + "0x1778"; // int32_t
                public const string mOnMemoryResLoadCounter1 = mGameInfo + "0x177c"; // int32_t
                public const string mOnMemoryResLoadCounter2 = mGameInfo + "0x1780"; // int32_t
                public const string mOnMemoryResLoadCounter3 = mGameInfo + "0x1784"; // int32_t
                public const string mMushroomLoadedFlags = mGameInfo + "0x1788,"; // TArray<char>
                public const string mCheatManager = mGameInfo + "0x1798,"; // UBrgCheatManager*
                public const string mDebugTick = mGameInfo + "0x17a0,"; // ABrgDebugTick*
                public const string mDebugMushroomId = mGameInfo + "0x17a8,"; // FString
                public const string mDebugMushroomEfcId = mGameInfo + "0x17b8,"; // FString
                public const string mDebugItemId = mGameInfo + "0x17c8,"; // FString
                public const string mDebugAreaTemplateId = mGameInfo + "0x17d8,"; // FString
                public const string mPluralSpawnCnt = mGameInfo + "0x17e8"; // int32_t
                public const string mPluralSpawnMax = mGameInfo + "0x17ec"; // int32_t
                public const string mPluralSpawnIntarval = mGameInfo + "0x17f0"; // float
                public const string DebugEnemyNum = mGameInfo + "0x17f4"; // int32_t
                public const string DebugMiddleBossNum = mGameInfo + "0x17f8"; // int32_t
                public const string DebugTreasureNum = mGameInfo + "0x17fc"; // int32_t
                public const string DebugVendingMachineNum = mGameInfo + "0x1800"; // int32_t
                public const string FloorJumpFloorId = mGameInfo + "0x1804,"; // FString
                public const string FloorJumpAreaId = mGameInfo + "0x1814,"; // FString
                public const string FloorJumpRefAreaId = mGameInfo + "0x1824,"; // FString
                public const string FloorJumpUnit = mGameInfo + "0x1834,"; // FString
                public const string FloorJumpDir = mGameInfo + "0x1844"; // int32_t
                public const string mDamageInfo = mGameInfo + "0x1848,"; // FBrgDebugDamageInfo
                public const string mDebugGaugeUp = mGameInfo + "0x1950,"; // TArray<FBrgDebugGaugeUp>
                public const string mAssaultFortInstance = mGameInfo + "0x1960,"; // ABrgAssaultFort_Manager*
                public const string mPawnAssaultFortSafe = mGameInfo + "0x1968,"; // ABrgPawn_AssaultFortSafe*
                public const string mPawnAssaultFortSpiritTank = mGameInfo + "0x1970,"; // ABrgPawn_AssaultFortSpiritTank*
                public const string mPawnAssaultFortPrisonDoor = mGameInfo + "0x1978,"; // TArray<ABrgPawn_AssaultFortPrisonDoor*>
                public const string mLastDeadTime = mGameInfo + "0x1988"; // int32_t
                public const string mDeadPawnMushroomSocketNames = mGameInfo + "0x198c,"; // TArray<FName>
                public const string mDeadPawnMushroomTestLength = mGameInfo + "0x199c"; // float
                public const string mDeadPawnMushroomTestExtent = mGameInfo + "0x19a0,"; // FVector
                public const string mCurrentParameterActor = mGameInfo + "0x19ac,"; // ABrgActor_Parameter*
                public const string mRGOTaskIndex = mGameInfo + "0x19b4"; // int32_t
                public const string mRGOEtcCounter = mGameInfo + "0x19b8"; // int32_t
                public const string mProjectileFactoryCounter = mGameInfo + "0x19bc"; // int32_t
                public const string mRGOOneFrameSpawnLimit = mGameInfo + "0x19c0"; // int32_t
                public const string mRGOTaskss = mGameInfo + "0x19c4,"; // TArray<FBrgRGOTask>
                public const string mProjectileFactories = mGameInfo + "0x19d4,"; // TArray<UBrgSeqAct_ProjectileFactory*>
                public const string mPhotoCapture = mGameInfo + "0x19e4,"; // UBrgPhotoCaptureObject*
                public const string mBossPhotoFlagStrings = mGameInfo + "0x19ec,"; // TArray<FString>
                public const string mLocationHistoryManager = mGameInfo + "0x19fc,"; // UBrgLocationHistoryManager*
                public const string mResultDrone_GetMoney = mGameInfo + "0x1a04"; // int32_t
                public const string mResultDrone_GetSpirit = mGameInfo + "0x1a08"; // int32_t
                public const string mResultDrone_SafeMoney = mGameInfo + "0x1a0c"; // int32_t
                public const string mResultDrone_SafeSpilit = mGameInfo + "0x1a10"; // int32_t
                public const string mResultDrone_ElavatorCost = mGameInfo + "0x1a14"; // int32_t
                public const string mResultDrone_SafeBloodnium = mGameInfo + "0x1a18"; // int32_t
                public const string mResultDrone_GetBloodnium = mGameInfo + "0x1a1c"; // int32_t
                public const string mRaidResult_SafeMoney = mGameInfo + "0x1a20"; // int32_t
                public const string mRaidResult_SafeSpilit = mGameInfo + "0x1a24"; // int32_t
                public const string mRaidResult_AddSafeMoney = mGameInfo + "0x1a28"; // int32_t
                public const string mRaidResult_AddSafeSpilit = mGameInfo + "0x1a2c"; // int32_t
                public const string mFortKunStatus = mGameInfo + "0x1a30"; // int32_t
                public const string mCaptureShootDisableCounter = mGameInfo + "0x1a34"; // int32_t
                public const string mNewQuestStatus = mGameInfo + "0x1a38"; // int32_t
                public const string mbDeleteOldQuest = mGameInfo + "0x1a3c"; // int32_t
                public const string mClosedAreaBattleManager = mGameInfo + "0x1a40,"; // UBrgClosedAreaBattleManager*
                public const string mClosedAreaBattleEvent = mGameInfo + "0x1a48,"; // UBrgClosedAreaBattleEvent*
                public const string mHubResourceManager = mGameInfo + "0x1a50,"; // UBrgHubResourceManager*
                public const string mHubCustomManager = mGameInfo + "0x1a58,"; // UBrgHubCustomManager*
                public const string mPaleWindMushroomManager = mGameInfo + "0x1a60,"; // ABrgPaleWindMushroomManager*
                public const string mMouseSpeedMax = mGameInfo + "0x1a68"; // float
                public const string mMouseSpeedMin = mGameInfo + "0x1a6c"; // float
                public const string mAngleRotSpeedMouse = mGameInfo + "0x1a70"; // float
                public const string mAngleRotSpeedBaseMouse = mGameInfo + "0x1a74"; // float
                public const string mGraphicsConfig = mGameInfo + "0x1a78,"; // UBrgGraphicsConfig*
                public const string mKeyConfig = mGameInfo + "0x1a80,"; // UBrgKeyConfig*
                public const string __OnUpdateFriendsList__Delegate = mGameInfo + "0x1a88,"; // DelegateProperty
                public const string __OnStartMyWar__Delegate = mGameInfo + "0x1a98,"; // DelegateProperty
                public const string __OnEndMyWar__Delegate = mGameInfo + "0x1aa8,"; // DelegateProperty

                public class UBrgChargeManagerInterface : ABrgGameInfo
                {

                }
            }

            public class ABrgPawn_BaseNative
            {
                // Inheritance: AGHM_Pawn > AGamePawn > APawn > AActor > UObject
                public const string mGameInfoNative = mPawnPlayerBase + "0x5dc,"; // ABrgGameInfoNative*
                public const string mAICtrlBaseNative = mPawnPlayerBase + "0x5e4,"; // ABrgAICtrl_BaseNative*
                public const string mbActive = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbRequestDestroy = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbDatabaseParamInit = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbHaveBeenActivated = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbEventChara = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbCinematicMode = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbMoveEnable = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mMoving = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbLockOnWalk = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbRotEnable = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbRotationLimit = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbExtrusionEnable = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbExtrusion = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbSplitMesh = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbRagdoll = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mLocationBackupValid = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbFadeApproachCameraEneble = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mNanashi = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mUseMarkString = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mUseSpecificString = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mFriend = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mVip = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mHunter = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mDuring = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbBattleTarget = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbBlindness = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbDisableAbduct = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbEnableAlarm = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbDisableLockOnTargetStatus = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbCarryEnable = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbCarryState = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mPrisonDataValid = mPawnPlayerBase + "0x5ec"; // uint32_t : 1
                public const string mbRootMotionEnable = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbForceBlendOff = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbOnAnimEnd = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbOnAnimEndAddAnim = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbPauseMotion = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbHasPendingAnimationPlayRequest = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbBodyPartAimEnable = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbHeadAimEnable = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbBodyAimEnable = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbBodyAimYawEnable = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbRequestUpdateMotionSpeedRate = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbAttackBeforeFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbInputFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbComboInputFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbJustInputFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbAttackFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbAttackAfterFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbCancelFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbCancelDelayFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbAlwaysCancelFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbComboCancelFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbAvoidCancelFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbBreakFallCancelFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbInvincibleFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbGuardImpossibleFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbSuperArmor = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbProjectileSuperArmor = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbShotDamageReduction = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbCounterWaitFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbCounterFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbNoReactionFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbJustGuardFrame = mPawnPlayerBase + "0x5f0"; // uint32_t : 1
                public const string mbProjectileNoHit = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDisableHeadShotFrame = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbFailedJustGuard = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mJustInputProhibition = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mCancelProhibition = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbSuperArmorDisable = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbExteriorPlayMotion = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbLockon = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAutoLockonTargetEnable = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbLockonAvoid = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbNoUseLockonSocket = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbStaminaRecoveryStop = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageNumberDisp = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string m3DStatusDelete = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string m3DStatusRevival = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string m3DStatusLocationValid = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbSelfAttackEnable = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAttackHit = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbTakeAttackCritical = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mGunBulletConsumptionDisable = mPawnPlayerBase + "0x5f6"; // uint32_t : 1
                public const string mbJustGuardDisableAttack = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAttackTrumpCard = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbOneBlowAttack = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAtkUpJustGuardCounter = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAtkUpProvoke = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAtkUpProvokeBeamMachete = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbAtkUpAfterDodge = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageCritical = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageGuard = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageJustGuard = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbGuardThroughDamage = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageKeep = mPawnPlayerBase + "0x5f4"; // uint32_t : 1
                public const string mbDamageHeadShot = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDamageSkillMove = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDamageCounter = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDamageShotDirectAtk = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbWarpFallDamageDisable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbSpecifByCauserDamageEffectEnable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mDurabilityDownDisable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mAttributeInvincible = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDisableTakeKeepDamage = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDisableElectricDamage = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDisableEyeDamage = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbAcceptBackAttack = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbAcceptJumpAttack = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbResurrection = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDeath = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDying = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbBlowPowerChangeDirEnable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbBlowDownDisable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbEyeDamage = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbGroggy = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbSleep = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbKnockBack = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbIceSlip = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDown = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDownRising = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbDownTransition = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbGroggyEnable = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbGroggyAttack = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbStatusAilment_Cloak = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbStatusAilment_CloakHpDec = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbStatusAilment_CloakArcherySkill = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbStatusAilment_BadSmell = mPawnPlayerBase + "0x5f8"; // uint32_t : 1
                public const string mbPoison = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbDisablePoisonAccum = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbDecreaseHealthSlow = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbDecreaseHealthCloak = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbPoisonRecovery = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbFireRecovery = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbFireGuard = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbStageGimmickAtkUp = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mHungryEnable = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbMeetFloor = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbAlwaysMeetFloor = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbClearReqMeetFloor = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mThrowFlying = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbInWater = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbWaterFoot = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbWaterSplashDisable = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mWaterSplashDeleteCheck = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbNextCastShadow = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbCastShadow = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbEnableControlCastShadowByPerfManager = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbForcedHiddenByCoveredMyceilumEffected = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mCanVisibleOnMap = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mForceInvisibleOnMap = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbEnableUpdateFootPlacementTranslation = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbForceDisableFootPlacement = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbEnableExtraPlacementRay = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbIgnoreManagePerfManagerForGameCenterActors = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mbInArena = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mMeshHide = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mObjectVisible = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mMushBeastDeathOpacity = mPawnPlayerBase + "0x5fc"; // uint32_t : 1
                public const string mFlyingTime = mPawnPlayerBase + "0x600"; // float
                public const string mFallTime = mPawnPlayerBase + "0x604"; // float
                public const string mOutCellTime = mPawnPlayerBase + "0x608"; // float
                public const string mPlayerMissTime = mPawnPlayerBase + "0x60c"; // float
                public const string mPrevMoveSpeed = mPawnPlayerBase + "0x610"; // float
                public const string mMoveSpeed = mPawnPlayerBase + "0x614"; // float
                public const string mMoveScale = mPawnPlayerBase + "0x618"; // float
                public const string mMoveDir = mPawnPlayerBase + "0x61c,"; // FVector
                public const string mPrevMoveDir = mPawnPlayerBase + "0x628,"; // FVector
                public const string meMoveDirType = mPawnPlayerBase + "0x634,"; // EBrgDirType
                public const string meIgnoreBlockingFilter = mPawnPlayerBase + "0x635,"; // EBrgIgnoreBlockingFilter
                public const string meCharaType = mPawnPlayerBase + "0x636,"; // EBrgCharacterType
                public const string meVoiceType = mPawnPlayerBase + "0x637,"; // EBrgVoiceType
                public const string meBloodType = mPawnPlayerBase + "0x638,"; // EBrgBloodType
                public const string mSpecialPlayerEnemyType = mPawnPlayerBase + "0x639,"; // EBrgPlayerEnemyType
                public const string mClazz = mPawnPlayerBase + "0x63a,"; // EBrgEnemyClazz
                public const string mePlayerMode = mPawnPlayerBase + "0x63b,"; // EBrgPlayerMode
                public const string mInterpAnimIndex = mPawnPlayerBase + "0x63c,"; // char
                public const string mUpperInterpAnimIndex = mPawnPlayerBase + "0x63d,"; // char
                public const string meAvoidDirType = mPawnPlayerBase + "0x63e,"; // EBrgDirType
                public const string meAttackEffectPhysMaterialType = mPawnPlayerBase + "0x63f,"; // EPhysMaterialEffectType
                public const string meDamageDirType = mPawnPlayerBase + "0x640,"; // EBrgDirType
                public const string meDamageMotionDirType = mPawnPlayerBase + "0x641,"; // EBrgDamageDirType
                public const string meBaseAction = mPawnPlayerBase + "0x642,"; // EBrgBaseAction
                public const string mePrevBaseAction = mPawnPlayerBase + "0x643,"; // EBrgBaseAction
                public const string meMoveAction = mPawnPlayerBase + "0x644,"; // EBrgMoveAction
                public const string mePrevMoveAction = mPawnPlayerBase + "0x645,"; // EBrgMoveAction
                public const string meGrabDir = mPawnPlayerBase + "0x646,"; // EBrgDirType
                public const string meHostileTargetType = mPawnPlayerBase + "0x647,"; // EBrgHostileTargetType
                public const string meBelongHostileGroup = mPawnPlayerBase + "0x648,"; // EBrgHostileGroup
                public const string meBaseHostileTargetType = mPawnPlayerBase + "0x649,"; // EBrgHostileTargetType
                public const string mBreakFallDirType = mPawnPlayerBase + "0x64a,"; // EBrgDirType
                public const string mRotSpeed = mPawnPlayerBase + "0x64c"; // float
                public const string mLockonRotSpeed = mPawnPlayerBase + "0x650"; // float
                public const string mLockonShotRotSpeed = mPawnPlayerBase + "0x654"; // float
                public const string mRotationLimit = mPawnPlayerBase + "0x658"; // float
                public const string mShotRotDelay = mPawnPlayerBase + "0x65c"; // float
                public const string mPrevLocation = mPawnPlayerBase + "0x660,"; // FVector
                public const string mPrevLocationSubDist = mPawnPlayerBase + "0x66c"; // float
                public const string mSubLocationDir = mPawnPlayerBase + "0x670,"; // FVector
                public const string mFrontDir = mPawnPlayerBase + "0x67c,"; // FVector
                public const string mBackDir = mPawnPlayerBase + "0x688,"; // FVector
                public const string mRightDir = mPawnPlayerBase + "0x694,"; // FVector
                public const string mLeftDir = mPawnPlayerBase + "0x6a0,"; // FVector
                public const string mUpDir = mPawnPlayerBase + "0x6ac,"; // FVector
                public const string mMinTimeBetweenFullUpdates = mPawnPlayerBase + "0x6b8"; // float
                public const string mMesh = mPawnPlayerBase + "0x6bc,"; // UBrgSkeletalMeshComponent*
                public const string mBodyMesh = mPawnPlayerBase + "0x6c4,"; // UBrgSkeletalMeshComponent*
                public const string mLightEnvironment = mPawnPlayerBase + "0x6cc,"; // UDynamicLightEnvironmentComponent*
                public const string mMeshMaterialInstArray = mPawnPlayerBase + "0x6d4,"; // TArray<UMaterialInstanceConstant*>
                public const string mDefaultTranslation = mPawnPlayerBase + "0x6e4,"; // FVector
                public const string mLocationBackup = mPawnPlayerBase + "0x6f0,"; // FVector
                public const string mIgnoreBlockingActorArray = mPawnPlayerBase + "0x6fc,"; // TArray<AActor*>
                public const string mAttachBodyPartPosAdjustBigRate = mPawnPlayerBase + "0x70c"; // float
                public const string mAttachBodyPartPosAdjustSmallRate = mPawnPlayerBase + "0x710"; // float
                public const string mFadeStartDist = mPawnPlayerBase + "0x714"; // float
                public const string mFadeStartShortDist = mPawnPlayerBase + "0x718"; // float
                public const string mFadeMinDist = mPawnPlayerBase + "0x71c"; // float
                public const string mDbCharaID = mPawnPlayerBase + "0x720,"; // FString
                public const string mName = mPawnPlayerBase + "0x730,"; // FString
                public const string mSubName = mPawnPlayerBase + "0x740,"; // FString
                public const string mSpecificString = mPawnPlayerBase + "0x750,"; // FString
                public const string mTeamEmblem = mPawnPlayerBase + "0x760,"; // FString
                public const string mWaveIndex = mPawnPlayerBase + "0x770"; // int32_t
                public const string mWaveWaitTime = mPawnPlayerBase + "0x774"; // float
                public const string mWeigthRate = mPawnPlayerBase + "0x778"; // float
                public const string mSearchLocationOffsetHeight = mPawnPlayerBase + "0x77c"; // float
                public const string mPrisonData = mPawnPlayerBase + "0x780,"; // FBrgDbUserPrison
                public const string mInterpAnimNode = mPawnPlayerBase + "0x7f0,"; // UAnimNodeBlendList*
                public const string mBlendAnimNode = mPawnPlayerBase + "0x7f8,"; // UAnimNodeBlendList*
                public const string mBlednAnimSlot0x4 = mPawnPlayerBase + "0x800,"; // UBrgAnimNode_CustomAnim*
                public const string mUpperPartBlendAnimNode = mPawnPlayerBase + "0x820,"; // UAnimNodeBlendPerBone*
                public const string mUpperInterpAnimNode = mPawnPlayerBase + "0x828,"; // UAnimNodeBlendList*
                public const string mUpperPartCustomAnimSlot0x4 = mPawnPlayerBase + "0x830,"; // UBrgAnimNode_CustomAnim*
                public const string mAdditiveBlendNode = mPawnPlayerBase + "0x850,"; // UAnimNodeAdditiveBlending*
                public const string mAdditiveCustomAnimSlot = mPawnPlayerBase + "0x858,"; // UBrgAnimNode_CustomAnim*
                public const string mCinamaticAnimNode0x2 = mPawnPlayerBase + "0x860,"; // UBrgAnimNode_CustomAnim*
                public const string mCustomAnimSlot0x4 = mPawnPlayerBase + "0x870,"; // UBrgAnimNode_CustomAnim*
                public const string mMotionSpeedAnimNode = mPawnPlayerBase + "0x890,"; // UAnimNodeScalePlayRate*
                public const string mHeadAimAnimNode = mPawnPlayerBase + "0x898,"; // UAnimNodeAimOffset*
                public const string mBodyAimAnimNode = mPawnPlayerBase + "0x8a0,"; // UAnimNodeAimOffset*
                public const string mCurrentPlayAnimName = mPawnPlayerBase + "0x8a8,"; // FName
                public const string mCurrentUpperPartPlayAnimName = mPawnPlayerBase + "0x8b0,"; // FName
                public const string mCurrentAdditivePlayAnimName = mPawnPlayerBase + "0x8b8,"; // FName
                public const string mPrevPlayAnimName = mPawnPlayerBase + "0x8c0,"; // FName
                public const string mPrevUpperPartPlayAnimName = mPawnPlayerBase + "0x8c8,"; // FName
                public const string mPlayReqAinmName = mPawnPlayerBase + "0x8d0,"; // FName
                public const string mPendingAnimationNameRequest = mPawnPlayerBase + "0x8d8,"; // FName
                public const string mDefBlendTime = mPawnPlayerBase + "0x8e0"; // float
                public const string mPausePrevMotionSpeed = mPawnPlayerBase + "0x8e4"; // float
                public const string mForceFinalizeAnimNotify = mPawnPlayerBase + "0x8e8,"; // UBrgAnimNotify_Base*
                public const string mHeadAimDir = mPawnPlayerBase + "0x8f0,"; // FVector
                public const string mHeadAimAngleRangeYaw = mPawnPlayerBase + "0x8fc"; // float
                public const string mHeadAimAngleRangePitch = mPawnPlayerBase + "0x900"; // float
                public const string mHeadAimSpeed = mPawnPlayerBase + "0x904"; // float
                public const string mHeadAimWaitTime = mPawnPlayerBase + "0x908"; // float
                public const string mHeadAimWaitInterval = mPawnPlayerBase + "0x90c"; // float
                public const string mBodyAimDir = mPawnPlayerBase + "0x910,"; // FVector
                public const string mBodyAimAngleRangeYaw = mPawnPlayerBase + "0x91c"; // float
                public const string mBodyAimAngleRangePitch = mPawnPlayerBase + "0x920"; // float
                public const string mBodyAimSpeed = mPawnPlayerBase + "0x924"; // float
                public const string mBodyAimWaitTime = mPawnPlayerBase + "0x928"; // float
                public const string mBodyAimWaitInterval = mPawnPlayerBase + "0x92c"; // float
                public const string mForceBodyAimTarget = mPawnPlayerBase + "0x930,"; // ABrgPawn_Base*
                public const string mRecoilAimRot = mPawnPlayerBase + "0x938,"; // FRotator
                public const string mShotAimAngleRangePitch = mPawnPlayerBase + "0x944"; // float
                public const string mShotAimDir = mPawnPlayerBase + "0x948,"; // FVector
                public const string mMotionSpeedRateInfoArray0x5 = mPawnPlayerBase + "0x954,"; // FBrgMotionSpeedInfo
                public const string mMotionSpeedRateInfoActiveNum = mPawnPlayerBase + "0x9f4"; // int32_t
                public const string mMotionSpeedRate = mPawnPlayerBase + "0x9f8"; // float
                public const string mMotionEffectArray = mPawnPlayerBase + "0x9fc,"; // TArray<UParticleSystemComponent*>
                public const string mJustGuardProb = mPawnPlayerBase + "0xa0c"; // int32_t
                public const string mCancelWait = mPawnPlayerBase + "0xa10"; // float
                public const string mJustCancelExtend = mPawnPlayerBase + "0xa14"; // float
                public const string mExteriorAnimName = mPawnPlayerBase + "0xa18,"; // FName
                public const string mExteriorAnimSet = mPawnPlayerBase + "0xa20,"; // UAnimSet*
                public const string mLockonTarget = mPawnPlayerBase + "0xa28,"; // AActor*
                public const string mLockonPosIndex = mPawnPlayerBase + "0xa30"; // int32_t
                public const string mLockonVertualTarget = mPawnPlayerBase + "0xa34,"; // AActor*
                public const string mLockonIconLocation = mPawnPlayerBase + "0xa3c,"; // FVector
                public const string mNoUseLockonSocketLocation = mPawnPlayerBase + "0xa48,"; // FVector
                public const string mStatusLevel = mPawnPlayerBase + "0xa54"; // int32_t
                public const string mHealthRate = mPawnPlayerBase + "0xa58"; // float
                public const string mPrevHealthRate = mPawnPlayerBase + "0xa5c"; // float
                public const string mBodyStatus = mPawnPlayerBase + "0xa60,"; // FBrgCharaStatus
                public const string mFinalStatus = mPawnPlayerBase + "0xa94,"; // FBrgCharaStatus
                public const string mFinalAttackPower = mPawnPlayerBase + "0xac8"; // int32_t
                public const string mFinalDefencePower = mPawnPlayerBase + "0xacc"; // int32_t
                public const string mNakedAtkPower = mPawnPlayerBase + "0xad0"; // int32_t
                public const string mNakedDefPower = mPawnPlayerBase + "0xad4"; // int32_t
                public const string mStamina = mPawnPlayerBase + "0xad8"; // float
                public const string mStaminaMax = mPawnPlayerBase + "0xadc"; // float
                public const string mStaminaRate = mPawnPlayerBase + "0xae0"; // float
                public const string mStaminaRecovery = mPawnPlayerBase + "0xae4"; // float
                public const string mDefInvincibleTime = mPawnPlayerBase + "0xae8"; // float
                public const string mRevivalTime = mPawnPlayerBase + "0xaec"; // float
                public const string mFireworksExplodeTime = mPawnPlayerBase + "0xaf0"; // float
                public const string mFireworksHitInterval = mPawnPlayerBase + "0xaf4"; // float
                public const string mFireBatonPowerUpTime = mPawnPlayerBase + "0xaf8"; // float
                public const string mFireBatonPowerDownTime = mPawnPlayerBase + "0xafc"; // float
                public const string mFireBatonPowerUpRate = mPawnPlayerBase + "0xb00"; // float
                public const string mFireBatonPowerDownRate = mPawnPlayerBase + "0xb04"; // float
                public const string mBikeSandDist = mPawnPlayerBase + "0xb08"; // float
                public const string mBikeSandSpeed = mPawnPlayerBase + "0xb0c"; // float
                public const string mSabreJustComboRate0 = mPawnPlayerBase + "0xb10"; // int32_t
                public const string mSabreJustComboRate1 = mPawnPlayerBase + "0xb14"; // int32_t
                public const string mSabreJustComboAtkRate = mPawnPlayerBase + "0xb18"; // float
                public const string mBoxingGloveComboRate = mPawnPlayerBase + "0xb1c"; // float
                public const string mBoxingGloveRalityRate = mPawnPlayerBase + "0xb20"; // float
                public const string mBoxingGloveFortRate = mPawnPlayerBase + "0xb24"; // float
                public const string mBoxingGloveChanceRate = mPawnPlayerBase + "0xb28"; // float
                public const string mBoxingGloveDev1Rate = mPawnPlayerBase + "0xb2c"; // float
                public const string mBoxingGloveDev2Rate = mPawnPlayerBase + "0xb30"; // float
                public const string mBoxingGloveDev3Rate = mPawnPlayerBase + "0xb34"; // float
                public const string mBoxingGloveDev4Rate = mPawnPlayerBase + "0xb38"; // float
                public const string mBoxingGloveLvl1Rate = mPawnPlayerBase + "0xb3c"; // float
                public const string mBoxingGloveLvl2Rate = mPawnPlayerBase + "0xb40"; // float
                public const string mBoxingGloveLvl3Rate = mPawnPlayerBase + "0xb44"; // float
                public const string mBoxingGloveLvl4Rate = mPawnPlayerBase + "0xb48"; // float
                public const string mBoxingGloveLvl5Rate = mPawnPlayerBase + "0xb4c"; // float
                public const string mBoxingGloveChanceTime = mPawnPlayerBase + "0xb50"; // float
                public const string mBoxingGloveChanceAddTime = mPawnPlayerBase + "0xb54"; // float
                public const string mBoxingGloveChanceMax = mPawnPlayerBase + "0xb58"; // int32_t
                public const string mBoxingGloveChanceEndKill = mPawnPlayerBase + "0xb5c"; // int32_t
                public const string mShotDamageReduction_MorningStar = mPawnPlayerBase + "0xb60"; // float
                public const string mGuardThroughRateMorningStarAtkNormal = mPawnPlayerBase + "0xb64"; // int32_t
                public const string mGuardThroughRateMorningStarAtkExtend = mPawnPlayerBase + "0xb68"; // int32_t
                public const string mChangeBlowRateMorningStarAtkNormal = mPawnPlayerBase + "0xb6c"; // int32_t
                public const string mChangeBlowRateMorningStarAtkExtend = mPawnPlayerBase + "0xb70"; // int32_t
                public const string mMorningStarSpecificAddRate = mPawnPlayerBase + "0xb74"; // int32_t
                public const string mMorningStarGuardDamageReduceRate = mPawnPlayerBase + "0xb78"; // int32_t
                public const string mMorningStarCounterDamageRate = mPawnPlayerBase + "0xb7c"; // float
                public const string mDamageChargeMax = mPawnPlayerBase + "0xb80"; // int32_t
                public const string m3DStatusIndex = mPawnPlayerBase + "0xb84"; // int32_t
                public const string m3DStatusAdjustLocation = mPawnPlayerBase + "0xb88,"; // FVector
                public const string m3DItemStatusIndex = mPawnPlayerBase + "0xb94"; // int32_t
                public const string m3DItemStatusTestIndex = mPawnPlayerBase + "0xb98"; // int32_t
                public const string m3DItemStatusLineTestIndex = mPawnPlayerBase + "0xb9c"; // int32_t
                public const string m3DStatusLocation = mPawnPlayerBase + "0xba0,"; // FVector
                public const string mLevelString = mPawnPlayerBase + "0xbac,"; // FString
                public const string mTakeAttacker = mPawnPlayerBase + "0xbbc,"; // AActor*
                public const string mTakaAttackTarget = mPawnPlayerBase + "0xbc4,"; // AActor*
                public const string mTakeAttackPos = mPawnPlayerBase + "0xbcc,"; // FVector
                public const string mTakeAttackID = mPawnPlayerBase + "0xbd8,"; // FString
                public const string mTakeAttackDmgType = mPawnPlayerBase + "0xbe8,"; // UBrgDamageType_Base*
                public const string mTakeAttackMesh = mPawnPlayerBase + "0xbf0,"; // USkeletalMeshComponent*
                public const string mAttackHitActorArray = mPawnPlayerBase + "0xbf8,"; // TArray<AActor*>
                public const string mAttackHitActorStateArray = mPawnPlayerBase + "0xc08,"; // TArray<AActor*>
                public const string mAttackHitActorMotionArray = mPawnPlayerBase + "0xc18,"; // TArray<AActor*>
                public const string mAttackHitGameSpeed = mPawnPlayerBase + "0xc28,"; // FBrgTimeScaleAnimInfo
                public const string mAttackHitEffectArray = mPawnPlayerBase + "0xc38,"; // TArray<UParticleSystem*>
                public const string mTrumpCardUpRate = mPawnPlayerBase + "0xc48"; // int32_t
                public const string mOneBlowAttackUpRate = mPawnPlayerBase + "0xc4c"; // float
                public const string mAtkUpJustGuardCounterRate = mPawnPlayerBase + "0xc50"; // float
                public const string mAtkUpProvokeRate = mPawnPlayerBase + "0xc54"; // float
                public const string mAtkUpProvokeRateBeamMachete = mPawnPlayerBase + "0xc58"; // float
                public const string mAtkUpAfterDodgeRate = mPawnPlayerBase + "0xc5c"; // float
                public const string mWhiteSteelHammerExplodeRange_N = mPawnPlayerBase + "0xc60"; // int32_t
                public const string mWhiteSteelHammerExplodeRange_S = mPawnPlayerBase + "0xc64"; // int32_t
                public const string mWhiteSteelHammerExplodeRange_D = mPawnPlayerBase + "0xc68"; // int32_t
                public const string mWhiteSteelHammerExplodeRange_R3 = mPawnPlayerBase + "0xc6c"; // int32_t
                public const string mWhiteSteelHammerExplodeRange_R4 = mPawnPlayerBase + "0xc70"; // int32_t
                public const string mRedNapalmGunGreanadeWeakReactionTime = mPawnPlayerBase + "0xc74"; // float
                public const string mRedNapalmGunSkillMoveRotSpeedAdjust = mPawnPlayerBase + "0xc78"; // float
                public const string mBlackThunderMedusaLife = mPawnPlayerBase + "0xc7c"; // int32_t
                public const string mBlackThunderMedusaDrainMax = mPawnPlayerBase + "0xc80"; // int32_t
                public const string mBlackThunderObstacleAtkDownRate = mPawnPlayerBase + "0xc84"; // float
                public const string mDamageType = mPawnPlayerBase + "0xc88,"; // UDamageType*
                public const string mTakeDamageType = mPawnPlayerBase + "0xc90,"; // UDamageType*
                public const string mDamageTypeInState = mPawnPlayerBase + "0xc98,"; // UDamageType*
                public const string mDamageHitInfo = mPawnPlayerBase + "0xca0,"; // FTraceHitInfo
                public const string mDamagePower = mPawnPlayerBase + "0xcc8"; // int32_t
                public const string mDamageLocation = mPawnPlayerBase + "0xccc,"; // FVector
                public const string mDamageHitNormal = mPawnPlayerBase + "0xcd8,"; // FVector
                public const string mDamageMomentum = mPawnPlayerBase + "0xce4,"; // FVector
                public const string mDamageMomentumSize = mPawnPlayerBase + "0xcf0"; // float
                public const string mDamageRotDir = mPawnPlayerBase + "0xcf4,"; // FVector
                public const string mDamageNormal = mPawnPlayerBase + "0xd00,"; // FVector
                public const string mDamageCauser = mPawnPlayerBase + "0xd0c,"; // AActor*
                public const string mDamageCauserPawn = mPawnPlayerBase + "0xd14,"; // ABrgPawn_Base*
                public const string mCurrentDamageCauser = mPawnPlayerBase + "0xd1c,"; // ABrgPawn_Base*
                public const string mDamageAttackPower = mPawnPlayerBase + "0xd24"; // int32_t
                public const string mDbDamageAttackID = mPawnPlayerBase + "0xd28,"; // FString
                public const string mDamageAttackAttr = mPawnPlayerBase + "0xd38,"; // TArray<FBrgAttackAttrParam>
                public const string mDamageDist = mPawnPlayerBase + "0xd48"; // float
                public const string mDamageMultMax = mPawnPlayerBase + "0xd4c"; // int32_t
                public const string mDamageCauserStateName = mPawnPlayerBase + "0xd50,"; // FName
                public const string mGaveDamage = mPawnPlayerBase + "0xd58"; // int32_t
                public const string mAccumuDamage = mPawnPlayerBase + "0xd5c"; // float
                public const string mAccumuDamageRecovery = mPawnPlayerBase + "0xd60"; // float
                public const string mAccumuDamageLimit = mPawnPlayerBase + "0xd64"; // float
                public const string mAccumuDamageLimitAdjust = mPawnPlayerBase + "0xd68"; // float
                public const string mAccumuDamageLevel = mPawnPlayerBase + "0xd6c"; // int32_t
                public const string mAccumuDamageRate = mPawnPlayerBase + "0xd70"; // float
                public const string mAccumuDamageCounterRate = mPawnPlayerBase + "0xd74"; // float
                public const string mDamageBlowPower = mPawnPlayerBase + "0xd78"; // float
                public const string mAttrDamageValueArray0x7 = mPawnPlayerBase + "0xd7c"; // float
                public const string mDamageCounterDuration = mPawnPlayerBase + "0xd98"; // float
                public const string mKeepDamageArray = mPawnPlayerBase + "0xd9c,"; // TArray<FBrgKeepDamage>
                public const string mFireDamageEffectWait = mPawnPlayerBase + "0xdac"; // float
                public const string mFireKeepDmgRecoveryCnt = mPawnPlayerBase + "0xdb0"; // float
                public const string mAvoidFireKeepDmgTimeAdjustRate = mPawnPlayerBase + "0xdb4"; // float
                public const string mFallDamageStartHeight = mPawnPlayerBase + "0xdb8"; // float
                public const string mKilledPtid = mPawnPlayerBase + "0xdbc,"; // FString
                public const string mKilledEptid = mPawnPlayerBase + "0xdcc,"; // FString
                public const string mDeathDamageType = mPawnPlayerBase + "0xddc,"; // UDamageType*
                public const string mDamageYear = mPawnPlayerBase + "0xde4"; // int32_t
                public const string mDamageMonth = mPawnPlayerBase + "0xde8"; // int32_t
                public const string mDamageDayOfWeek = mPawnPlayerBase + "0xdec"; // int32_t
                public const string mDamageDay = mPawnPlayerBase + "0xdf0"; // int32_t
                public const string mDamageHour = mPawnPlayerBase + "0xdf4"; // int32_t
                public const string mDamageMin = mPawnPlayerBase + "0xdf8"; // int32_t
                public const string mDamageSec = mPawnPlayerBase + "0xdfc"; // int32_t
                public const string mDamageMilliSec = mPawnPlayerBase + "0xe00"; // int32_t
                public const string mDuralilityDownAdjustVsEnemy = mPawnPlayerBase + "0xe04"; // float
                public const string mRagdollRotation = mPawnPlayerBase + "0xe08,"; // FRotator
                public const string mInvincible = mPawnPlayerBase + "0xe14"; // int32_t
                public const string mStrAdjustRate = mPawnPlayerBase + "0xe18"; // float
                public const string mDexAdjustRate = mPawnPlayerBase + "0xe1c"; // float
                public const string mVitAdjustRate = mPawnPlayerBase + "0xe20"; // float
                public const string mCriticalMax = mPawnPlayerBase + "0xe24"; // int32_t
                public const string mCriticalCharacteristic = mPawnPlayerBase + "0xe28"; // int32_t
                public const string mCriticalCounterAdjust = mPawnPlayerBase + "0xe2c"; // float
                public const string mCriticalTiredAdjust = mPawnPlayerBase + "0xe30"; // float
                public const string mCriticalEyeDamageAdjust = mPawnPlayerBase + "0xe34"; // float
                public const string mCriticalFlipAdjust = mPawnPlayerBase + "0xe38"; // float
                public const string mDamageCounterSetTime = mPawnPlayerBase + "0xe3c"; // float
                public const string mDefenceCharacteristic = mPawnPlayerBase + "0xe40"; // float
                public const string mFinalAttackAdjust = mPawnPlayerBase + "0xe44"; // float
                public const string mBackDirAdjust = mPawnPlayerBase + "0xe48"; // float
                public const string mAvoidDmgReductionRate = mPawnPlayerBase + "0xe4c"; // float
                public const string mAvoidDmgReductionTime = mPawnPlayerBase + "0xe50"; // float
                public const string mAvoidDmgReductionCnt = mPawnPlayerBase + "0xe54"; // float
                public const string mFallBaseDamagePer = mPawnPlayerBase + "0xe58"; // float
                public const string mFallAddDamagePer = mPawnPlayerBase + "0xe5c"; // float
                public const string mFireKeepDmgPerAttackPowerRate = mPawnPlayerBase + "0xe60"; // float
                public const string mFireInvalidTolerance = mPawnPlayerBase + "0xe64"; // float
                public const string mElectInvalidTolerance = mPawnPlayerBase + "0xe68"; // float
                public const string mPoisonInvalidTolerance = mPawnPlayerBase + "0xe6c"; // float
                public const string mElectTransmitRadius = mPawnPlayerBase + "0xe70"; // float
                public const string mElectTransmitRadiusMargin = mPawnPlayerBase + "0xe74"; // float
                public const string mElectTransmitAttackInfo = mPawnPlayerBase + "0xe78,"; // FBrgAttackInfo
                public const string mResurrectionPer = mPawnPlayerBase + "0xea8"; // int32_t
                public const string mIgnitionDamageAdjust = mPawnPlayerBase + "0xeac"; // float
                public const string mPrevMoveActionSpeed = mPawnPlayerBase + "0xeb0"; // float
                public const string mWalkSpeedPerSecond = mPawnPlayerBase + "0xeb4"; // float
                public const string mStealthWalkSpeedPerSecond = mPawnPlayerBase + "0xeb8"; // float
                public const string mFastWalkSpeedPerSecond = mPawnPlayerBase + "0xebc"; // float
                public const string mSleepWalkSpeedPerSecond = mPawnPlayerBase + "0xec0"; // float
                public const string mRunSpeedPerSecond = mPawnPlayerBase + "0xec4"; // float
                public const string mDashSpeedPerSecond = mPawnPlayerBase + "0xec8"; // float
                public const string mEscapeSpeedPerSecound = mPawnPlayerBase + "0xecc"; // float
                public const string mCarryWalkSpeedPerSecond = mPawnPlayerBase + "0xed0"; // float
                public const string mCarryRunSpeedPerSecond = mPawnPlayerBase + "0xed4"; // float
                public const string mCtrlStateName = mPawnPlayerBase + "0xed8,"; // FName
                public const string mPrevCtrlStateName = mPawnPlayerBase + "0xee0,"; // FName
                public const string mStrongLandHeight = mPawnPlayerBase + "0xee8"; // float
                public const string mBlowLongPower = mPawnPlayerBase + "0xeec"; // float
                public const string mEyeDamageEffect = mPawnPlayerBase + "0xef0,"; // UParticleSystemComponent*
                public const string mAvoidDir = mPawnPlayerBase + "0xef8,"; // FVector
                public const string mStompValidRange = mPawnPlayerBase + "0xf04"; // float
                public const string mKnockBackDir = mPawnPlayerBase + "0xf08,"; // FVector
                public const string mKnockBackPower = mPawnPlayerBase + "0xf14"; // float
                public const string mKnockBackFriction = mPawnPlayerBase + "0xf18"; // float
                public const string mKnockBackStopPower = mPawnPlayerBase + "0xf1c"; // float
                public const string mKnockBackDist = mPawnPlayerBase + "0xf20"; // float
                public const string mIceSlipDir = mPawnPlayerBase + "0xf24,"; // FVector
                public const string mIceSlipPower = mPawnPlayerBase + "0xf30"; // float
                public const string mIceSlipSpeed = mPawnPlayerBase + "0xf34"; // float
                public const string mIceSlipTime = mPawnPlayerBase + "0xf38"; // float
                public const string mIceSlipPreLocation = mPawnPlayerBase + "0xf3c,"; // FVector
                public const string mDownRecoveryBySec = mPawnPlayerBase + "0xf48"; // float
                public const string mDownTimeCnt = mPawnPlayerBase + "0xf4c"; // float
                public const string mDownDefaultSec = mPawnPlayerBase + "0xf50"; // float
                public const string mDownShortSec = mPawnPlayerBase + "0xf54"; // float
                public const string mDownDamageDecreaseRate = mPawnPlayerBase + "0xf58"; // float
                public const string mStandingTime = mPawnPlayerBase + "0xf5c"; // float
                public const string mGroggyRecoveryBySec = mPawnPlayerBase + "0xf60"; // float
                public const string mGroggyHealthRateArray = mPawnPlayerBase + "0xf64,"; // TArray<float>
                public const string mGroggyHealthTimeArray = mPawnPlayerBase + "0xf74,"; // TArray<float>
                public const string mGroggyHealthAdjustRate = mPawnPlayerBase + "0xf84"; // float
                public const string mGroggyRoketLauncherTime = mPawnPlayerBase + "0xf88"; // float
                public const string mGroggyTimeCnt = mPawnPlayerBase + "0xf8c"; // float
                public const string mGroggyEffect = mPawnPlayerBase + "0xf90,"; // UParticleSystemComponent*
                public const string mGroggyEffectSocketName = mPawnPlayerBase + "0xf98,"; // FString
                public const string mGrabTarget = mPawnPlayerBase + "0xfa8,"; // ABrgPawn_Base*
                public const string mGrabCauser = mPawnPlayerBase + "0xfb0,"; // ABrgPawn_Base*
                public const string mGrabMoveRate = mPawnPlayerBase + "0xfb8"; // float
                public const string mGrabDistToTarget = mPawnPlayerBase + "0xfbc"; // float
                public const string mStatusAilmentArray = mPawnPlayerBase + "0xfc0,"; // TArray<FBrgStatusAilment>
                public const string mStatusAilment_CloakRate = mPawnPlayerBase + "0xfd0"; // float
                public const string mStatusAilment_CloakFadeTime = mPawnPlayerBase + "0xfd4"; // float
                public const string mStatesAilment_NoDamageRate = mPawnPlayerBase + "0xfd8"; // float
                public const string mStatesAilment_NoDamageFadeTime = mPawnPlayerBase + "0xfdc"; // float
                public const string mStatesAilment_NoDamageEfcTime = mPawnPlayerBase + "0xfe0"; // float
                public const string mStatusAilment_FlowDist = mPawnPlayerBase + "0xfe4"; // float
                public const string mPoisonAccum = mPawnPlayerBase + "0xfe8"; // float
                public const string mPoisonAccumLimit = mPawnPlayerBase + "0xfec"; // float
                public const string mPoisonAccumRecovery = mPawnPlayerBase + "0xff0"; // float
                public const string mPoisonDamageInterval = mPawnPlayerBase + "0xff4"; // float
                public const string mPoisonAccumAdjust = mPawnPlayerBase + "0xff8"; // float
                public const string mPoisonKeepDamageRate = mPawnPlayerBase + "0xffc"; // float
                public const string mPoisonVomitCnt = mPawnPlayerBase + "0x1000"; // int32_t
                public const string mPoisonVomitEquipArmRate = mPawnPlayerBase + "0x1004"; // float
                public const string mSleepTimeCnt = mPawnPlayerBase + "0x1008"; // float
                public const string mSleepEffect = mPawnPlayerBase + "0x100c,"; // UParticleSystemComponent*
                public const string mDurDownMushEfct0 = mPawnPlayerBase + "0x1014"; // float
                public const string mDurDownMushEfct1 = mPawnPlayerBase + "0x1018"; // float
                public const string mDurDownMushEfct2 = mPawnPlayerBase + "0x101c"; // float
                public const string mDurDownMushEfct3 = mPawnPlayerBase + "0x1020"; // float
                public const string mDurDownMushEfct4 = mPawnPlayerBase + "0x1024"; // float
                public const string mDecreaseHealthSlowTime = mPawnPlayerBase + "0x1028"; // float
                public const string mDecreaseHealthSlowInterval = mPawnPlayerBase + "0x102c"; // float
                public const string mDecreaseHealthSlowValue = mPawnPlayerBase + "0x1030"; // float
                public const string mDecreaseHealthCloakTime = mPawnPlayerBase + "0x1034"; // float
                public const string mDecreaseHealthCloakInterval = mPawnPlayerBase + "0x1038"; // float
                public const string mDecreaseHealthCloakValue = mPawnPlayerBase + "0x103c"; // float
                public const string mStelthUpRate = mPawnPlayerBase + "0x1040"; // float
                public const string mFireRecoveryRate = mPawnPlayerBase + "0x1044"; // float
                public const string mFireGuardRate = mPawnPlayerBase + "0x1048"; // float
                public const string mSkillHpRecoveryCnt = mPawnPlayerBase + "0x104c"; // float
                public const string mHungryRate = mPawnPlayerBase + "0x1050"; // float
                public const string mHungrySpeed = mPawnPlayerBase + "0x1054"; // float
                public const string mHungryHealthRecoveryTime = mPawnPlayerBase + "0x1058"; // float
                public const string mHungryHealthRecoveryValue = mPawnPlayerBase + "0x105c"; // int32_t
                public const string mHungryHealthRecoveryThreshold = mPawnPlayerBase + "0x1060"; // float
                public const string mFullStomachRecoveryCnt = mPawnPlayerBase + "0x1064"; // float
                public const string mFullStomachRecoverySpeed = mPawnPlayerBase + "0x1068"; // float
                public const string mHungryStaminaConsumpUpThreshold = mPawnPlayerBase + "0x106c"; // float
                public const string mHungryStaminaConsumpUpRate = mPawnPlayerBase + "0x1070"; // float
                public const string mHungryPlaySEIntarval = mPawnPlayerBase + "0x1074"; // float
                public const string mHungrySEPlayTimeCnt = mPawnPlayerBase + "0x1078"; // float
                public const string mHungrySECue = mPawnPlayerBase + "0x107c,"; // USoundCue*
                public const string mDefaultGroundPhysicalMaterial = mPawnPlayerBase + "0x1084,"; // UPhysicalMaterial*
                public const string mLastGroundHitPhysicalMaterial = mPawnPlayerBase + "0x108c,"; // UPhysicalMaterial*
                public const string mValidLastGroundHitPhysicalMaterial = mPawnPlayerBase + "0x1094,"; // UPhysicalMaterial*
                public const string mLastGroundHitObject = mPawnPlayerBase + "0x109c,"; // UPrimitiveComponent*
                public const string mLastGroundHitActor = mPawnPlayerBase + "0x10a4,"; // AActor*
                public const string mLastGroundLocation = mPawnPlayerBase + "0x10ac,"; // FVector
                public const string mLastGroundRotation = mPawnPlayerBase + "0x10b8,"; // FRotator
                public const string mLastGroundHitActorNoDeath = mPawnPlayerBase + "0x10c4,"; // AActor*
                public const string mInVolumePhysMat = mPawnPlayerBase + "0x10cc,"; // UPhysicalMaterial*
                public const string mMeetFloorRotation = mPawnPlayerBase + "0x10d4,"; // FRotator
                public const string mMeetFloorInterpMax = mPawnPlayerBase + "0x10e0"; // float
                public const string mMeetFllorInterpCnt = mPawnPlayerBase + "0x10e4"; // float
                public const string mHateUpScale = mPawnPlayerBase + "0x10e8"; // float
                public const string mThrowSpeed = mPawnPlayerBase + "0x10ec,"; // FVector
                public const string mThrowGravity = mPawnPlayerBase + "0x10f8"; // float
                public const string mThrowBoundNum = mPawnPlayerBase + "0x10fc"; // int32_t
                public const string mThrowBoundRate = mPawnPlayerBase + "0x1100"; // float
                public const string mThrowHitFloorSECue = mPawnPlayerBase + "0x1104,"; // USoundCue*
                public const string mThrowHitWallSECue = mPawnPlayerBase + "0x110c,"; // USoundCue*
                public const string mThrowInWaterSECue = mPawnPlayerBase + "0x1114,"; // USoundCue*
                public const string mWaterVolume = mPawnPlayerBase + "0x111c,"; // ABrgVolume_Water*
                public const string mWaterSurfaceHeight = mPawnPlayerBase + "0x1124"; // float
                public const string mWaterScale = mPawnPlayerBase + "0x1128"; // float
                public const string mWaterSplashEffect = mPawnPlayerBase + "0x112c,"; // UParticleSystemComponent*
                public const string mWaterSplashActor = mPawnPlayerBase + "0x1134,"; // ABrgSimpleActor*
                public const string mAnims0x8 = mPawnPlayerBase + "0x113c,"; // FBrgTimeScaleAnim
                public const string mDefaultTimeScale = mPawnPlayerBase + "0x12dc"; // float
                public const string mPhysSEStopList = mPawnPlayerBase + "0x12e0,"; // TArray<FBrgPhysMatSEStop>
                public const string mPhysSEStopTime = mPawnPlayerBase + "0x12f0"; // float
                public const string mLeftLegSkelControl = mPawnPlayerBase + "0x12f4,"; // UBrgSkelControl_CCD_FootPlacement*
                public const string mRightLegSkelControl = mPawnPlayerBase + "0x12fc,"; // UBrgSkelControl_CCD_FootPlacement*
                public const string mDebugEnableUpdateFootPlacementTranslation = mPawnPlayerBase + "0x1304"; // int32_t
                public const string mDebugIKToggle = mPawnPlayerBase + "0x1308"; // int32_t
                public const string mFootPlacementTranslationInterpolationSpeed = mPawnPlayerBase + "0x130c"; // float
                public const string mFootPlacementExtraRayRootBoneName = mPawnPlayerBase + "0x1310,"; // FName
                public const string mFootPlacementExtraRayStartOffset = mPawnPlayerBase + "0x1318"; // float
                public const string mFootPlacementExtraRayLength = mPawnPlayerBase + "0x131c"; // float
                public const string mFootPlacementExtraRayExtent = mPawnPlayerBase + "0x1320"; // float
                public const string mIKDebugDrawLifeTime = mPawnPlayerBase + "0x1324"; // float
                public const string mDesiredMeshTranslation = mPawnPlayerBase + "0x1328,"; // FVector
                public const string mInElevatorVolume = mPawnPlayerBase + "0x1334,"; // ABrgVolume_Elevator2*
                public const string mInArenaVolume = mPawnPlayerBase + "0x133c,"; // ABrgVolume_Arena*
                public const string mObjectVisibleAlpha = mPawnPlayerBase + "0x1344,"; // FParamMoveData
                public const string mMushBeastDeathOpacityRate = mPawnPlayerBase + "0x13b0,"; // FParamMoveData
                public const string mRageHammerCost = mPawnPlayerBase + "0x141c"; // float
                public const string mRageHammerAtkRate = mPawnPlayerBase + "0x1420"; // float
                public const string mRageMacheteCost = mPawnPlayerBase + "0x1424"; // float
                public const string mRageMacheteAtkRate = mPawnPlayerBase + "0x1428"; // float
                public const string mGoreFinishApproachRange = mPawnPlayerBase + "0x142c"; // float
                public const string mTDMPoint0x6 = mPawnPlayerBase + "0x1430"; // int32_t
                public const string mDebugDrawStaminaConsumpTime = mPawnPlayerBase + "0x1448"; // float
                public const string mDebugDrawStaminaConsumpValue = mPawnPlayerBase + "0x144c"; // float
                public const string mDebugMenu = mPawnPlayerBase + "0x1450,"; // UGHM_DebugMenuItem*
                public const string mDebugInvincible = mPawnPlayerBase + "0x1458"; // int32_t
                public const string mNoDamage = mPawnPlayerBase + "0x145c"; // int32_t
                public const string mDebugGroggyAttack = mPawnPlayerBase + "0x1460"; // int32_t
                public const string mDownDamage = mPawnPlayerBase + "0x1464"; // int32_t
                public const string mChangeLevel = mPawnPlayerBase + "0x1468"; // int32_t
                public const string mShowState = mPawnPlayerBase + "0x146c"; // int32_t
                public const string mShowLocation = mPawnPlayerBase + "0x1470"; // int32_t
                public const string mShowRotation = mPawnPlayerBase + "0x1474"; // int32_t
                public const string mShowVelocity = mPawnPlayerBase + "0x1478"; // int32_t
                public const string mShowMeshCenter = mPawnPlayerBase + "0x147c"; // int32_t
                public const string mShowMotionSpeed = mPawnPlayerBase + "0x1480"; // int32_t
                public const string mShowAttackCollision = mPawnPlayerBase + "0x1484"; // int32_t
                public const string mShowActiveAnimation = mPawnPlayerBase + "0x1488"; // int32_t
                public const string mShowPlayReqAnimation = mPawnPlayerBase + "0x148c"; // int32_t
                public const string mShowDamageInfo = mPawnPlayerBase + "0x1490"; // int32_t
                public const string mShowStaminaGauge = mPawnPlayerBase + "0x1494"; // int32_t
                public const string mShowHungry = mPawnPlayerBase + "0x1498"; // int32_t
                public const string mSetHugry = mPawnPlayerBase + "0x149c"; // int32_t
                public const string mDebugDurabilityDownDisable = mPawnPlayerBase + "0x14a0"; // int32_t
                public const string mShowGroggyGauge = mPawnPlayerBase + "0x14a4"; // int32_t
                public const string mShowFrontLineDist = mPawnPlayerBase + "0x14a8"; // float
                public const string mShowCheckTool = mPawnPlayerBase + "0x14ac"; // int32_t
                public const string mCheckStaggerCriff = mPawnPlayerBase + "0x14b0"; // int32_t
                public const string mCheckSlipCriff = mPawnPlayerBase + "0x14b4"; // int32_t
                public const string mShowComponent = mPawnPlayerBase + "0x14b8"; // int32_t
                public const string mDebugMenu_VoiceType = mPawnPlayerBase + "0x14bc,"; // UBrgDebugMenuItemList*
                public const string mCheckToolMeshComponent = mPawnPlayerBase + "0x14c4,"; // UStaticMeshComponent*
            }

            public class ABrgPawn_Base
            {
                // Inheritance: ABrgPawn_BaseNative > AGHM_Pawn > AGamePawn > APawn > AActor > UObject
                public const string mGameInfo = mPawnPlayerBase + "0x14cc,"; // ABrgGameInfo*
                public const string mPlayVoiceCue = mPawnPlayerBase + "0x14d4,"; // USoundCue*
                public const string mVoiceVolume = mPawnPlayerBase + "0x14dc"; // float
                public const string mAttackHitCameraShake = mPawnPlayerBase + "0x14e0,"; // EBrgCameraShake
                public const string mAttackHitRumble = mPawnPlayerBase + "0x14e1,"; // EBrgRumble
                public const string meAttackHitSEPhysMatType = mPawnPlayerBase + "0x14e2,"; // EPhysMatSEGeneralType
                public const string meIdleAction = mPawnPlayerBase + "0x14e3,"; // EBrgIdleAction
                public const string meJumpAction = mPawnPlayerBase + "0x14e4,"; // EBrgJumpAction
                public const string meClimbAction = mPawnPlayerBase + "0x14e5,"; // EBrgClimbAction
                public const string meGuardAction = mPawnPlayerBase + "0x14e6,"; // EBrgGuardAction
                public const string meDamageAction = mPawnPlayerBase + "0x14e7,"; // EBrgDamageAction
                public const string meBlowAction = mPawnPlayerBase + "0x14e8,"; // EBrgBlowAction
                public const string meKnockOutAction = mPawnPlayerBase + "0x14e9,"; // EBrgKnockOutAction
                public const string meFloatAction = mPawnPlayerBase + "0x14ea,"; // EBrgFloatAction
                public const string meDownAction = mPawnPlayerBase + "0x14eb,"; // EBrgDownAction
                public const string meDeathAction = mPawnPlayerBase + "0x14ec,"; // EBrgDeathAction
                public const string meDyingAction = mPawnPlayerBase + "0x14ed,"; // EBrgDyingAction
                public const string meKeepMoveAction = mPawnPlayerBase + "0x14ee,"; // EBrgMoveAction
                public const string mFootAxis = mPawnPlayerBase + "0x14ef,"; // EBrgFootAxis
                public const string meClimbLevel = mPawnPlayerBase + "0x14f0,"; // EBrgClimbLevel
                public const string mFootLockType = mPawnPlayerBase + "0x14f1,"; // EBrgFootLockType
                public const string mbAtkHomeRun = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbMoveRotationEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbMoveStopReq = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbUseSmoothMoveStop = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbKeepMove = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbDefaultMoveRotLockonTargetEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbMoveRotLockonTargetEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbRunAnimLoop = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mJumpOrbitCorrectionEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mBumpCeiling = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbSlideJumpEvent = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbFallingEvent = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbFallSlipEvent = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbDamageFall = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbBlowDamageFall = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbDamageDirEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbNormalDeathTransition = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbSurprised = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mBodyAimDisable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbAttackByWeapon = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbDamageByWeapon = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbAttackByMush = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbDamageByMush = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbCanPierceDamage = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbCinematicCollisionDisable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbClimbMiddleEnable = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbElectricDamage = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbConfusion = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbFootLock = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbFootLockRequest = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbElectricCaptured = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbOnSlipArea = mPawnPlayerBase + "0x14f4"; // uint32_t : 1
                public const string mbRestArea = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbInStair = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbInBlocking = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_PowerUp = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_NoTired = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_NegativeMushDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_CounterDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_AlwaysCounter = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_ForceGuardDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_AvoidInvincible = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_DownDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_NoDamage = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStatusAilment_NoDamageDurDown = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbJustGuardEnable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbBloodTwice = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbDownDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbFireAreaDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbMovePerceptionSoundDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbSleepDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbAvoidInvincible = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbRandomInvincible = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbStartGimmick = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbDeathToDestroy = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mbMeshActiveDisable = mPawnPlayerBase + "0x14f8"; // uint32_t : 1
                public const string mMoveAnimStartTime = mPawnPlayerBase + "0x14fc"; // float
                public const string mJumpStartPower = mPawnPlayerBase + "0x1500"; // float
                public const string mJumpStartHeight = mPawnPlayerBase + "0x1504"; // float
                public const string mFallSlipDir = mPawnPlayerBase + "0x1508,"; // FVector
                public const string mFallHeight = mPawnPlayerBase + "0x1514"; // float
                public const string mCheckStandFallLineExtent = mPawnPlayerBase + "0x1518"; // float
                public const string mJumpSlipTime = mPawnPlayerBase + "0x151c"; // float
                public const string mJumpSlipUpdateWait = mPawnPlayerBase + "0x1520"; // float
                public const string mJumpSlipUpdateInterval = mPawnPlayerBase + "0x1524"; // float
                public const string mDeathStartYaw = mPawnPlayerBase + "0x1528"; // float
                public const string mEscapeType = mPawnPlayerBase + "0x152c"; // int32_t
                public const string mAvoidRotSpeed = mPawnPlayerBase + "0x1530"; // float
                public const string mAvoidLockonTargetRotSpeed = mPawnPlayerBase + "0x1534"; // float
                public const string mCounterDamageEffect = mPawnPlayerBase + "0x1538,"; // UParticleSystemComponent*
                public const string mDyingEffect = mPawnPlayerBase + "0x1540,"; // UParticleSystemComponent*
                public const string mBackgroundHitEffectCreateMax = mPawnPlayerBase + "0x1548"; // int32_t
                public const string mOverPawnArray = mPawnPlayerBase + "0x154c,"; // TArray<ABrgPawn_Base*>
                public const string mFixedCriticalRate = mPawnPlayerBase + "0x155c"; // float
                public const string mCanNotPierceStaticMeshActors = mPawnPlayerBase + "0x1560,"; // TArray<AStaticMeshActor*>
                public const string mClimbVolume = mPawnPlayerBase + "0x1570,"; // ABrgVolume_Climb*
                public const string mClimbNormal = mPawnPlayerBase + "0x1578,"; // FVector
                public const string mClimbFloorHeight = mPawnPlayerBase + "0x1584"; // float
                public const string mClimbRot = mPawnPlayerBase + "0x1588,"; // FRotator
                public const string mClimbAdjustHeight = mPawnPlayerBase + "0x1594"; // float
                public const string mElectricDamageSec = mPawnPlayerBase + "0x1598"; // float
                public const string mElectricDamageTimeCnt = mPawnPlayerBase + "0x159c"; // float
                public const string mElectricEffectLocationScale = mPawnPlayerBase + "0x15a0,"; // FVector
                public const string mElectricEffectSpawnScale = mPawnPlayerBase + "0x15ac"; // float
                public const string mElectricDamageEffcetCnt = mPawnPlayerBase + "0x15b0"; // float
                public const string mElectricDamageEffectArray = mPawnPlayerBase + "0x15b4,"; // TArray<UParticleSystemComponent*>
                public const string mEyeDamageShortSec = mPawnPlayerBase + "0x15c4"; // float
                public const string mEyeDamageLongSec = mPawnPlayerBase + "0x15c8"; // float
                public const string mEyeDamageTimeCnt = mPawnPlayerBase + "0x15cc"; // float
                public const string mEyeDamagePreTarget = mPawnPlayerBase + "0x15d0,"; // ABrgPawn_Base*
                public const string mConfusionType = mPawnPlayerBase + "0x15d8"; // int32_t
                public const string mConfusionTimeCnt = mPawnPlayerBase + "0x15dc"; // float
                public const string mConfusionEffect = mPawnPlayerBase + "0x15e0,"; // UParticleSystemComponent*
                public const string mFootLockCnt = mPawnPlayerBase + "0x15e8"; // float
                public const string mFootLockEffect = mPawnPlayerBase + "0x15ec,"; // UParticleSystemComponent*
                public const string mFootLockFrozenEffectCnt = mPawnPlayerBase + "0x15f4"; // float
                public const string mFootLockRecoveryBySec = mPawnPlayerBase + "0x15f8"; // float
                public const string mElectricCapturedRecoverCnt = mPawnPlayerBase + "0x15fc"; // int32_t
                public const string mStairVolume = mPawnPlayerBase + "0x1600,"; // ABrgVolume_Stair*
                public const string mDbMushroomEfc = mPawnPlayerBase + "0x1608,"; // FBrgDbMushroomEfc
                public const string mStatusAilment_GroggyProbUp = mPawnPlayerBase + "0x1688"; // float
                public const string mSleepKeepTime = mPawnPlayerBase + "0x168c"; // float
                public const string mRecoveryUpRate = mPawnPlayerBase + "0x1690"; // int32_t
                public const string mFireDmgTimeReductionRate = mPawnPlayerBase + "0x1694"; // float
                public const string mElectDmgTimeReductionRate = mPawnPlayerBase + "0x1698"; // float
                public const string mBoneChainEffects = mPawnPlayerBase + "0x169c,"; // TArray<FBrgPawn_BoneChainEffect>
                public const string mBloodEffectReduce = mPawnPlayerBase + "0x16ac"; // float
                public const string mBloodEffectReduceTime = mPawnPlayerBase + "0x16b0"; // float
                public const string mDamageEffect = mPawnPlayerBase + "0x16b4,"; // TArray<FBrgPawn_DamageEffect>
                public const string mDrainDamageEffect = mPawnPlayerBase + "0x16c4,"; // UParticleSystemComponent*
                public const string mAnimNotifyRotList = mPawnPlayerBase + "0x16cc,"; // TArray<UBrgAnimNotify_Base*>
                public const string mbAnimNotifyRotDefaultSpeed = mPawnPlayerBase + "0x16dc"; // float
                public const string mMbFloorNum = mPawnPlayerBase + "0x16e0"; // int32_t
                public const string mMbDeadEndVolume = mPawnPlayerBase + "0x16e4,"; // TArray<ABrgVolume_MiddleBoss_Deadend*>
                public const string mDestroyTime = mPawnPlayerBase + "0x16f4"; // float
                public const string mUseProjectileClasses = mPawnPlayerBase + "0x16f8,"; // TArray<ABrgProjectile_Base*>
                public const string mbDebugForceSkillMove = mPawnPlayerBase + "0x1708"; // int32_t
            }

            public class ABrgPawn_PlayerBase
            {
                // Inheritance (UBrgUIManager): ABrgPawn_Base > ABrgPawn_BaseNative > AGHM_Pawn > AGamePawn > APawn > AActor > UObject
                public const string mLockonValidDist = mPawnPlayerBase + "0x170c"; // float
                public const string mStaminaShadowColorCoef = mPawnPlayerBase + "0x1710"; // float
                public const string mStaminaShadowStartFadeLowerLimit = mPawnPlayerBase + "0x1714"; // float
                public const string mShadowFadeSpeed = mPawnPlayerBase + "0x1718"; // float
                public const string mStaminaShadowMinOpacity = mPawnPlayerBase + "0x171c"; // float
                public const string mMiddleBossKillGameSpeedRate = mPawnPlayerBase + "0x1720"; // float
                public const string mMiddleBossKillGameSpeedKeepTime = mPawnPlayerBase + "0x1724"; // float
                public const string mMiddleBossKillGameSpeedInBlendTime = mPawnPlayerBase + "0x1728"; // float
                public const string mMiddleBossKillGameSpeedOutBlendTime = mPawnPlayerBase + "0x172c"; // float
                public const string mMiddleBossKillPostEffectRate = mPawnPlayerBase + "0x1730"; // float
                public const string mPlayerCtrl = mPawnPlayerBase + "0x1734,"; // ABrgPlayerCtrl_Base*
                public const string mbSafeState = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbAutoLockon = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbFadeOutDeathEf = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbBumpBattle = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbBumpMiddleBossBattle = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbCautionEnemy = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mbPointLightEnable = mPawnPlayerBase + "0x173c"; // uint32_t : 1
                public const string mAttackRotSpeed = mPawnPlayerBase + "0x1740"; // float
                public const string mAutoLockonRotSpeed = mPawnPlayerBase + "0x1744"; // float
                public const string mTargetPointID = mPawnPlayerBase + "0x1748,"; // FString
                public const string mAutoLockonTarget = mPawnPlayerBase + "0x1758,"; // AActor*
                public const string mAutoLockonTargetPosIndex = mPawnPlayerBase + "0x1760"; // int32_t
                public const string mMoveActionNode = mPawnPlayerBase + "0x1764,"; // UAnimNodeBlendByProperty*
                public const string mStaminaShadowColor = mPawnPlayerBase + "0x176c"; // float
                public const string mDeathEffect = mPawnPlayerBase + "0x1770,"; // UParticleSystemComponent*
                public const string mDeathHitEffect = mPawnPlayerBase + "0x1778,"; // UParticleSystemComponent*
                public const string mDeathEfOpacity = mPawnPlayerBase + "0x1780"; // float
                public const string mBumpMiddleBossCtrl = mPawnPlayerBase + "0x1784,"; // ABrgAICtrl_MiddleBossBase*
                public const string mSleepyPostEffect = mPawnPlayerBase + "0x178c,"; // UMaterialEffect*
                public const string mSleepyPostProcessActor = mPawnPlayerBase + "0x1794,"; // ABrgPostEffectMaterialInstanceActor*
                public const string mSleepyPostEffectParam = mPawnPlayerBase + "0x179c"; // float
                public const string mSmokeEffect = mPawnPlayerBase + "0x17a0,"; // UParticleSystemComponent*
                public const string mChangeCollisionRadius = mPawnPlayerBase + "0x17a8"; // float
                public const string mPointLight = mPawnPlayerBase + "0x17ac,"; // ABrgPointLightMovable*
                public const string mLightPos = mPawnPlayerBase + "0x17b4,"; // FVector
                public const string mLightColor = mPawnPlayerBase + "0x17c0,"; // FColor
                public const string mLightBrightness = mPawnPlayerBase + "0x17c4"; // float
                public const string mLightMaxBrightness = mPawnPlayerBase + "0x17c8"; // float
                public const string mLightFedeInTime = mPawnPlayerBase + "0x17cc"; // float
                public const string mLightFedeOutTime = mPawnPlayerBase + "0x17d0"; // float
                public const string mLightBoneName = mPawnPlayerBase + "0x17d4,"; // FName
                public const string mLightRadius = mPawnPlayerBase + "0x17dc"; // float
            }

            public class ABrgCommonPawn_CustomCharaNative
            {
                // Inheritance: AActor > UObject
                public const string mGameInfoNative = mPlayerCommonPawnNative + "0x27c,"; // ABrgGameInfoNative*
                public const string mPawnNative = mPlayerCommonPawnNative + "0x284,"; // ABrgPawn_BaseNative*
                public const string mActionStateNative = mPlayerCommonPawnNative + "0x28c,"; // ABrgActionState_CustomCharaNative*
                public const string mFighterType = mPlayerCommonPawnNative + "0x294,"; // FString
                public const string mFighterGrade = mPlayerCommonPawnNative + "0x2a4"; // int32_t
                public const string mLimitBreak = mPlayerCommonPawnNative + "0x2a8"; // int32_t
                public const string mBoneMesh = mPlayerCommonPawnNative + "0x2ac,"; // UBrgSkeletalMeshComponent*
                public const string mBodyBoneMesh = mPlayerCommonPawnNative + "0x2b4,"; // UBrgSkeletalMeshComponent*
                public const string mFrogMesh = mPlayerCommonPawnNative + "0x2bc,"; // UBrgSkeletalMeshComponent*
                public const string mMeshMaterialInstArray = mPlayerCommonPawnNative + "0x2c4,"; // TArray<UMaterialInstanceConstant*>
                public const string mMeshPhyscsWeightAnimArray = mPlayerCommonPawnNative + "0x2d4,"; // TArray<FBrgMeshPhysicsWeightAnim>
                public const string mbFrog = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mHeadEquip = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbNonMask = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbRefreshEquipPartMesh = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mEquipMeshLoadArmOnly = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbDebugEquipDrop = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mChangeBaseAsset = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbWeaponLGun = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbWeaponRGun = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mDisablePlayerEventLog = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbAiming = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbDeathEnablePhysicsStartTime = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbDeathChangePhysics = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbMuleAttackUpValid = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbSkillMoveGaugeUpEnable = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbRecoil = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbRecoilUP = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbChangeZombieSkinReq = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mbZombieSkinLoading = mPlayerCommonPawnNative + "0x2e4"; // uint32_t : 1
                public const string mBodyDbAssetId = mPlayerCommonPawnNative + "0x2e8,"; // FString
                public const string mHairDbAssetId = mPlayerCommonPawnNative + "0x2f8,"; // FString
                public const string mGasmaskDbAssetId = mPlayerCommonPawnNative + "0x308,"; // FString
                public const string mBodyDiffuseColor = mPlayerCommonPawnNative + "0x318,"; // FLinearColor
                public const string mHeadEquipPtid = mPlayerCommonPawnNative + "0x328,"; // FString
                public const string mQuickUsePart0xa = mPlayerCommonPawnNative + "0x338,"; // FBrgQuickUseItemInfo
                public const string mQuickUseDeathBagIndex = mPlayerCommonPawnNative + "0x4c8"; // int32_t
                public const string mPartDropRate = mPlayerCommonPawnNative + "0x4cc"; // float
                public const string mPartDropDurRate = mPlayerCommonPawnNative + "0x4d0"; // float
                public const string mEquipMawashiType = mPlayerCommonPawnNative + "0x4d4,"; // EBrgBoss4Mawashi
                public const string mEquipPartCollisionChannel0xf = mPlayerCommonPawnNative + "0x4d5,"; // ERBCollisionChannel
                public const string meArmLWeaponType = mPlayerCommonPawnNative + "0x4e4,"; // EBrgArmWeaponType
                public const string meArmRWeaponType = mPlayerCommonPawnNative + "0x4e5,"; // EBrgArmWeaponType
                public const string mGender = mPlayerCommonPawnNative + "0x4e6,"; // EBrgDbGender
                public const string mBeamYoyoRSkillMoveUseArm = mPlayerCommonPawnNative + "0x4e7,"; // EBrgDbEquipSite
                public const string mEquipPartMesh0xf = mPlayerCommonPawnNative + "0x4e8,"; // UBrgPartMesh*
                public const string mEquipPartInfo0x8 = mPlayerCommonPawnNative + "0x560,"; // FBrgLocalItemInfo
                public const string mEquipWeaponSlotNo_L = mPlayerCommonPawnNative + "0x3e00"; // int32_t
                public const string mEquipWeaponSlotNo_R = mPlayerCommonPawnNative + "0x3e04"; // int32_t
                public const string mDeathBag = mPlayerCommonPawnNative + "0x3e08,"; // TArray<FBrgLocalItemInfo>
                public const string mBackupDeathBag = mPlayerCommonPawnNative + "0x3e18,"; // TArray<FBrgDeathBagBackupInfo>
                public const string mDbPartArmRType = mPlayerCommonPawnNative + "0x3e28,"; // FBrgDbPartArmType
                public const string mDbPartArmLType = mPlayerCommonPawnNative + "0x3eac,"; // FBrgDbPartArmType
                public const string mDbPartArmR = mPlayerCommonPawnNative + "0x3f30,"; // FBrgDbPart
                public const string mDbPartArmL = mPlayerCommonPawnNative + "0x4160,"; // FBrgDbPart
                public const string mArmWeaponL = mPlayerCommonPawnNative + "0x4390,"; // ABrgWeapon_Base*
                public const string mArmWeaponR = mPlayerCommonPawnNative + "0x4398,"; // ABrgWeapon_Base*
                public const string mCharaStatisticsData = mPlayerCommonPawnNative + "0x43a0,"; // FBrgCharaStatisticsData
                public const string mFlameRadiationEffect = mPlayerCommonPawnNative + "0x441c,"; // UParticleSystemComponent*
                public const string mFlameRadiationVigor = mPlayerCommonPawnNative + "0x4424"; // float
                public const string mDeathPhysicsStartTime = mPlayerCommonPawnNative + "0x4428"; // float
                public const string mDeathPhysicsBlendTime = mPlayerCommonPawnNative + "0x442c"; // float
                public const string mDeathPhysicsBlendCnt = mPlayerCommonPawnNative + "0x4430"; // float
                public const string mTotalStatus = mPlayerCommonPawnNative + "0x4434,"; // FBrgTotalStatus
                public const string mEquipStatus = mPlayerCommonPawnNative + "0x4504,"; // FBrgEquipStatus
                public const string mEquipResearchInfo = mPlayerCommonPawnNative + "0x46bc,"; // FBrgEquipResearchInfo
                public const string mSkillStatus = mPlayerCommonPawnNative + "0x46d4,"; // FBrgSkillStatus
                public const string mStatusAilmentStatus = mPlayerCommonPawnNative + "0x4ae0,"; // FBrgStatusAilmentStatus
                public const string mMstLvlArmLStatus = mPlayerCommonPawnNative + "0x4b74,"; // FBrgMasterLevelStatus
                public const string mMstLvlArmRStatus = mPlayerCommonPawnNative + "0x4ba0,"; // FBrgMasterLevelStatus
                public const string mMstPointStatus = mPlayerCommonPawnNative + "0x4bcc,"; // FBrgMasterPointStatus
                public const string mSpecialStatus = mPlayerCommonPawnNative + "0x4bdc,"; // FBrgSpecialStatus
                public const string mWeaponLAtkScale = mPlayerCommonPawnNative + "0x4bec"; // float
                public const string mWeaponRAtkScale = mPlayerCommonPawnNative + "0x4bf0"; // float
                public const string mSearchExtent = mPlayerCommonPawnNative + "0x4bf4,"; // FVector
                public const string mPreSearchTargetArray = mPlayerCommonPawnNative + "0x4c00,"; // TArray<ABrgPawn_BaseNative*>
                public const string mStompAttackTarget = mPlayerCommonPawnNative + "0x4c10,"; // ABrgPawn_Base*
                public const string mStompSearchAngle = mPlayerCommonPawnNative + "0x4c18"; // float
                public const string mCaptureTarget = mPlayerCommonPawnNative + "0x4c1c,"; // ABrgPawn_BaseNative*
                public const string mCaptureSearchInfo = mPlayerCommonPawnNative + "0x4c24,"; // FBrgSearchInfo
                public const string mBackAttackTarget = mPlayerCommonPawnNative + "0x4c2c,"; // ABrgPawn_Base*
                public const string mBackAttackSearchInfo = mPlayerCommonPawnNative + "0x4c34,"; // FBrgSearchInfo
                public const string mJumpAttackTarget = mPlayerCommonPawnNative + "0x4c3c,"; // ABrgPawn_Base*
                public const string mJumpAttackSearchInfo = mPlayerCommonPawnNative + "0x4c44,"; // FBrgSearchInfo
                public const string mJumpAttackValidHeight = mPlayerCommonPawnNative + "0x4c4c"; // float
                public const string mWrestlingTarget = mPlayerCommonPawnNative + "0x4c50,"; // ABrgPawn_Base*
                public const string mWrestlingSearchInfo = mPlayerCommonPawnNative + "0x4c58,"; // FBrgSearchInfo
                public const string mRobSearchInfo = mPlayerCommonPawnNative + "0x4c60,"; // FBrgSearchInfo
                public const string mCarryTarget = mPlayerCommonPawnNative + "0x4c68,"; // ABrgPawn_Base*
                public const string mNoDmgKillAttackUpRate = mPlayerCommonPawnNative + "0x4c70"; // float
                public const string mSkillMoveGaugeRate = mPlayerCommonPawnNative + "0x4c74"; // float
                public const string mSkillMoveGaugeStockNum = mPlayerCommonPawnNative + "0x4cd0"; // int32_t
                public const string mSkillMoveGaugeStockMax = mPlayerCommonPawnNative + "0x4cd4"; // int32_t
                public const string mSkillMoveGaugeStockAdd = mPlayerCommonPawnNative + "0x4c80"; // int32_t
                public const string mSkillMoveGaugeUpRate = mPlayerCommonPawnNative + "0x4c84"; // float
                public const string mUseSkillMoveGaugeUp = mPlayerCommonPawnNative + "0x4c88"; // float
                public const string mShovelLPowerUpTime = mPlayerCommonPawnNative + "0x4c8c"; // float
                public const string mShovelRPowerUpTime = mPlayerCommonPawnNative + "0x4c90"; // float
                public const string mPitchingMachineLPowerUpTime = mPlayerCommonPawnNative + "0x4c94"; // float
                public const string mPitchingMachineRPowerUpTime = mPlayerCommonPawnNative + "0x4c98"; // float
                public const string mBeamYoyoLSkillMoveTime = mPlayerCommonPawnNative + "0x4c9c"; // float
                public const string mBeamYoyoRSkillMoveTime = mPlayerCommonPawnNative + "0x4ca0"; // float
                public const string mGoreFinishSearchInfo = mPlayerCommonPawnNative + "0x4ca4,"; // FBrgSearchInfo
                public const string mRecoilCnt = mPlayerCommonPawnNative + "0x4cac"; // float
                public const string mRecoilTime = mPlayerCommonPawnNative + "0x4cb0"; // float
                public const string mRecileVerticalTarget = mPlayerCommonPawnNative + "0x4cb4"; // float
                public const string mRecileHorizontalTarget = mPlayerCommonPawnNative + "0x4cb8"; // float
                public const string mRecileVerticalTotal = mPlayerCommonPawnNative + "0x4cbc"; // float
                public const string mRecileHorizontalTotal = mPlayerCommonPawnNative + "0x4cc0"; // float
                public const string mRecileNotAimAdjustRate = mPlayerCommonPawnNative + "0x4cc4"; // float

                public class ABrgWeaponBaseL : ABrgCommonPawn_CustomCharaNative
                {
                    public const string mOwnerPawn = mArmWeaponL + "0x4c8,"; // ABrgPawn_Base*
                    public const string mOwnerCommonPawn = mArmWeaponL + "0x4d0,"; // ABrgCommonPawn_CustomChara*
                    public const string mMeshRef = mArmWeaponL + "0x4d8,"; // USkeletalMesh*
                    public const string mEDbEquipSite = mArmWeaponL + "0x4e0,"; // EBrgDbEquipSite
                    public const string meWeaponAttr = mArmWeaponL + "0x4e1,"; // EBrgAttackAttr
                    public const string mbCanUseState = mArmWeaponL + "0x4e4"; // uint32_t : 1
                    public const string mbAttrEffectAttachOwner = mArmWeaponL + "0x4e4"; // uint32_t : 1
                    public const string mbAttrSoundMute = mArmWeaponL + "0x4e4"; // uint32_t : 1
                    public const string mLevelHQ = mArmWeaponL + "0x4e8"; // int32_t
                    public const string mAttachSplitMeshActor = mArmWeaponL + "0x4ec,"; // ABrgKAsset_SplitMesh*
                    public const string mFireAttrAsset = mArmWeaponL + "0x4f4,"; // UParticleSystem*
                    public const string mElectricAttrAsset = mArmWeaponL + "0x4fc,"; // UParticleSystem*
                    public const string mPoisonAttrAsset = mArmWeaponL + "0x504,"; // UParticleSystem*
                    public const string mAttrEffectAttachSocketName = mArmWeaponL + "0x50c,"; // FName
                    public const string mAttrSound = mArmWeaponL + "0x514,"; // USoundCue*
                    public const string mAttrSoundVolume = mArmWeaponL + "0x51c"; // float

                    public class ABrgWeapon_BaseNativeL : ABrgWeaponBaseL
                    {
                        public const string mOwnerActor = mArmWeaponL + "0x27c,"; // AActor*
                        public const string mMeshCompRef = mArmWeaponL + "0x284,"; // UBrgSkeletalMeshComponent*
                        public const string mWeaponDbPart = mArmWeaponL + "0x28c,"; // FBrgDbPart
                        public const string mAttrEffect = mArmWeaponL + "0x4bc,"; // UParticleSystemComponent*
                        public const string mbEffectEnable = mArmWeaponL + "0x4c4"; // uint32_t : 1
                        public const string mbVisible = mArmWeaponL + "0x4c4"; // uint32_t : 1

                        public class USkeletalMeshComponent : ABrgWeapon_BaseNativeL
                        {
                            public const string SkeletalMesh = mMeshCompRef + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = mMeshCompRef + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = mMeshCompRef + "0x288,"; // UAnimTree*
                            public const string Animations = mMeshCompRef + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = mMeshCompRef + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = mMeshCompRef + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = mMeshCompRef + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = mMeshCompRef + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = mMeshCompRef + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = mMeshCompRef + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = mMeshCompRef + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = mMeshCompRef + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = mMeshCompRef + "0x300"; // float
                            public const string GlobalAnimRateScale = mMeshCompRef + "0x304"; // float
                            public const string StreamingDistanceMultiplier = mMeshCompRef + "0x308"; // float
                            public const string MeshObject = mMeshCompRef + "0x30c,"; // FPointer
                            public const string WireframeColor = mMeshCompRef + "0x314,"; // FColor
                            public const string SpaceBases = mMeshCompRef + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = mMeshCompRef + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = mMeshCompRef + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = mMeshCompRef + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = mMeshCompRef + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = mMeshCompRef + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = mMeshCompRef + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = mMeshCompRef + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = mMeshCompRef + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = mMeshCompRef + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = mMeshCompRef + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = mMeshCompRef + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = mMeshCompRef + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = mMeshCompRef + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = mMeshCompRef + "0x3d0"; // int32_t
                            public const string RequiredBones = mMeshCompRef + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = mMeshCompRef + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = mMeshCompRef + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = mMeshCompRef + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = mMeshCompRef + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = mMeshCompRef + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = mMeshCompRef + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = mMeshCompRef + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = mMeshCompRef + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = mMeshCompRef + "0x45c,"; // TMap<None, None>
                            public const string Attachments = mMeshCompRef + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = mMeshCompRef + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = mMeshCompRef + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = mMeshCompRef + "0x4d4"; // int32_t
                            public const string MinLodModel = mMeshCompRef + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = mMeshCompRef + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = mMeshCompRef + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = mMeshCompRef + "0x4e4"; // float
                            public const string AnimationLODFrameRate = mMeshCompRef + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = mMeshCompRef + "0x4ec"; // float
                            public const string ChunkIndexPreview = mMeshCompRef + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = mMeshCompRef + "0x4f4"; // int32_t
                            public const string bForceWireframe = mMeshCompRef + "0x4f8"; // int32_t
                            public const string bForceRefpose = mMeshCompRef + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = mMeshCompRef + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = mMeshCompRef + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = mMeshCompRef + "0x508"; // int32_t
                            public const string bShowPrePhysBones = mMeshCompRef + "0x50c"; // int32_t
                            public const string bHideSkin = mMeshCompRef + "0x510"; // int32_t
                            public const string bForceRawOffset = mMeshCompRef + "0x514"; // int32_t
                            public const string bIgnoreControllers = mMeshCompRef + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = mMeshCompRef + "0x51c"; // int32_t
                            public const string TickTag = mMeshCompRef + "0x520"; // int32_t
                            public const string InitTag = mMeshCompRef + "0x524"; // int32_t
                            public const string CachedAtomsTag = mMeshCompRef + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = mMeshCompRef + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = mMeshCompRef + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = mMeshCompRef + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = mMeshCompRef + "0x538"; // float
                            public const string FramesPhysicsAsleep = mMeshCompRef + "0x53c"; // int32_t
                            public const string bHasValidBodies = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUseRawData = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = mMeshCompRef + "0x548,"; // FVector
                            public const string bEnableClothSimulation = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = mMeshCompRef + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = mMeshCompRef + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = mMeshCompRef + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = mMeshCompRef + "0x584,"; // FRotator
                            public const string ClothExternalForce = mMeshCompRef + "0x590,"; // FVector
                            public const string ClothWind = mMeshCompRef + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = mMeshCompRef + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = mMeshCompRef + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = mMeshCompRef + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = mMeshCompRef + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = mMeshCompRef + "0x5c0"; // float
                            public const string MinPosDampRange = mMeshCompRef + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = mMeshCompRef + "0x5d0,"; // FVector
                            public const string MinPosDampScale = mMeshCompRef + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = mMeshCompRef + "0x5e8,"; // FVector
                            public const string ClothSim = mMeshCompRef + "0x5f4,"; // FPointer
                            public const string SceneIndex = mMeshCompRef + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = mMeshCompRef + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = mMeshCompRef + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = mMeshCompRef + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = mMeshCompRef + "0x630"; // int32_t
                            public const string NumClothMeshIndices = mMeshCompRef + "0x634"; // int32_t
                            public const string ClothMeshParentData = mMeshCompRef + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = mMeshCompRef + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = mMeshCompRef + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = mMeshCompRef + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = mMeshCompRef + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = mMeshCompRef + "0x67c"; // int32_t
                            public const string ClothRBChannel = mMeshCompRef + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = mMeshCompRef + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = mMeshCompRef + "0x688"; // float
                            public const string ClothImpulseScale = mMeshCompRef + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = mMeshCompRef + "0x690"; // float
                            public const string bClothUseCompartment = mMeshCompRef + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = mMeshCompRef + "0x698"; // float
                            public const string LastClothLocation = mMeshCompRef + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = mMeshCompRef + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = mMeshCompRef + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = mMeshCompRef + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = mMeshCompRef + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = mMeshCompRef + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = mMeshCompRef + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = mMeshCompRef + "0x6c4"; // float
                            public const string bSkipInitClothing = mMeshCompRef + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = mMeshCompRef + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = mMeshCompRef + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = mMeshCompRef + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = mMeshCompRef + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = mMeshCompRef + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = mMeshCompRef + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = mMeshCompRef + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = mMeshCompRef + "0x704"; // float
                            public const string bSoftBodyFrozen = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = mMeshCompRef + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = mMeshCompRef + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = mMeshCompRef + "0x714,"; // FPointer
                            public const string LimitMaterial = mMeshCompRef + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = mMeshCompRef + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = mMeshCompRef + "0x750,"; // FVector
                            public const string RootBoneTranslation = mMeshCompRef + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = mMeshCompRef + "0x768,"; // FVector
                            public const string RootMotionMode = mMeshCompRef + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = mMeshCompRef + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = mMeshCompRef + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = mMeshCompRef + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = mMeshCompRef + "0x778"; // int32_t
                            public const string RootMotionRotationMode = mMeshCompRef + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = mMeshCompRef + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = mMeshCompRef + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = mMeshCompRef + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = mMeshCompRef + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = mMeshCompRef + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = mMeshCompRef + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = mMeshCompRef + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = mMeshCompRef + "0x7c4,"; // char
                            public const string MorphTargetsQueried = mMeshCompRef + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = mMeshCompRef + "0x7d8"; // uint32_t : 1
                        }

                        public class UBrgSkeletalMeshComponent : ABrgWeapon_BaseNativeL
                        {

                        }
                    }
                }

                public class ABrgWeaponBaseR : ABrgCommonPawn_CustomCharaNative
                {
                    public const string mOwnerPawn = mArmWeaponR + "0x4c8,"; // ABrgPawn_Base*
                    public const string mOwnerCommonPawn = mArmWeaponR + "0x4d0,"; // ABrgCommonPawn_CustomChara*
                    public const string mMeshRef = mArmWeaponR + "0x4d8,"; // USkeletalMesh*
                    public const string mEDbEquipSite = mArmWeaponR + "0x4e0,"; // EBrgDbEquipSite
                    public const string meWeaponAttr = mArmWeaponR + "0x4e1,"; // EBrgAttackAttr
                    public const string mbCanUseState = mArmWeaponR + "0x4e4"; // uint32_t : 1
                    public const string mbAttrEffectAttachOwner = mArmWeaponR + "0x4e4"; // uint32_t : 1
                    public const string mbAttrSoundMute = mArmWeaponR + "0x4e4"; // uint32_t : 1
                    public const string mLevelHQ = mArmWeaponR + "0x4e8"; // int32_t
                    public const string mAttachSplitMeshActor = mArmWeaponR + "0x4ec,"; // ABrgKAsset_SplitMesh*
                    public const string mFireAttrAsset = mArmWeaponR + "0x4f4,"; // UParticleSystem*
                    public const string mElectricAttrAsset = mArmWeaponR + "0x4fc,"; // UParticleSystem*
                    public const string mPoisonAttrAsset = mArmWeaponR + "0x504,"; // UParticleSystem*
                    public const string mAttrEffectAttachSocketName = mArmWeaponR + "0x50c,"; // FName
                    public const string mAttrSound = mArmWeaponR + "0x514,"; // USoundCue*
                    public const string mAttrSoundVolume = mArmWeaponR + "0x51c"; // float

                    public class ABrgWeapon_BaseNativeR : ABrgWeaponBaseR
                    {
                        public const string mOwnerActor = mArmWeaponR + "0x27c,"; // AActor*
                        public const string mMeshCompRef = mArmWeaponR + "0x284,"; // UBrgSkeletalMeshComponent*
                        public const string mWeaponDbPart = mArmWeaponR + "0x28c,"; // FBrgDbPart
                        public const string mAttrEffect = mArmWeaponR + "0x4bc,"; // UParticleSystemComponent*
                        public const string mbEffectEnable = mArmWeaponR + "0x4c4"; // uint32_t : 1
                        public const string mbVisible = mArmWeaponR + "0x4c4"; // uint32_t : 1

                        public class USkeletalMeshComponent : ABrgWeapon_BaseNativeR
                        {
                            public const string SkeletalMesh = mMeshCompRef + "0x278,"; // USkeletalMesh*
                            public const string AttachedToSkelComponent = mMeshCompRef + "0x280,"; // USkeletalMeshComponent*
                            public const string AnimTreeTemplate = mMeshCompRef + "0x288,"; // UAnimTree*
                            public const string Animations = mMeshCompRef + "0x290,"; // UAnimNode*
                            public const string AnimTickArray = mMeshCompRef + "0x298,"; // TArray<UAnimNode*>
                            public const string AnimAlwaysTickArray = mMeshCompRef + "0x2a8,"; // TArray<UAnimNode*>
                            public const string AnimTickRelevancyArray = mMeshCompRef + "0x2b8,"; // TArray<int32_t>
                            public const string AnimTickWeightsArray = mMeshCompRef + "0x2c8,"; // TArray<float>
                            public const string SkelControlTickArray = mMeshCompRef + "0x2d8,"; // TArray<USkelControlBase*>
                            public const string PhysicsAsset = mMeshCompRef + "0x2e8,"; // UPhysicsAsset*
                            public const string PhysicsAssetInstance = mMeshCompRef + "0x2f0,"; // UPhysicsAssetInstance*
                            public const string ApexClothing = mMeshCompRef + "0x2f8,"; // FPointer
                            public const string PhysicsWeight = mMeshCompRef + "0x300"; // float
                            public const string GlobalAnimRateScale = mMeshCompRef + "0x304"; // float
                            public const string StreamingDistanceMultiplier = mMeshCompRef + "0x308"; // float
                            public const string MeshObject = mMeshCompRef + "0x30c,"; // FPointer
                            public const string WireframeColor = mMeshCompRef + "0x314,"; // FColor
                            public const string SpaceBases = mMeshCompRef + "0x318,"; // TArray<FBoneAtom>
                            public const string LocalAtoms = mMeshCompRef + "0x328,"; // TArray<FBoneAtom>
                            public const string bSkipPhysicsAnim = mMeshCompRef + "0x338"; // uint32_t : 1
                            public const string bSkipPhysicsVelo = mMeshCompRef + "0x338"; // uint32_t : 1
                            public const string bInitBackUpAtoms = mMeshCompRef + "0x33c,"; // TArray<char>
                            public const string BackLinearVelocity = mMeshCompRef + "0x34c,"; // TArray<FVector>
                            public const string BackAngularVelocity = mMeshCompRef + "0x35c,"; // TArray<FVector>
                            public const string BackPhysAtom = mMeshCompRef + "0x36c,"; // TArray<FBoneAtom>
                            public const string BackBoneAtom = mMeshCompRef + "0x37c,"; // TArray<FBoneAtom>
                            public const string BackBackPhysAtom = mMeshCompRef + "0x38c,"; // TArray<FBoneAtom>
                            public const string BackBackBoneAtom = mMeshCompRef + "0x39c,"; // TArray<FBoneAtom>
                            public const string bFixPhysicsBoneStretch = mMeshCompRef + "0x3ac"; // uint32_t : 1
                            public const string CachedLocalAtoms = mMeshCompRef + "0x3b0,"; // TArray<FBoneAtom>
                            public const string CachedSpaceBases = mMeshCompRef + "0x3c0,"; // TArray<FBoneAtom>
                            public const string LowUpdateFrameRate = mMeshCompRef + "0x3d0"; // int32_t
                            public const string RequiredBones = mMeshCompRef + "0x3d4,"; // TArray<char>
                            public const string ComposeOrderedRequiredBones = mMeshCompRef + "0x3e4,"; // TArray<char>
                            public const string ParentAnimComponent = mMeshCompRef + "0x3f4,"; // USkeletalMeshComponent*
                            public const string ParentBoneMap = mMeshCompRef + "0x3fc,"; // TArray<int32_t>
                            public const string AnimSets = mMeshCompRef + "0x40c,"; // TArray<UAnimSet*>
                            public const string TemporarySavedAnimSets = mMeshCompRef + "0x41c,"; // TArray<UAnimSet*>
                            public const string MorphSets = mMeshCompRef + "0x42c,"; // TArray<UMorphTargetSet*>
                            public const string ActiveMorphs = mMeshCompRef + "0x43c,"; // TArray<FActiveMorph>
                            public const string ActiveCurveMorphs = mMeshCompRef + "0x44c,"; // TArray<FActiveMorph>
                            public const string MorphTargetIndexMap = mMeshCompRef + "0x45c,"; // TMap<None, None>
                            public const string Attachments = mMeshCompRef + "0x4a4,"; // TArray<FAttachment>
                            public const string SkelControlIndex = mMeshCompRef + "0x4b4,"; // TArray<char>
                            public const string PostPhysSkelControlIndex = mMeshCompRef + "0x4c4,"; // TArray<char>
                            public const string ForcedLodModel = mMeshCompRef + "0x4d4"; // int32_t
                            public const string MinLodModel = mMeshCompRef + "0x4d8"; // int32_t
                            public const string PredictedLODLevel = mMeshCompRef + "0x4dc"; // int32_t
                            public const string OldPredictedLODLevel = mMeshCompRef + "0x4e0"; // int32_t
                            public const string AnimationLODDistanceFactor = mMeshCompRef + "0x4e4"; // float
                            public const string AnimationLODFrameRate = mMeshCompRef + "0x4e8"; // int32_t
                            public const string MaxDistanceFactor = mMeshCompRef + "0x4ec"; // float
                            public const string ChunkIndexPreview = mMeshCompRef + "0x4f0"; // int32_t
                            public const string SectionIndexPreview = mMeshCompRef + "0x4f4"; // int32_t
                            public const string bForceWireframe = mMeshCompRef + "0x4f8"; // int32_t
                            public const string bForceRefpose = mMeshCompRef + "0x4fc"; // int32_t
                            public const string bOldForceRefPose = mMeshCompRef + "0x500"; // int32_t
                            public const string bNoSkeletonUpdate = mMeshCompRef + "0x504"; // uint32_t : 1
                            public const string bDisplayBones = mMeshCompRef + "0x508"; // int32_t
                            public const string bShowPrePhysBones = mMeshCompRef + "0x50c"; // int32_t
                            public const string bHideSkin = mMeshCompRef + "0x510"; // int32_t
                            public const string bForceRawOffset = mMeshCompRef + "0x514"; // int32_t
                            public const string bIgnoreControllers = mMeshCompRef + "0x518"; // int32_t
                            public const string bTransformFromAnimParent = mMeshCompRef + "0x51c"; // int32_t
                            public const string TickTag = mMeshCompRef + "0x520"; // int32_t
                            public const string InitTag = mMeshCompRef + "0x524"; // int32_t
                            public const string CachedAtomsTag = mMeshCompRef + "0x528"; // int32_t
                            public const string bUseSingleBodyPhysics = mMeshCompRef + "0x52c"; // int32_t
                            public const string bRequiredBonesUpToDate = mMeshCompRef + "0x530"; // int32_t
                            public const string UseAlternateWeightTrack = mMeshCompRef + "0x534"; // uint32_t : 1
                            public const string MinDistFactorForKinematicUpdate = mMeshCompRef + "0x538"; // float
                            public const string FramesPhysicsAsleep = mMeshCompRef + "0x53c"; // int32_t
                            public const string bHasValidBodies = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSkipAllUpdateWhenPhysicsAsleep = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bComponentUseFixedSkelBounds = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUseBoundsFromParentAnimComponent = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bConsiderAllBodiesForBounds = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateSkelWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bIgnoreControllersWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bTickAnimNodesWhenNotRendered = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNotUpdatingKinematicDueToDistance = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceDiscardRootMotion = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNotifyRootMotionProcessed = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bRootMotionModeChangeNotify = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bRootMotionExtractedNotify = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bProcessingRootMotion = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFXMaterialInstanceCreation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableFaceFX = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bAnimTreeInitialised = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceMeshObjectUpdate = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bHasPhysicsAssetInstance = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateKinematicBonesFromAnimation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUpdateJointsFromAnimation = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSkelCompFixed = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bHasHadPhysicsBlendedIn = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bForceUpdateAttachmentsInTick = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bEnableFullAnimWeightBodies = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPerBoneVolumeEffects = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPerBoneMotionBlur = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bSyncActorLocationToRootRigidBody = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bUseRawData = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bDisableWarningWhenAnimNotFound = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bOverrideAttachmentOwnerVisibility = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bNeedsToDeleteHitMask = mMeshCompRef + "0x540"; // uint32_t : 1
                            public const string bPauseAnims = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bChartDistanceFactor = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bEnableLineCheckWithBounds = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bCanHighlightSelectedSections = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string bUpdateMorphWhenParentAnimComponentExists = mMeshCompRef + "0x544"; // uint32_t : 1
                            public const string LineCheckBoundsScale = mMeshCompRef + "0x548,"; // FVector
                            public const string bEnableClothSimulation = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bDisableClothCollision = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothFrozen = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAutoFreezeClothWhenNotRendered = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothAwakeOnStartup = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelClamp = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothBaseVelInterp = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAttachClothVertsToBaseBody = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bIsClothOnStaticObject = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bUpdatedFixedClothVerts = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothPositionalDampening = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bClothWindRelativeToOwner = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bRecentlyRendered = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bCacheAnimSequenceNodes = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bNeedsInstanceWeightUpdate = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bAlwaysUseInstanceWeights = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bUpdateComposeSkeletonPasses = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string bValidTemporarySavedAnimSets = mMeshCompRef + "0x554"; // uint32_t : 1
                            public const string InstanceVertexWeightBones = mMeshCompRef + "0x558,"; // TArray<FBonePair>
                            public const string LODInfo = mMeshCompRef + "0x568,"; // TArray<FSkelMeshComponentLODInfo>
                            public const string FrozenLocalToWorldPos = mMeshCompRef + "0x578,"; // FVector
                            public const string FrozenLocalToWorldRot = mMeshCompRef + "0x584,"; // FRotator
                            public const string ClothExternalForce = mMeshCompRef + "0x590,"; // FVector
                            public const string ClothWind = mMeshCompRef + "0x59c,"; // FVector
                            public const string ClothBaseVelClampRange = mMeshCompRef + "0x5a8,"; // FVector
                            public const string ClothBlendWeight = mMeshCompRef + "0x5b4"; // float
                            public const string ClothDynamicBlendWeight = mMeshCompRef + "0x5b8"; // float
                            public const string ClothBlendMinDistanceFactor = mMeshCompRef + "0x5bc"; // float
                            public const string ClothBlendMaxDistanceFactor = mMeshCompRef + "0x5c0"; // float
                            public const string MinPosDampRange = mMeshCompRef + "0x5c4,"; // FVector
                            public const string MaxPosDampRange = mMeshCompRef + "0x5d0,"; // FVector
                            public const string MinPosDampScale = mMeshCompRef + "0x5dc,"; // FVector
                            public const string MaxPosDampScale = mMeshCompRef + "0x5e8,"; // FVector
                            public const string ClothSim = mMeshCompRef + "0x5f4,"; // FPointer
                            public const string SceneIndex = mMeshCompRef + "0x5fc"; // int32_t
                            public const string ClothMeshPosData = mMeshCompRef + "0x600,"; // TArray<FVector>
                            public const string ClothMeshNormalData = mMeshCompRef + "0x610,"; // TArray<FVector>
                            public const string ClothMeshIndexData = mMeshCompRef + "0x620,"; // TArray<int32_t>
                            public const string NumClothMeshVerts = mMeshCompRef + "0x630"; // int32_t
                            public const string NumClothMeshIndices = mMeshCompRef + "0x634"; // int32_t
                            public const string ClothMeshParentData = mMeshCompRef + "0x638,"; // TArray<int32_t>
                            public const string NumClothMeshParentIndices = mMeshCompRef + "0x648"; // int32_t
                            public const string ClothMeshWeldedPosData = mMeshCompRef + "0x64c,"; // TArray<FVector>
                            public const string ClothMeshWeldedNormalData = mMeshCompRef + "0x65c,"; // TArray<FVector>
                            public const string ClothMeshWeldedIndexData = mMeshCompRef + "0x66c,"; // TArray<int32_t>
                            public const string ClothDirtyBufferFlag = mMeshCompRef + "0x67c"; // int32_t
                            public const string ClothRBChannel = mMeshCompRef + "0x680,"; // ERBCollisionChannel
                            public const string ClothRBCollideWithChannels = mMeshCompRef + "0x684,"; // FRBCollisionChannelContainer
                            public const string ClothForceScale = mMeshCompRef + "0x688"; // float
                            public const string ClothImpulseScale = mMeshCompRef + "0x68c"; // float
                            public const string ClothAttachmentTearFactor = mMeshCompRef + "0x690"; // float
                            public const string bClothUseCompartment = mMeshCompRef + "0x694"; // uint32_t : 1
                            public const string MinDistanceForClothReset = mMeshCompRef + "0x698"; // float
                            public const string LastClothLocation = mMeshCompRef + "0x69c,"; // FVector
                            public const string ApexClothingRBChannel = mMeshCompRef + "0x6a8,"; // ERBCollisionChannel
                            public const string ApexClothingRBCollideWithChannels = mMeshCompRef + "0x6ac,"; // FRBCollisionChannelContainer
                            public const string ApexClothingCollisionRBChannel = mMeshCompRef + "0x6b0,"; // ERBCollisionChannel
                            public const string bAutoFreezeApexClothingWhenNotRendered = mMeshCompRef + "0x6b4"; // uint32_t : 1
                            public const string bLocalSpaceWind = mMeshCompRef + "0x6b4"; // uint32_t : 1
                            public const string WindVelocity = mMeshCompRef + "0x6b8,"; // FVector
                            public const string WindVelocityBlendTime = mMeshCompRef + "0x6c4"; // float
                            public const string bSkipInitClothing = mMeshCompRef + "0x6c8"; // uint32_t : 1
                            public const string SoftBodySim = mMeshCompRef + "0x6cc,"; // FPointer
                            public const string SoftBodySceneIndex = mMeshCompRef + "0x6d4"; // int32_t
                            public const string bEnableSoftBodySimulation = mMeshCompRef + "0x6d8"; // uint32_t : 1
                            public const string SoftBodyTetraPosData = mMeshCompRef + "0x6dc,"; // TArray<FVector>
                            public const string SoftBodyTetraIndexData = mMeshCompRef + "0x6ec,"; // TArray<int32_t>
                            public const string NumSoftBodyTetraVerts = mMeshCompRef + "0x6fc"; // int32_t
                            public const string NumSoftBodyTetraIndices = mMeshCompRef + "0x700"; // int32_t
                            public const string SoftBodyImpulseScale = mMeshCompRef + "0x704"; // float
                            public const string bSoftBodyFrozen = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bAutoFreezeSoftBodyWhenNotRendered = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bSoftBodyAwakeOnStartup = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string bSoftBodyUseCompartment = mMeshCompRef + "0x708"; // uint32_t : 1
                            public const string SoftBodyRBChannel = mMeshCompRef + "0x70c,"; // ERBCollisionChannel
                            public const string SoftBodyRBCollideWithChannels = mMeshCompRef + "0x710,"; // FRBCollisionChannelContainer
                            public const string SoftBodyASVPlane = mMeshCompRef + "0x714,"; // FPointer
                            public const string LimitMaterial = mMeshCompRef + "0x71c,"; // UMaterial*
                            public const string RootMotionDelta = mMeshCompRef + "0x730,"; // FBoneAtom
                            public const string RootMotionVelocity = mMeshCompRef + "0x750,"; // FVector
                            public const string RootBoneTranslation = mMeshCompRef + "0x75c,"; // FVector
                            public const string RootMotionAccelScale = mMeshCompRef + "0x768,"; // FVector
                            public const string RootMotionMode = mMeshCompRef + "0x774,"; // ERootMotionMode
                            public const string PreviousRMM = mMeshCompRef + "0x775,"; // ERootMotionMode
                            public const string PendingRMM = mMeshCompRef + "0x776,"; // ERootMotionMode
                            public const string OldPendingRMM = mMeshCompRef + "0x777,"; // ERootMotionMode
                            public const string bRMMOneFrameDelay = mMeshCompRef + "0x778"; // int32_t
                            public const string RootMotionRotationMode = mMeshCompRef + "0x77c,"; // ERootMotionRotationMode
                            public const string AnimRotationOnly = mMeshCompRef + "0x77d,"; // EAnimRotationOnly
                            public const string FaceFXBlendMode = mMeshCompRef + "0x77e,"; // EFaceFXBlendMode
                            public const string FaceFXActorInstance = mMeshCompRef + "0x780,"; // FPointer
                            public const string CachedFaceFXAudioComp = mMeshCompRef + "0x788,"; // UAudioComponent*
                            public const string BoneVisibilityStates = mMeshCompRef + "0x790,"; // TArray<char>
                            public const string LocalToWorldBoneAtom = mMeshCompRef + "0x7a0,"; // FBoneAtom
                            public const string ProgressiveDrawingFraction = mMeshCompRef + "0x7c0"; // float
                            public const string CustomSortAlternateIndexMode = mMeshCompRef + "0x7c4,"; // char
                            public const string MorphTargetsQueried = mMeshCompRef + "0x7c8,"; // TArray<FName>
                            public const string bSkipUpdateBoundsWhenPhysicsAsleep = mMeshCompRef + "0x7d8"; // uint32_t : 1
                        }

                        public class UBrgSkeletalMeshComponent : ABrgWeapon_BaseNativeR
                        {

                        }
                    }
                }
                
                public class FBrgTotalStatus
                {
                    public const string CharaStatus = mPlayerCommonPawn + "0x4434"; // FBrgCharaStatus
                    public const string AddCharaStatus = mPlayerCommonPawn + "0x4468"; // FBrgCharaStatus
                    public const string NakedAtkPower = mPlayerCommonPawn + "0x449C"; // int32_t
                    public const string ArmLAttackPower = mPlayerCommonPawn + "0x44A0"; // int32_t
                    public const string ArmRAttackPower = mPlayerCommonPawn + "0x44A4"; // int32_t
                    public const string DefencePower = mPlayerCommonPawn + "0x44A8"; // int32_t
                    public const string AddArmLAttackPower = mPlayerCommonPawn + "0x44AC"; // int32_t
                    public const string AddArmRAttackPower = mPlayerCommonPawn + "0x44B0"; // int32_t
                    public const string AddDefencePower = mPlayerCommonPawn + "0x44B4"; // int32_t
                    public const string MaintenanceValue = mPlayerCommonPawn + "0x44B8"; // int32_t
                    public const string MaintenanceRate = mPlayerCommonPawn + "0x44BC"; // float
                    public const string SkillMoveMaintenanceRate = mPlayerCommonPawn + "0x44C0"; // float
                    public const string ExpUpRate = mPlayerCommonPawn + "0x90"; // float
                    public const string AbpUpRate = mPlayerCommonPawn + "0x94"; // float
                    public const string DrainRate_Skill = mPlayerCommonPawn + "0x98"; // float
                    public const string DrainRateMax = mPlayerCommonPawn + "0x9c"; // float
                    public const string DrainRate_StatusAilment = mPlayerCommonPawn + "0xa0"; // float
                    public const string StaminaLifeShaveRate = mPlayerCommonPawn + "0xa4"; // float
                    public const string DamageDownRate = mPlayerCommonPawn + "0xa8"; // float
                    public const string AtkDamageUpRate = mPlayerCommonPawn + "0xac"; // float
                    public const string RiskDamageUpRate = mPlayerCommonPawn + "0xb0"; // float
                    public const string DefenceAttrParamArray0x7 = mPlayerCommonPawn + "0xB4"; // float
                }

                public class FBrgSkillStatus
                {
                    public const string ArmLAttackPower = mPlayerCommonPawn + "0x46D4"; //0x0; // int32_t
                    public const string ArmRAttackPower = mPlayerCommonPawn + "0x46D8"; //0x4; // int32_t
                    public const string NakedAttackPower = mPlayerCommonPawn + "0x46DC"; //0x8; // int32_t
                    public const string DefencePower = mPlayerCommonPawn + "0x46E0"; //0xc; // int32_t
                    public const string ArmLWeaponAttrUpRate = mPlayerCommonPawn + "0x46E4"; //0x10; // float
                    public const string ArmRWeaponAttrUpRate = mPlayerCommonPawn + "0x46E8"; //0x14; // float
                    public const string ArmLCategoryAtkUpRate = mPlayerCommonPawn + "0x46EC"; //0x18; // float
                    public const string ArmRCategoryAtkUpRate = mPlayerCommonPawn + "0x46F0"; //0x1c; // float
                    public const string DefenceAttrParamArray0x7 = mPlayerCommonPawn + "0x46F4"; //0x20; // float
                    public const string CharaStatus = mPlayerCommonPawn + "0x46F8"; //0x3c; // FBrgCharaStatus
                    public const string bSearchUpEnemy = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bSkillCopy = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bBloodTwice = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bDownDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bFireRecovery = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bSearchUpItem = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bTensionDownDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bFireAreaDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bPoisonRecovery = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bDeathBombExplode = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bSlipDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bBlowDownDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bDeathBomb = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bHeadShotDisable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bJumpAttackEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bJustGuardEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bRobEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bDropKickEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bBackAttackPowerUpEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bBackAttackCounterEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bWrestlingEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bJumpAttackPowerUpEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bNoDmgKillAttackUpEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bDmgChargeEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string bSelfKillEnable = mPlayerCommonPawn + "0x4744"; //0x70; // uint32_t : 1
                    public const string FireRecoveryRate = mPlayerCommonPawn + "0x4748"; //0x74; // float
                    public const string bFireGuard = mPlayerCommonPawn + "0x474C"; //0x78; // uint32_t : 1
                    public const string FireGuardRate = mPlayerCommonPawn + "0x4750"; //0x7c; // float
                    public const string bFireDamageReduce = mPlayerCommonPawn + "0x4754"; //0x80; // uint32_t : 1
                    public const string FireDamageRate = mPlayerCommonPawn + "0x4758"; //0x84; // float
                    public const string bFireRodDamageReduce = mPlayerCommonPawn + "0x475C"; //0x88; // uint32_t : 1
                    public const string FireRodDamageRate = mPlayerCommonPawn + "0x4760"; //0x8c; // float
                    public const string bCleaverMeatDrop = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bArmorPiercingShot = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvincibleRandom = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bKiller7Blood = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bDisableSelfAttackSkillMoveIceHockey = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bEnableFireRodExplosion = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bJustGuardExtend = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bNoDmgCritical = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushCloak = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushNoDmg = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushGroggy = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushConfusion = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bDisableEyeDamageForAI = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushRisk = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bCircleSawMaintenance = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bInvalidMushSlow = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bDisableEyeDamageForPlayer = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bSkillMoveDisable = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bStalker = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bMoneyVacuum = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bStopPauseMenu = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bHaveToSpawnPlayerEnemy = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bSleepDisable = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bExplodeEnemyKill = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bJackalTargetDisable = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bEmptyHandsBlow = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bTargetEscapeDisable = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bPreventDeath = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bAvoidInvincible = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bForceJackalSpawn = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bAcidMonitor = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string bBurnEat = mPlayerCommonPawn + "0x4764"; //0x90; // uint32_t : 1
                    public const string FallDamageAdjust = mPlayerCommonPawn + "0x4768"; //0x94; // float
                    public const string ExpUpRate = mPlayerCommonPawn + "0x476C"; //0x98; // float
                    public const string AbpUpRate = mPlayerCommonPawn + "0x4770"; //0x9c; // float
                    public const string HpMaxAtkDefUpRate = mPlayerCommonPawn + "0x4774"; //0xa0; // float
                    public const string HpLowAtkDefUpRate = mPlayerCommonPawn + "0x4778"; //0xa4; // float
                    public const string HpLowAtkDefUpPer = mPlayerCommonPawn + "0x477C"; //0xa8; // float
                    public const string SkillMoveGaugeUpRate = mPlayerCommonPawn + "0x4780"; //0xac; // float
                    public const string SkillMoveAtkUpRate = mPlayerCommonPawn + "0x4784"; //0xb0; // float
                    public const string DrainRate = mPlayerCommonPawn + "0x4788"; //0xb4; // float
                    public const string DrainRateMax = mPlayerCommonPawn + "0x478C"; //0xb8; // float
                    public const string DrainRateNailGun = mPlayerCommonPawn + "0x4790"; //0xbc; // float
                    public const string DrainRateBattleAxe = mPlayerCommonPawn + "0x4794"; //0xc0; // float
                    public const string DrainRateClaw = mPlayerCommonPawn + "0x4798"; //0xc4; // float
                    public const string DrainRateDrill = mPlayerCommonPawn + "0x479C"; //0xc8; // float
                    public const string MoneyUpRate = mPlayerCommonPawn + "0x47A0"; //0xcc; // float
                    public const string AsiistKillRate = mPlayerCommonPawn + "0x47A4"; //0xd0; // float
                    public const string SpiritsUpRate = mPlayerCommonPawn + "0x47A8"; //0xd4; // float
                    public const string AtkUpJustGuardCounter = mPlayerCommonPawn + "0x47AC"; //0xd8; // float
                    public const string SkillMoveGaugeUpFloorStart = mPlayerCommonPawn + "0x47B0"; //0xdc; // int32_t
                    public const string DropKickRunawayRate = mPlayerCommonPawn + "0x47B4"; //0xe0; // float
                    public const string AtkUpProvoke = mPlayerCommonPawn + "0x47B8"; //0xe4; // float
                    public const string AtkUpProvokeBeamMachete = mPlayerCommonPawn + "0x47BC"; //0xe8; // float
                    public const string AtkUpAfterDodge = mPlayerCommonPawn + "0x47C0"; //0xec; // float
                    public const string EnableGravityKick = mPlayerCommonPawn + "0x47C4"; //0xf0; // int32_t
                    public const string ExplodeEnemyKillAtkMax = mPlayerCommonPawn + "0x47C8"; //0xf4; // float
                    public const string AtkUpSurroundedEnemy = mPlayerCommonPawn + "0x47CC"; //0xf8; // float
                    public const string AtkUpSurroundedEnemyMin = mPlayerCommonPawn + "0x47D0"; //0xfc; // int32_t
                    public const string AtkUpSurroundedEnemyMax = mPlayerCommonPawn + "0x47D4"; //0x100; // int32_t
                    public const string SkillMoveGaugeUpFortGuard = mPlayerCommonPawn + "0x47D8"; //0x104; // int32_t
                    public const string SkillMoveGaugeUpFortAssault = mPlayerCommonPawn + "0x47DC"; //0x108; // int32_t
                    public const string CriticalAtkUpPer = mPlayerCommonPawn + "0x47E0"; //0x10c; // float
                    public const string NaturalHealValue = mPlayerCommonPawn + "0x47E4"; //0x110; // int32_t
                    public const string CircleSawMaintenanceRate = mPlayerCommonPawn + "0x47E8"; //0x114; // float - Infinite Durability
                    public const string SabreMaintenanceRate = mPlayerCommonPawn + "0x47EC"; //0x118; // float - Infinite Durability
                    public const string ShotGunMaintenanceRate = mPlayerCommonPawn + "0x47F0"; //0x11c; // float - Infinite Durability
                    public const string ClawMaintenanceRate = mPlayerCommonPawn + "0x47F4"; //0x120; // float - Infinite Durability
                    public const string StunRodMaintenanceRate = mPlayerCommonPawn + "0x47F8"; //0x124; // float - Infinite Durability
                    public const string ThrowingKnifeMaintenanceRate = mPlayerCommonPawn + "0x47FC"; //0x128; // float - Infinite Durability
                    public const string SlashStrikeMaintenanceRate = mPlayerCommonPawn + "0x4800"; //0x12c; // float - Infinite Durability
                    public const string AssaultRifleBulletConsumptionRate = mPlayerCommonPawn + "0x4804"; //0x130; // float - Infinite Durability
                    public const string AtkUpWeaponAssaultRifleHpMax = mPlayerCommonPawn + "0x4808"; //0x134; // float - Infinite Durability
                    public const string FireworksBulletConsumptionRate = mPlayerCommonPawn + "0x480C"; //0x138; // float - Infinite Durability
                    public const string LessDiffusionRate = mPlayerCommonPawn + "0x4868"; //0x13c; // float - No Bullet Spread
                    public const string LessDiffusionRateRevolver = mPlayerCommonPawn + "0x486C"; //0x140; // float - No Bullet Spread
                    public const string LessDiffusionRateShotGun = mPlayerCommonPawn + "0x4870"; //0x144; // float - No Bullet Spread
                    public const string ZeroPosAtkUpRate = mPlayerCommonPawn + "0x481C"; //0x148; // float
                    public const string ZeroPosDistMin = mPlayerCommonPawn + "0x4820"; //0x14c; // float
                    public const string ZeroPosDistMax = mPlayerCommonPawn + "0x4824"; //0x150; // float
                    public const string ZeroPosAtkUpRateRocketLauncher = mPlayerCommonPawn + "0x4828"; //0x154; // float
                    public const string ZeroPosDistMinRocketLauncher = mPlayerCommonPawn + "0x482C"; //0x158; // float
                    public const string ZeroPosDistMaxRocketLauncher = mPlayerCommonPawn + "0x4830"; //0x15c; // float
                    public const string ArmorPiercingShotAtkUpRate = mPlayerCommonPawn + "0x4834"; //0x160; // float
                    public const string ArmorPiercingShotTime = mPlayerCommonPawn + "0x4838"; //0x164; // float
                    public const string InvincibleRandomRate = mPlayerCommonPawn + "0x483C"; //0x168; // float
                    public const string SkillMoveGaugeUpFortRevenge = mPlayerCommonPawn + "0x4840"; //0x16c; // int32_t
                    public const string HeadShotDamageReduceRate = mPlayerCommonPawn + "0x4844"; //0x170; // float
                    public const string SniperRifleLastShotAtkUpRate = mPlayerCommonPawn + "0x4848"; //0x174; // float
                    public const string RocketLauncherLastShotAtkUpRate = mPlayerCommonPawn + "0x484C"; //0x178; // float
                    public const string HomeRunRate = mPlayerCommonPawn + "0x4850"; //0x17c; // int32_t
                    public const string StrikeRate = mPlayerCommonPawn + "0x4854"; //0x180; // int32_t
                    public const string StrikeAtkUpRate = mPlayerCommonPawn + "0x4858"; //0x184; // float
                    public const string BeanBallRate = mPlayerCommonPawn + "0x485C"; //0x188; // int32_t
                    public const string BeanBallAtkUpRate = mPlayerCommonPawn + "0x4860"; //0x18c; // float
                    public const string RevolverBulletConsumptionRate = mPlayerCommonPawn + "0x4864"; //0x190; // float - Infinite Durability
                    public const string SniperRifleBulletConsumptionRate = mPlayerCommonPawn + "0x4868"; //0x194; // float - Infinite Durability
                    public const string RocketLauncherBulletConsumptionRate = mPlayerCommonPawn + "0x486C"; //0x198; // float - Infinite Durability
                    public const string PitchingMachineBulletConsumptionRate = mPlayerCommonPawn + "0x4870"; //0x19c; // float - Infinite Durability
                    public const string FlameRadiationBulletConsumptionRate = mPlayerCommonPawn + "0x4874"; //0x1a0; // float - Infinite Durability
                    public const string ArcheryBulletConsumptionRate = mPlayerCommonPawn + "0x4878"; //0x1a4; // float - Infinite Durability
                    public const string TaserGunBulletConsumptionRate = mPlayerCommonPawn + "0x487C"; //0x1a8; // float - Infinite Durability
                    public const string SquareTimberFuelConsumptionRate = mPlayerCommonPawn + "0x4880"; //0x1ac; // float - Infinite Durability
                    public const string SlashStrikeBulletConsumptionRate = mPlayerCommonPawn + "0x4884"; //0x1b0; // float - Infinite Durability
                    public const string ButterflyKnifeDurabilityDownRate = mPlayerCommonPawn + "0x4888"; //0x1b4; // float - Infinite Durability
                    public const string KatanaDurabilityDownRate = mPlayerCommonPawn + "0x488C"; //0x1b8; // float - Infinite Durability
                    public const string BoxingGloveDurabilityDownRate = mPlayerCommonPawn + "0x4890"; //0x1bc; // float - Infinite Durability
                    public const string FireRodExplosionInterval = mPlayerCommonPawn + "0x4894"; //0x1c0; // float
                    public const string FireRodExplosionAtkUp = mPlayerCommonPawn + "0x4898"; //0x1c4; // float
                    public const string RevivalTimeExtend = mPlayerCommonPawn + "0x489C"; //0x1c8; // float
                    public const string MushExplodeAtkRate = mPlayerCommonPawn + "0x48A0"; //0x1cc; // float
                    public const string EatMushTimeExtend = mPlayerCommonPawn + "0x48A4"; //0x1d0; // float
                    public const string AtkUpWeaponHammer = mPlayerCommonPawn + "0x48A8"; //0x1d4; // float
                    public const string AtkUpWeaponMachete = mPlayerCommonPawn + "0x48AC"; //0x1d8; // float
                    public const string AtkUpWeaponAssaultRifle = mPlayerCommonPawn + "0x48B0"; //0x1dc; // float
                    public const string AtkUpWeaponSabre = mPlayerCommonPawn + "0x48B4"; //0x1e0; // float
                    public const string AtkUpWeaponFireworks = mPlayerCommonPawn + "0x48B8"; //0x1e4; // float
                    public const string AtkUpWeaponIron = mPlayerCommonPawn + "0x48BC"; //0x1e8; // float
                    public const string AtkUpWeaponCrossbow = mPlayerCommonPawn + "0x48C0"; //0x1ec; // float
                    public const string AtkUpWeaponKatana = mPlayerCommonPawn + "0x48C4"; //0x1f0; // float
                    public const string AtkUpWeaponIceHockey = mPlayerCommonPawn + "0x48C8"; //0x1f4; // float
                    public const string AtkUpWeaponCircleSaw = mPlayerCommonPawn + "0x48CC"; //0x1f8; // float
                    public const string AtkUpWeaponRevolver = mPlayerCommonPawn + "0x48D0"; //0x1fc; // float
                    public const string AtkUpWeaponSword = mPlayerCommonPawn + "0x48D4"; //0x200; // float
                    public const string AtkUpWeaponChainSaw = mPlayerCommonPawn + "0x48D8"; //0x204; // float
                    public const string AtkUpWeaponPitchingMachine = mPlayerCommonPawn + "0x48DC"; //0x208; // float
                    public const string AtkUpWeaponKnife = mPlayerCommonPawn + "0x48E0"; //0x20c; // float
                    public const string AtkUpWeaponClaw = mPlayerCommonPawn + "0x48E4"; //0x210; // float
                    public const string AtkUpWeaponBowling = mPlayerCommonPawn + "0x48E8"; //0x214; // float
                    public const string AtkUpWeaponCleaver = mPlayerCommonPawn + "0x48EC"; //0x218; // float
                    public const string AtkUpWeaponSniperRifle = mPlayerCommonPawn + "0x48F0"; //0x21c; // float
                    public const string AtkUpWeaponNailBat = mPlayerCommonPawn + "0x48F4"; //0x220; // float
                    public const string AtkUpWeaponPecker = mPlayerCommonPawn + "0x48F8"; //0x224; // float
                    public const string AtkUpWeaponRocketLauncher = mPlayerCommonPawn + "0x48FC"; //0x228; // float
                    public const string AtkUpWeaponBattleAxe = mPlayerCommonPawn + "0x4900"; //0x22c; // float
                    public const string AtkUpWeaponShotGun = mPlayerCommonPawn + "0x4904"; //0x230; // float
                    public const string AtkUpWeaponBike = mPlayerCommonPawn + "0x4908"; //0x234; // float
                    public const string AtkUpWeaponThunderRod = mPlayerCommonPawn + "0x490C"; //0x238; // float
                    public const string AtkUpWeaponStunRod = mPlayerCommonPawn + "0x4910"; //0x23c; // float
                    public const string AtkUpWeaponDrill = mPlayerCommonPawn + "0x4914"; //0x240; // float
                    public const string AtkUpWeaponNailGun = mPlayerCommonPawn + "0x4918"; //0x244; // float
                    public const string AtkUpWeaponArcwelding = mPlayerCommonPawn + "0x491C"; //0x248; // float
                    public const string AtkUpWeaponFireRod = mPlayerCommonPawn + "0x4920"; //0x24c; // float
                    public const string AtkUpWeaponFireBaton = mPlayerCommonPawn + "0x4924"; //0x250; // float
                    public const string AtkUpWeaponShovel = mPlayerCommonPawn + "0x4928"; //0x254; // float
                    public const string AtkUpWeaponFireRadiation = mPlayerCommonPawn + "0x492C"; //0x258; // float
                    public const string AtkUpWeaponThrowingKnife = mPlayerCommonPawn + "0x4930"; //0x25c; // float
                    public const string AtkUpWeaponMorningStar = mPlayerCommonPawn + "0x4934"; //0x260; // float
                    public const string AtkUpWeaponArchery = mPlayerCommonPawn + "0x4938"; //0x264; // float
                    public const string AtkUpWeaponBoxingGlove = mPlayerCommonPawn + "0x493C"; //0x268; // float
                    public const string AtkUpWeaponYoyo = mPlayerCommonPawn + "0x4940"; //0x26c; // float
                    public const string AtkUpWeaponSpear = mPlayerCommonPawn + "0x4944"; //0x270; // float
                    public const string AtkUpWeaponShishimai = mPlayerCommonPawn + "0x4948"; //0x274; // float
                    public const string AtkUpWeaponTaserGun = mPlayerCommonPawn + "0x494C"; //0x278; // float
                    public const string AtkUpWeaponSquareTimber = mPlayerCommonPawn + "0x4950"; //0x27c; // float
                    public const string AtkUpSkillMoveSword = mPlayerCommonPawn + "0x4954"; //0x280; // float
                    public const string AtkUpSkillMoveIceHockey = mPlayerCommonPawn + "0x4958"; //0x284; // float
                    public const string AtkUpSkillMoveBike = mPlayerCommonPawn + "0x495C"; //0x288; // float
                    public const string AtkUpSkillMoveBeamMachte = mPlayerCommonPawn + "0x4960"; //0x28c; // float
                    public const string AtkUpSkillMoveShotGun = mPlayerCommonPawn + "0x4964"; //0x290; // float
                    public const string StunRodSkillMoveCostDown = mPlayerCommonPawn + "0x4968"; //0x294; // int32_t
                    public const string NoDmgKillAttackUpPer = mPlayerCommonPawn + "0x496C"; //0x298; // float
                    public const string NoDmgKillAttackUpMax = mPlayerCommonPawn + "0x4970"; //0x29c; // float
                    public const string TargetHpHighAddDamagePer = mPlayerCommonPawn + "0x4974"; //0x2a0; // float
                    public const string TargetHpHighAddDamageRate = mPlayerCommonPawn + "0x4978"; //0x2a4; // float
                    public const string TargetHpLowAddDamagePer = mPlayerCommonPawn + "0x497C"; //0x2a8; // float
                    public const string TargetHpLowAddDamageRate = mPlayerCommonPawn + "0x4980"; //0x2ac; // float
                    public const string DmgChargePer = mPlayerCommonPawn + "0x4984"; //0x2b0; // float
                    public const string ClimbCriffSpeedRate = mPlayerCommonPawn + "0x4988"; //0x2b4; // float
                    public const string DashStaminaRate = mPlayerCommonPawn + "0x498C"; //0x2b8; // float
                    public const string AvoidStaminaRate = mPlayerCommonPawn + "0x4990"; //0x2bc; // float
                    public const string GuardStaminaRate = mPlayerCommonPawn + "0x4994"; //0x2c0; // float
                    public const string GuardDamageRate = mPlayerCommonPawn + "0x4998"; //0x2c4; // float
                    public const string DownDamageRate = mPlayerCommonPawn + "0x499C"; //0x2c8; // float
                    public const string TiredSpeedRate = mPlayerCommonPawn + "0x49A0"; //0x2cc; // float
                    public const string BackAttackDamageUpRate = mPlayerCommonPawn + "0x49A4"; //0x2d0; // float
                    public const string DownAttackDamageUpRate = mPlayerCommonPawn + "0x49A8"; //0x2d4; // float
                    public const string HeadShotDamageUpRate = mPlayerCommonPawn + "0x49AC"; //0x2d8; // float
                    public const string DoubleGripAttackDamageUpRate = mPlayerCommonPawn + "0x49B0"; //0x2dc; // float
                    public const string GroggyAccumuRate = mPlayerCommonPawn + "0x49B4"; //0x2e0; // float
                    public const string DownSpeedRate = mPlayerCommonPawn + "0x49B8"; //0x2e4; // float
                    public const string EatSpeedRate = mPlayerCommonPawn + "0x49BC"; //0x2e8; // float
                    public const string StaminaLifeShaveRate = mPlayerCommonPawn + "0x49C0"; //0x2ec; // float
                    public const string CureFloorRate = mPlayerCommonPawn + "0x49C4"; //0x2f0; // float
                    public const string ReloadSpeedRate = mPlayerCommonPawn + "0x49C8"; //0x2f4; // float
                    public const string ReloadSpeedRateCrossBow = mPlayerCommonPawn + "0x49CC"; //0x2f8; // float
                    public const string MagazineUpRate = mPlayerCommonPawn + "0x49D0"; //0x2fc; // float
                    public const string RecoilDownRate = mPlayerCommonPawn + "0x4A2C"; //0x300; // float
                    public const string GunAttackUpRate = mPlayerCommonPawn + "0x4A30"; //0x304; // float
                    public const string DifferGenderAttackUpRate = mPlayerCommonPawn + "0x4A34"; //0x308; // float
                    public const string CriticalUpPer = mPlayerCommonPawn + "0x4A38"; //0x30c; // float
                    public const string CriticalUpPerYoyo = mPlayerCommonPawn + "0x4A3C"; //0x310; // float
                    public const string CriticalUpPerCrossBow = mPlayerCommonPawn + "0x4A40"; //0x314; // float
                    public const string CriticalUpPerSabre = mPlayerCommonPawn + "0x49EC"; //0x318; // float
                    public const string DoppelgangerKillerRate = mPlayerCommonPawn + "0x49F0"; //0x31c; // float
                    public const string StelthUpRate = mPlayerCommonPawn + "0x49F4"; //0x320; // float
                    public const string MaintenanceValue = mPlayerCommonPawn + "0x49F8"; //0x324; // int32_t
                    public const string MaintenanceRate = mPlayerCommonPawn + "0x49FC"; //0x328; // float
                    public const string SkillMoveMaintenanceRate = mPlayerCommonPawn + "0x4A00"; //0x32c; // float
                    public const string RecoveryUpRate = mPlayerCommonPawn + "0x4A04"; //0x330; // int32_t
                    public const string FireDmgTimeReductionRate = mPlayerCommonPawn + "0x4A08"; //0x334; // float
                    public const string FireDmgUpRateFireBaton = mPlayerCommonPawn + "0x4A0C"; //0x338; // float
                    public const string FireDmgUpRateFlameRadiation = mPlayerCommonPawn + "0x4A10"; //0x33c; // float
                    public const string ElectDmgTimeReductionRate = mPlayerCommonPawn + "0x4A14"; //0x340; // float
                    public const string MuleAttackUpRate = mPlayerCommonPawn + "0x4A18"; //0x344; // float
                    public const string SandDmgTimeRate = mPlayerCommonPawn + "0x4A1C"; //0x348; // float
                    public const string HungrySpeedDownRate = mPlayerCommonPawn + "0x4A20"; //0x34c; // float
                    public const string ElevetorDiscountRate = mPlayerCommonPawn + "0x4A24"; //0x350; // float
                    public const string EquipNeedStrRate = mPlayerCommonPawn + "0x4A28"; //0x354; // float
                    public const string EquipNeedDexRate = mPlayerCommonPawn + "0x4A2C"; //0x358; // float
                    public const string EquipNeedVitRate = mPlayerCommonPawn + "0x4A30"; //0x35c; // float
                    public const string EquipNeedLukRate = mPlayerCommonPawn + "0x4A34"; //0x360; // float
                    public const string EquipNeedHpRate = mPlayerCommonPawn + "0x4A38"; //0x364; // float
                    public const string EquipNeedStmRate = mPlayerCommonPawn + "0x4A3C"; //0x368; // float
                    public const string BagSpareAtkUpRate = mPlayerCommonPawn + "0x4A40"; //0x36c; // float
                    public const string DmgHumanRate = mPlayerCommonPawn + "0x4A44"; //0x370; // float
                    public const string DmgNonHumanRate = mPlayerCommonPawn + "0x4A48"; //0x374; // float
                    public const string ComboFirstDmgRate = mPlayerCommonPawn + "0x4A4C"; //0x378; // float
                    public const string ComboSecondDmgRate = mPlayerCommonPawn + "0x4A50"; //0x37c; // float
                    public const string SkillConsumAtkUp = mPlayerCommonPawn + "0x4A54"; //0x380; // float
                    public const string SkillMoveSlowMotionRate = mPlayerCommonPawn + "0x4A58"; //0x384; // float
                    public const string SkillMoveSlowMotionTime = mPlayerCommonPawn + "0x4A5C"; //0x388; // float
                    public const string SkillMovePcExcepSlowMotionRate = mPlayerCommonPawn + "0x4A60"; //0x38c; // float
                    public const string SkillMovePcExcepSlowMotionTime = mPlayerCommonPawn + "0x4A64"; //0x390; // float
                    public const string RobHelathRate = mPlayerCommonPawn + "0x4A68"; //0x394; // float
                    public const string PlayerEnemyVoiceRate = mPlayerCommonPawn + "0x4A6C"; //0x398; // float
                    public const string BulletDurabilityRecoveryRate = mPlayerCommonPawn + "0x4A70"; //0x39c; // float
                    public const string DashDisAddExpUp = mPlayerCommonPawn + "0x4A74"; //0x3a0; // float
                    public const string DashDisExpUpMax = mPlayerCommonPawn + "0x4A78"; //0x3a4; // float
                    public const string DashDisAddMoneyUp = mPlayerCommonPawn + "0x4A7C"; //0x3a8; // float
                    public const string DashDisMoneyUpMax = mPlayerCommonPawn + "0x4A80"; //0x3ac; // float
                    public const string AvoidDisAddExpUp = mPlayerCommonPawn + "0x4A84"; //0x3b0; // float
                    public const string AvoidDisExpUpMax = mPlayerCommonPawn + "0x4A88"; //0x3b4; // float
                    public const string AvoidDisAddMoneyUp = mPlayerCommonPawn + "0x4A8C"; //0x3b8; // float
                    public const string AvoidDisMoneyUpMax = mPlayerCommonPawn + "0x4A90"; //0x3bc; // float
                    public const string GuardDisAddExpUp = mPlayerCommonPawn + "0x4A94"; //0x3c0; // float
                    public const string GuardDisExpUpMax = mPlayerCommonPawn + "0x4A98"; //0x3c4; // float
                    public const string GuardDisAddMoneyUp = mPlayerCommonPawn + "0x4A9C"; //0x3c8; // float
                    public const string GuardDisMoneyUpMax = mPlayerCommonPawn + "0x4AA0"; //0x3cc; // float
                    public const string EmptyHandsFireProb = mPlayerCommonPawn + "0x4AA4"; //0x3d0; // float
                    public const string EmptyHandsFirePer = mPlayerCommonPawn + "0x4AA8"; //0x3d4; // float
                    public const string EmptyHandsElectProb = mPlayerCommonPawn + "0x4AAC"; //0x3d8; // float
                    public const string EmptyHandsElectPer = mPlayerCommonPawn + "0x4AB0"; //0x3dc; // float
                    public const string EmptyHandsPoisonProb = mPlayerCommonPawn + "0x4AB4"; //0x3e0; // float
                    public const string EmptyHandsPoisonPer = mPlayerCommonPawn + "0x4AB8"; //0x3e4; // float
                    public const string EmptyHandsExpProb = mPlayerCommonPawn + "0x4ABC"; //0x3e8; // float
                    public const string OutRangeAttackUpArray = mPlayerCommonPawn + "0x4AC0,"; //0x3ec; // TArray<FBrgOutRangeAttackUpParam>
                    public const string LevelCheckAttackUpArray = mPlayerCommonPawn + "0x4AD0,"; //0x3fc; // TArray<FBrgLevelCheckAttackUpParam>
                }
            }

            public class ABrgCommonPawn_CustomChara
            {
                // Inheritance: ABrgCommonPawn_CustomCharaNative > AActor > UObject
                public const string mGameInfo = mPlayerCommonPawn + "0x4cc8,"; // ABrgGameInfo*
                public const string mPawn = mPlayerCommonPawn + "0x4cd0,"; // ABrgPawn_Base*
                public const string mActionState = mPlayerCommonPawn + "0x4cd8,"; // ABrgActionState_CustomChara*
                public const string meUseArm = mPlayerCommonPawn + "0x4ce0,"; // EBrgLRDirType
                public const string mbGrabRotType = mPlayerCommonPawn + "0x4ce1,"; // EBrgGrabRotType
                public const string mbGrabAbsorbType = mPlayerCommonPawn + "0x4ce2,"; // EBrgGrabAbsorbType
                public const string mGrabCarryState = mPlayerCommonPawn + "0x4ce3,"; // EBrgGrabCarryState
                public const string mArmRightInterpAnimIndex = mPlayerCommonPawn + "0x4ce4,"; // char
                public const string mArmLeftInterpAnimIndex = mPlayerCommonPawn + "0x4ce5,"; // char
                public const string mIdleAnimType = mPlayerCommonPawn + "0x4ce6,"; // EBrgIdleAnimType
                public const string meAimArm = mPlayerCommonPawn + "0x4ce7,"; // EBrgLRDirType
                public const string meAimAnimState = mPlayerCommonPawn + "0x4ce8,"; // EBrgTransitionState
                public const string mePickUp = mPlayerCommonPawn + "0x4ce9,"; // EPickUpKind
                public const string mPickUpDropItemType = mPlayerCommonPawn + "0x4cea,"; // EBrgDropItemType
                public const string meEatType = mPlayerCommonPawn + "0x4ceb,"; // EEatType
                public const string meAttackHitSEPhysMatType = mPlayerCommonPawn + "0x4cec,"; // EPhysMatSEKind
                public const string meRobType = mPlayerCommonPawn + "0x4ced,"; // ECustomCharaRob
                public const string mGoreCauserType = mPlayerCommonPawn + "0x4cee,"; // EBrgArmWeaponType
                public const string mMeshDamageType = mPlayerCommonPawn + "0x4cef,"; // EBrgGoreMeshDamageSettingTypes
                public const string mProvokeTypeID = mPlayerCommonPawn + "0x4cf0"; // int32_t
                public const string mbCautionState = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbGuardSuccess = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbBoneIllusion = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbGrabIn = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbGrabWarp = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbGrabTargetRotation = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbBackAtkCamera = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mArmAnimDisable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbPlayAnimArmIdle = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mHandAnimDisable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbDisableChangeEquipPart = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbDisableRefreshEquipPart = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbHaveStrengthWeapon = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbFantasyEquipAtkUp = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbFantasyEquipDefUp = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbDisableSquareTimberFuelConsumption = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbAimEnable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mEatDegestionReq = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbMeditation = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbAutoRagdollDisable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbDropKickGoreHead = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbEquipDurabilityDownEnable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbRobGrab = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbRobGrabCompetition = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbRobDisable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbItemThrow = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbSkillMoving = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbSkillMoveDisable = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbRageBoost = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbFlameGoreBurn = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbFlameGoreAshe = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbArcweldingGoreHeat = mPlayerCommonPawn + "0x4cf4"; // uint32_t : 1
                public const string mbArcweldingGoreStone = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbArcweldingGoreDisappear = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbGoreElectBone = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbNoDmgCheckTakeDamage = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbSkillMoveGaugeUpFloorStart = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbArmorPiercingShot = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbFireRodExplosion = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbForceMasterLevelMax = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_DashDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_GuradDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_AvoidDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_MoveDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_MoveOnly = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_ChangeItemDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_GuardInvin = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbStatusAilment_SkillDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbBoneIllusionDisable = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbPlayShovelPowerUpSE = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbBaseMeshEquip = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbBoxingGloveChance = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mBlackThunderSwordPowerUp = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbBlackThunderMedusaSkillMove = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbUseWeaponStomp = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mbFortAssaultButtonOn = mPlayerCommonPawn + "0x4cf8"; // uint32_t : 1
                public const string mDefaultStompValidRange = mPlayerCommonPawn + "0x4cfc"; // float
                public const string mBaseWalkSpeed = mPlayerCommonPawn + "0x4d00"; // float
                public const string mSkateboardMesh = mPlayerCommonPawn + "0x4d04,"; // UBrgSkeletalMeshComponent*
                public const string mBivouacClothMesh = mPlayerCommonPawn + "0x4d0c,"; // UBrgSkeletalMeshComponent*
                public const string mGoreHeartMesh = mPlayerCommonPawn + "0x4d14,"; // UBrgSkeletalMeshComponent*
                public const string mGoreRocketMesh = mPlayerCommonPawn + "0x4d1c,"; // UBrgSkeletalMeshComponent*
                public const string mBodyDefaultTranslation = mPlayerCommonPawn + "0x4d24,"; // FVector
                public const string mFrogDefaultTranslation = mPlayerCommonPawn + "0x4d30,"; // FVector
                public const string mOriginPhysicsAsset = mPlayerCommonPawn + "0x4d3c,"; // UPhysicsAsset*
                public const string mGrabDefaultDist = mPlayerCommonPawn + "0x4d44"; // float
                public const string mGrabTargetDist = mPlayerCommonPawn + "0x4d48"; // float
                public const string mGrabTargetSpeed = mPlayerCommonPawn + "0x4d4c"; // float
                public const string mBackAttackType = mPlayerCommonPawn + "0x4d50"; // int32_t
                public const string mCurrentArmRightPlayAnimName = mPlayerCommonPawn + "0x4d54,"; // FName
                public const string mCurrentArmLeftPlayAnimName = mPlayerCommonPawn + "0x4d5c,"; // FName
                public const string mArmRightBlendAnimNode = mPlayerCommonPawn + "0x4d64,"; // UAnimNodeBlendPerBone*
                public const string mArmRightInterpAnimNode = mPlayerCommonPawn + "0x4d6c,"; // UAnimNodeBlendList*
                public const string mArmRightCustomAnimSlot0x4 = mPlayerCommonPawn + "0x4d74,"; // UBrgAnimNode_CustomAnim*
                public const string mArmLeftBlendAnimNode = mPlayerCommonPawn + "0x4d94,"; // UAnimNodeBlendPerBone*
                public const string mArmLeftInterpAnimNode = mPlayerCommonPawn + "0x4d9c,"; // UAnimNodeBlendList*
                public const string mArmLeftCustomAnimSlot0x4 = mPlayerCommonPawn + "0x4da4,"; // UBrgAnimNode_CustomAnim*
                public const string mArmMotionStr = mPlayerCommonPawn + "0x4dc4,"; // FString
                public const string mArmLMotionType = mPlayerCommonPawn + "0x4dd4"; // int32_t
                public const string mArmRMotionType = mPlayerCommonPawn + "0x4dd8"; // int32_t
                public const string mHandRightBlendAnimNode = mPlayerCommonPawn + "0x4ddc,"; // UAnimNodeAdditiveBlending*
                public const string mHandLeftBlendAnimNode = mPlayerCommonPawn + "0x4de4,"; // UAnimNodeAdditiveBlending*
                public const string mHandRightCustomAnimSlot = mPlayerCommonPawn + "0x4dec,"; // UBrgAnimNode_CustomAnim*
                public const string mHandLeftCustomAnimSlot = mPlayerCommonPawn + "0x4df4,"; // UBrgAnimNode_CustomAnim*
                public const string mCurrentHandRightPlayAnimName = mPlayerCommonPawn + "0x4dfc,"; // FName
                public const string mCurrentHandLeftPlayAnimName = mPlayerCommonPawn + "0x4e04,"; // FName
                public const string mHandLMotionType = mPlayerCommonPawn + "0x4e0c"; // int32_t
                public const string mHandRMotionType = mPlayerCommonPawn + "0x4e10"; // int32_t
                public const string mThrowingKnifeBladePool = mPlayerCommonPawn + "0x4e14,"; // TArray<ABrgProjectile_ThrowingKnifeBlade*>
                public const string mGuradOutAnimName = mPlayerCommonPawn + "0x4e24,"; // FName
                public const string mSquatInAnimName = mPlayerCommonPawn + "0x4e2c,"; // FName
                public const string mSquatAnimName = mPlayerCommonPawn + "0x4e34,"; // FName
                public const string mSquatOutAnimName = mPlayerCommonPawn + "0x4e3c,"; // FName
                public const string mTiredAnimName = mPlayerCommonPawn + "0x4e44,"; // FName
                public const string mAimInAnimName = mPlayerCommonPawn + "0x4e4c,"; // FName
                public const string mAimOutAnimName = mPlayerCommonPawn + "0x4e54,"; // FName
                public const string mCurrentAimType = mPlayerCommonPawn + "0x4e5c"; // int32_t
                public const string mAimLMotionType = mPlayerCommonPawn + "0x4e60"; // int32_t
                public const string mAimRMotionType = mPlayerCommonPawn + "0x4e64"; // int32_t
                public const string mDiffusionNotAimAdjustRate = mPlayerCommonPawn + "0x4e68"; // float
                public const string mPickUpDropItemIndex = mPlayerCommonPawn + "0x4e6c"; // int32_t
                public const string mPickUpDropItemUniqueID = mPlayerCommonPawn + "0x4e70"; // int32_t
                public const string mEatPositiveEfcIDArray = mPlayerCommonPawn + "0x4e74,"; // TArray<FString>
                public const string mEatNegativeEfcIDArray = mPlayerCommonPawn + "0x4e84,"; // TArray<FString>
                public const string mEatEfcDelayCnt = mPlayerCommonPawn + "0x4e94"; // float
                public const string mEatAddExp = mPlayerCommonPawn + "0x4e98"; // int32_t
                public const string mEatRecvHung = mPlayerCommonPawn + "0x4e9c"; // int32_t
                public const string mEatRecvHealth = mPlayerCommonPawn + "0x4ea0"; // int32_t
                public const string mEatDeathBagSlotIndex = mPlayerCommonPawn + "0x4ea4"; // int32_t
                public const string mMeditationType = mPlayerCommonPawn + "0x4ea8"; // int32_t
                public const string mMeditationHealthRecovery = mPlayerCommonPawn + "0x4eac"; // float
                public const string mMeditationSkillGaugeRecovery = mPlayerCommonPawn + "0x4eb0"; // float
                public const string mMeditationLightEffect = mPlayerCommonPawn + "0x4eb4,"; // UParticleSystemComponent*
                public const string mMeditationLightOpacity = mPlayerCommonPawn + "0x4ebc"; // float
                public const string mBaseAtkUpScale = mPlayerCommonPawn + "0x4F18"; // float
                public const string mBaseDefUpScale = mPlayerCommonPawn + "0x4F20"; // float
                public const string mGuardBaseDmgReduceRate = mPlayerCommonPawn + "0x4ec8"; // float
                public const string mGuardProjectileDmgReduceRate = mPlayerCommonPawn + "0x4ecc"; // float
                public const string mGuardJackalRebornDmgReduceRate = mPlayerCommonPawn + "0x4ed0"; // float
                public const string mJustGuardDmgReduceRate = mPlayerCommonPawn + "0x4ed4"; // float
                public const string mRiskAttackUpRate = mPlayerCommonPawn + "0x4ed8"; // float
                public const string mNewRiskAttackUpRate = mPlayerCommonPawn + "0x4edc"; // float
                public const string mSandEyeDamageTime = mPlayerCommonPawn + "0x4ee0"; // float
                public const string mSmokeEyeDamageTime = mPlayerCommonPawn + "0x4ee4"; // float
                public const string mAvoidStaminaConsumption = mPlayerCommonPawn + "0x4ee8"; // float
                public const string mStepStaminaConsumption = mPlayerCommonPawn + "0x4eec"; // float
                public const string mDashStaminaConsumption = mPlayerCommonPawn + "0x4ef0"; // float
                public const string mDirectAttackStaminaConsumption = mPlayerCommonPawn + "0x4ef4"; // float
                public const string mGuardStaminaConsumption = mPlayerCommonPawn + "0x4ef8"; // float
                public const string mJustGuardStaminaConsumption = mPlayerCommonPawn + "0x4efc"; // float
                public const string mBreakFallStaminaConsumption = mPlayerCommonPawn + "0x4f00"; // float
                public const string mTakeAttackRecoveryGroggyAccum = mPlayerCommonPawn + "0x4f04"; // float
                public const string mBreakFallRate_1 = mPlayerCommonPawn + "0x4f08"; // int32_t
                public const string mBreakFallRate_2 = mPlayerCommonPawn + "0x4f0c"; // int32_t
                public const string mBreakFallRate_3 = mPlayerCommonPawn + "0x4f10"; // int32_t
                public const string mBreakFallRate_4 = mPlayerCommonPawn + "0x4f14"; // int32_t
                public const string mBreakFallRate_5 = mPlayerCommonPawn + "0x4f18"; // int32_t
                public const string mBreakFallRate_Jackal = mPlayerCommonPawn + "0x4f1c"; // int32_t
                public const string mRobTargetPawn = mPlayerCommonPawn + "0x4f20,"; // ABrgPawn_Base*
                public const string mRobTargetCommonPawn = mPlayerCommonPawn + "0x4f28,"; // ABrgCommonPawn_CustomChara*
                public const string mRobCauserCommonPawn = mPlayerCommonPawn + "0x4f30,"; // ABrgCommonPawn_CustomChara*
                public const string mRobGrabTimeCnt = mPlayerCommonPawn + "0x4f38"; // float
                public const string mRobGrabTimeMax = mPlayerCommonPawn + "0x4f3c"; // float
                public const string mRobGrabRate = mPlayerCommonPawn + "0x4f40"; // float
                public const string mRobAutoPullPower = mPlayerCommonPawn + "0x4f44"; // float
                public const string mRobCauserPawnArray = mPlayerCommonPawn + "0x4f48,"; // TArray<ABrgPawn_Base*>
                public const string mThrowItem = mPlayerCommonPawn + "0x4f58,"; // AActor*
                public const string mThrowStartPos = mPlayerCommonPawn + "0x4f60,"; // FVector
                public const string mTraceStartPos = mPlayerCommonPawn + "0x4f6c,"; // FVector
                public const string mUseSkillMoveID = mPlayerCommonPawn + "0x4f78,"; // FString
                public const string mSkillMoveConvRate = mPlayerCommonPawn + "0x4f88"; // float
                public const string mSwordSkillMoveCounterTarget = mPlayerCommonPawn + "0x4f8c,"; // ABrgPawn_Base*
                public const string mSplitPos = mPlayerCommonPawn + "0x4f94,"; // FVector
                public const string mGoreFinishTargetPawn = mPlayerCommonPawn + "0x4fa0,"; // ABrgPawn_Base*
                public const string mGoreFinishTargetCommonPawn = mPlayerCommonPawn + "0x4fa8,"; // ABrgCommonPawn_CustomChara*
                public const string mGoreFinishCauserPawn = mPlayerCommonPawn + "0x4fb0,"; // ABrgPawn_Base*
                public const string mFlameGoreCnt = mPlayerCommonPawn + "0x4fb8"; // float
                public const string mFlameGoreFireEffect = mPlayerCommonPawn + "0x4fbc,"; // UParticleSystemComponent*
                public const string mFlameGoreAshEffect = mPlayerCommonPawn + "0x4fc4,"; // UParticleSystemComponent*
                public const string mGoreFinishCnt = mPlayerCommonPawn + "0x4fcc"; // float
                public const string mGoreElectTime = mPlayerCommonPawn + "0x4fd0"; // float
                public const string mGoreFinishHideType = mPlayerCommonPawn + "0x4fd4,"; // FName
                public const string mShishimaiGoreGimmick = mPlayerCommonPawn + "0x4fdc"; // int32_t
                public const string mTaserGunGoreGimmick = mPlayerCommonPawn + "0x4fe0"; // int32_t
                public const string mDropKickDist = mPlayerCommonPawn + "0x4fe4"; // float
                public const string mCopySkillArray = mPlayerCommonPawn + "0x4fe8,"; // TArray<FBrgCopySkill>
                public const string mEmptyHandsExpRadius = mPlayerCommonPawn + "0x4ff8"; // float
                public const string mEmptyHandsExpAttackInfo = mPlayerCommonPawn + "0x4ffc,"; // FBrgAttackInfo
                public const string mDeathBombExplodeRadius = mPlayerCommonPawn + "0x502c"; // float
                public const string mDeathBombAttackInfo = mPlayerCommonPawn + "0x5030,"; // FBrgAttackInfo
                public const string mDmgChargeValue = mPlayerCommonPawn + "0x5060"; // float
                public const string mDashDisExpUpRate = mPlayerCommonPawn + "0x5064"; // float
                public const string mDashDisMoneyUpRate = mPlayerCommonPawn + "0x5068"; // float
                public const string mAvoidDisExpUpRate = mPlayerCommonPawn + "0x506c"; // float
                public const string mAvoidDisMoneyUpRate = mPlayerCommonPawn + "0x5070"; // float
                public const string mGuardDisExpUpRate = mPlayerCommonPawn + "0x5074"; // float
                public const string mGuardDisMoneyUpRate = mPlayerCommonPawn + "0x5078"; // float
                public const string mEscapeDieCount = mPlayerCommonPawn + "0x507c"; // int32_t
                public const string mArmorPiercingShotTimer = mPlayerCommonPawn + "0x5080"; // float
                public const string mFireRodExplosionTimer = mPlayerCommonPawn + "0x5084"; // float
                public const string mMstPointVsPlayerAtkUp = mPlayerCommonPawn + "0x5088"; // float
                public const string mSleepHpRecoveryRate = mPlayerCommonPawn + "0x508c"; // float
                public const string mSplitMeshActors = mPlayerCommonPawn + "0x5090,"; // TArray<ABrgKAsset_SplitMesh*>
                public const string mMeshDamageHideType = mPlayerCommonPawn + "0x50a0,"; // FName
                public const string mIceSlipEffect = mPlayerCommonPawn + "0x50a8,"; // UParticleSystemComponent*
                public const string mFireExtinguisherEffect = mPlayerCommonPawn + "0x50b0,"; // UParticleSystemComponent*
                public const string mGasolineEffect = mPlayerCommonPawn + "0x50b8,"; // UParticleSystemComponent*
                public const string mNailGunSmokeEffect = mPlayerCommonPawn + "0x50c0,"; // UParticleSystemComponent*
                public const string mShovelLPowerUpEffect = mPlayerCommonPawn + "0x50c8,"; // UParticleSystemComponent*
                public const string mShovelRPowerUpEffect = mPlayerCommonPawn + "0x50d0,"; // UParticleSystemComponent*
                public const string mVomitEffect = mPlayerCommonPawn + "0x50d8,"; // UParticleSystemComponent*
                public const string mRedNapalmGunSkillMoveEffect = mPlayerCommonPawn + "0x50e0,"; // UParticleSystemComponent*
                public const string mRedNapalmGunSkillMoveHitEffect = mPlayerCommonPawn + "0x50e8,"; // UParticleSystemComponent*
                public const string mRedNapalmGunSkillMoveSparkEffect = mPlayerCommonPawn + "0x50f0,"; // UParticleSystemComponent*
                public const string mDeathEvaluation = mPlayerCommonPawn + "0x50f8,"; // FBrgDeathStatisticsParam
                public const string mDeathReportData = mPlayerCommonPawn + "0x513c,"; // FBrgDeathReportData
                public const string mChangeMtlInst = mPlayerCommonPawn + "0x53bc,"; // UMaterialInstanceConstant*
                public const string mChangeMtlIndex = mPlayerCommonPawn + "0x53c4"; // int32_t
                public const string mZombieSkinStr = mPlayerCommonPawn + "0x53c8,"; // FString
                public const string mOriginSkinIndex = mPlayerCommonPawn + "0x53d8"; // int32_t
                public const string mCutSurfaceIndex = mPlayerCommonPawn + "0x53dc"; // int32_t
                public const string mCustomBodyParamManager = mPlayerCommonPawn + "0x53e0,"; // UBrgCharaCustomBodyParamManager*
                public const string mTensionLevel = mPlayerCommonPawn + "0x53e8"; // int32_t
                public const string mTensionLevelMax = mPlayerCommonPawn + "0x53ec"; // int32_t
                public const string mTensionAutoDownCnt = mPlayerCommonPawn + "0x53f0"; // float
                public const string mInWaterTensionCnt = mPlayerCommonPawn + "0x53f4"; // float
                public const string mFireKeepDamageTensionCnt = mPlayerCommonPawn + "0x53f8"; // float
                public const string mArcheryChargeAttackMinRate = mPlayerCommonPawn + "0x53fc"; // float
                public const string mArcherySkillMoveTime = mPlayerCommonPawn + "0x5400"; // float
                public const string mBikeChargeAttackMinRate = mPlayerCommonPawn + "0x5404"; // float
                public const string mBikeChargeTime = mPlayerCommonPawn + "0x5408"; // float
                public const string mShieldDefStaminaRate = mPlayerCommonPawn + "0x540c"; // float
                public const string mShovelPowerUpSec = mPlayerCommonPawn + "0x5410"; // float
                public const string mShovelPowerUpScale = mPlayerCommonPawn + "0x5414"; // float
                public const string mShovelChargeTime = mPlayerCommonPawn + "0x5418"; // float
                public const string mShovelChargeRate = mPlayerCommonPawn + "0x541c"; // float
                public const string mPitchingMachinePowerUpSec = mPlayerCommonPawn + "0x5420"; // float
                public const string mBeamYoyoSkillMoveSec = mPlayerCommonPawn + "0x5424"; // float
                public const string mMorningStarChargeSec = mPlayerCommonPawn + "0x5428"; // float
                public const string mMorningStarOverdriveRate = mPlayerCommonPawn + "0x542c"; // float
                public const string mPeckerLChargeRate = mPlayerCommonPawn + "0x5430"; // float
                public const string mPeckerRChargeRate = mPlayerCommonPawn + "0x5434"; // float
                public const string mPeckerLChargeTime = mPlayerCommonPawn + "0x5438"; // float
                public const string mPeckerRChargeTime = mPlayerCommonPawn + "0x543c"; // float
                public const string mStunRodElectTimeChargeRate = mPlayerCommonPawn + "0x5440"; // float
                public const string mFireBatonFlameLevelR = mPlayerCommonPawn + "0x5444"; // int32_t
                public const string mFireBatonFlameLevelL = mPlayerCommonPawn + "0x5448"; // int32_t
                public const string mFireBatonFlameTimeR = mPlayerCommonPawn + "0x544c"; // float
                public const string mFireBatonFlameTimeL = mPlayerCommonPawn + "0x5450"; // float
                public const string mBoxingGloveChanceTime = mPlayerCommonPawn + "0x5454"; // float
                public const string mBoxingGloveChanceCnt = mPlayerCommonPawn + "0x5458"; // int32_t
                public const string mBoxingGloveChanceKillEnemy = mPlayerCommonPawn + "0x545c"; // int32_t
                public const string mThrowingKnifeChargeTimeL = mPlayerCommonPawn + "0x5460"; // float
                public const string mThrowingKnifeChargeTimeR = mPlayerCommonPawn + "0x5464"; // float
                public const string mTaserGunChargeTime = mPlayerCommonPawn + "0x5468"; // float
                public const string mTaserGunChargeTimeL = mPlayerCommonPawn + "0x546c"; // float
                public const string mTaserGunChargeTimeR = mPlayerCommonPawn + "0x5470"; // float
                public const string mElectricCaptureProjectile = mPlayerCommonPawn + "0x5474,"; // ABrgProjectile_TaserSp*
                public const string mElectricCaptureTarget = mPlayerCommonPawn + "0x547c,"; // ABrgPawn_Base*
                public const string mElectricCaptureTargetCommonPawn = mPlayerCommonPawn + "0x5484,"; // ABrgCommonPawn_CustomChara*
                public const string mRedNapalmGunRoulette = mPlayerCommonPawn + "0x548c"; // float
                public const string mRedNapalmGunRouletteSize = mPlayerCommonPawn + "0x5490"; // int32_t
                public const string mRedNapalmGunBulletType = mPlayerCommonPawn + "0x5494"; // int32_t
                public const string mRedNapalmGunFiredBullet = mPlayerCommonPawn + "0x5498"; // int32_t
                public const string mBlackThunderProjectile0xa = mPlayerCommonPawn + "0x549c,"; // FBrgBlackThunderProjectileData
                public const string mBlackThunderLocation = mPlayerCommonPawn + "0x553c,"; // FVector
                public const string mBlackThunderCenterLightning = mPlayerCommonPawn + "0x5548"; // int32_t
                public const string mProjectileMedusaL = mPlayerCommonPawn + "0x554c,"; // ABrgProjectile_BlackThunderMedusa*
                public const string mProjectileMedusaR = mPlayerCommonPawn + "0x5554,"; // ABrgProjectile_BlackThunderMedusa*
                public const string mBlackThunderMedusaSkillMoveDecal = mPlayerCommonPawn + "0x555c,"; // ABrgDecalActorMovable*
                public const string mBlackThunderMedusaSkillMoveDecalMaterial = mPlayerCommonPawn + "0x5564,"; // UMaterialInstanceConstant*
                public const string mBlackThunderMedusaSkillMoveLocation = mPlayerCommonPawn + "0x556c,"; // FVector
                public const string mBlackThunderMedusaSkillMoveFadeTime = mPlayerCommonPawn + "0x5578"; // float
                public const string mMedusaDrainAttackInfo = mPlayerCommonPawn + "0x557c,"; // FBrgAttackInfo
                public const string mBlackThunderMedusaDrainInterval = mPlayerCommonPawn + "0x55ac"; // float
                public const string mBlackThunderMedusaDrainValue = mPlayerCommonPawn + "0x55b0"; // float
                public const string mBlackThunderWaveAttackTime = mPlayerCommonPawn + "0x55b4"; // float
                public const string mBlackThunderWaveAttackRadius = mPlayerCommonPawn + "0x55b8"; // float
                public const string mBlackThunderWaveAttackLocation = mPlayerCommonPawn + "0x55bc,"; // FVector
                public const string mCheckAtkExtend_EmptyHands = mPlayerCommonPawn + "0x55c8"; // float
                public const string mEnableCaptureHealth = mPlayerCommonPawn + "0x55cc"; // float
                public const string mWeaponDurabilityDownRate = mPlayerCommonPawn + "0x55d0"; // float
                public const string mDrillMaintenanceRate = mPlayerCommonPawn + "0x55d4"; // float
                public const string mYoyoMaintenanceRate = mPlayerCommonPawn + "0x55d8"; // float
                public const string mThrowingKnifeChargeTimeMin = mPlayerCommonPawn + "0x55dc"; // float
                public const string mThrowingKnifeChargeTimeMax = mPlayerCommonPawn + "0x55e0"; // float
                public const string mArcheryStealthAtkRate = mPlayerCommonPawn + "0x55e4"; // float
                public const string mArcheryDistAtkRate = mPlayerCommonPawn + "0x55e8"; // float
                public const string mArcheryAtkUpDistMin = mPlayerCommonPawn + "0x55ec"; // float
                public const string mArcheryAtkUpDistMax = mPlayerCommonPawn + "0x55f0"; // float
                public const string mSquareTimberIgnitionAddAttrFire = mPlayerCommonPawn + "0x55f4"; // int32_t
                public const string mSquareTimberIgnitionRate = mPlayerCommonPawn + "0x55f8"; // int32_t
                public const string mSquareTimberIgnitionAdjustRate = mPlayerCommonPawn + "0x55fc"; // int32_t
                public const string mShishimaiDrainRate = mPlayerCommonPawn + "0x5600"; // float
                public const string mShishimaiDrainRateMax = mPlayerCommonPawn + "0x5604"; // float
                public const string mWeaponDrainRate = mPlayerCommonPawn + "0x5608"; // float
                public const string mWeaponDrainRateMax = mPlayerCommonPawn + "0x560c"; // float
                public const string mTaserGunChargeAtkUpRate = mPlayerCommonPawn + "0x5610"; // float
                public const string mBlackThunderSwordSkillMoveInterval = mPlayerCommonPawn + "0x5614"; // float
                public const string mBlackThunderSwordSkillMoveRange = mPlayerCommonPawn + "0x5618"; // float
                public const string mBlackThunderMedusaSkillMoveInterval = mPlayerCommonPawn + "0x561c"; // float
                public const string mBlackThunderMedusaSkillMoveRange = mPlayerCommonPawn + "0x5620"; // float
                public const string mBlackThunderMedusaSkillMoveHpRate = mPlayerCommonPawn + "0x5624"; // float
                public const string mBlackThunderMedusaSkillMoveDrainRate = mPlayerCommonPawn + "0x5628"; // float
                public const string mBlackThunderAdjustDurabilityDown = mPlayerCommonPawn + "0x562c"; // float
                public const string mPaleWindAdjustArmorDurabilityDown = mPlayerCommonPawn + "0x5630"; // float
                public const string mPaleWindAdjustWeaponDurabilityDown = mPlayerCommonPawn + "0x5634"; // float
                public const string mPaleWindBobsledMasterLvlAtkUpRate = mPlayerCommonPawn + "0x5638"; // float
                public const string mBodySkillStickerObject = mPlayerCommonPawn + "0x563c,"; // UBrgBodySkillStickerObject*
                public const string __CallBackSlowMotionEnd__Delegate = mPlayerCommonPawn + "0x5644,"; // DelegateProperty
            }
        }
    }

    internal class LetItDie
    {
        private bool bAttached = false;
        private string procName = "BrgGame-Steam";
        public static MemorySharp.Memory mem = new MemorySharp.Memory();

        public LetItDie() 
        { 
            bAttached = mem.Attach(procName, MemorySharp.Memory.ProcessAccessFlags.All); 
        }

        public void Update()
        {
            if (Process.GetProcessesByName(procName).Length <= 0 && bAttached)
            {
                bAttached = false;
                mem.Detach();
            }
        }

        struct offsets
        {
            public const int oGWorld = 0x022B9D40;
            public const int oGUBrgUIManager = 0x0F242EE0;
        }

        public struct TArray
        {
            IntPtr m_data;
            Int32 m_count;
            Int32 m_max;

            public Int32 Count() { return m_count; }
            public Int32 Max() { return m_max; }
            public IntPtr Data() { return m_data; }
        }

        public struct FVector
        {
            public float x, y, z;
        }

        public struct FRotator
        {
            public float Pitch, Yaw, Roll;
        }


        [StructLayout(LayoutKind.Explicit, Pack = 1)]
        struct AActor
        {
            [FieldOffset(0x80)]
            public FVector location;


            [FieldOffset(0x8C)]
            public FRotator rotation;
        }

        [StructLayout(LayoutKind.Explicit, Pack = 1)]
        struct APawn
        {
            [FieldOffset(0x02A0)]
            IntPtr Controller;  //0x02A0    //  AController*

            [FieldOffset(0x04A8)]
            IntPtr Mesh;	//0x04A8    //  USkeletalMeshComponent* 
        }

        [StructLayout(LayoutKind.Explicit, Pack = 1)]
        struct ABrgCommonPawn_CustomCharaNative
        {
            //  [FieldOffset(0x0590)]
            //  FBrgLocalItemInfo[] mEquipPartInfo[8];    //0x0590

            //  [FieldOffset(0x02A0)]
            //  TArray mDeathBag;   //0x3E58

            [FieldOffset(0x43E8)]
            IntPtr mArmWeaponL;   //0x43E8    //  ABrgWeapon_Base*

            [FieldOffset(0x43F0)]
            IntPtr mArmWeaponR;   //0x43F0    //  ABrgWeapon_Base*

            //  [FieldOffset(0x43F8)]
            //  FBrgCharaStatisticsData N00002799;  //0x43F8

            [FieldOffset(0x4C44)]
            float mWeaponLAtkScale; //0x4C44

            [FieldOffset(0x4C48)]
            float mWeaponRAtkScale;	//0x4C48

        }

        struct ABrgCommonPawn_CustomChara 
        {

        }

        [StructLayout(LayoutKind.Explicit, Pack = 1)]
        struct UBrgUIManagerBase
        {
            [FieldOffset(0x009C)]
            IntPtr mGameInfoNativeBase;	//0x009C    //  ABrgGameInfoNativeBase*

        }

        [StructLayout(LayoutKind.Explicit, Pack = 1)]
        struct UBrgUIManager
        {
            [FieldOffset(0x27EC)]
            public IntPtr mGameInfoNative;    //0x27EC //  ABrgGameInfoNative*

            [FieldOffset(0x009C)]
            public IntPtr mCamera;    //0x280C //  ABrgCamera*

            [FieldOffset(0x2850)]
            public IntPtr mDropItemManager;  //0x2850    //  UBrgDropItemManager*

            [FieldOffset(0x2D1C)]
            public IntPtr mPawnPlayerBase;   //0x2D1C    //  ABrgPawn_PlayerBase*

            [FieldOffset(0x2D34)]
            public IntPtr mPlayerCommonPawn;	//0x2D34    //  ABrgCommonPawn_CustomChara*
        }

        public IntPtr GetUIManager() { return mem.Read<IntPtr>(mem.dwBase + offsets.oGUBrgUIManager); }

        public IntPtr GetGameInfo()
        {
            var pUIMan = GetUIManager();
            if (pUIMan == IntPtr.Zero)
                return IntPtr.Zero;

            return mem.Read<IntPtr>(pUIMan + 0x27EC);  //  mGameInfoNative
        }

        public IntPtr GetLocalPawn()
        {
            var pUIMan = GetUIManager();
            if (pUIMan == IntPtr.Zero)
                return IntPtr.Zero;

            var pUIMan2 = mem.Read<UBrgUIManager>(pUIMan);
            return pUIMan2.mPlayerCommonPawn;
        }

        public bool GetLocalPawnDeathbag(out IntPtr[] items)
        {
            items = null;

            var pLocalPawn = GetLocalPawn();
            if (pLocalPawn == IntPtr.Zero)
                return false;

            TArray m = mem.Read<TArray>(pLocalPawn + 0x3E58);
            Int32 count = m.Count();
            IntPtr data = m.Data();
            if (count <= 0)
                return false;

            IntPtr[] result = new IntPtr[count];
            for (int i = 0; i < m.Count(); i++)
            {
                var addr = data + (0x718 * i);
                result[i] = addr;
            }

            items = result;

            return result.Length > 0;
        }
        
        public bool GetPawnArray(out IntPtr[] pawns)
        {
            pawns = null;

            var pGameInfo = GetGameInfo();
            if (pGameInfo == IntPtr.Zero)
                return false;

            TArray m = mem.Read<TArray>(pGameInfo + 0x8B0);
            Int32 count = m.Count();
            IntPtr data = m.Data();
            if (count <= 0)
                return false;

            IntPtr[] result = new IntPtr[count];
            for (int i = 0; i < m.Count(); i++)
            {
                var addr = mem.Read<IntPtr>(data + (0x8 * i));
                result[i] = addr;
            }

            pawns = result;

            return result.Length > 0;
        }

        public bool GetOtherActorArray(out IntPtr[] actors)
        {
            actors = null;

            var pGameInfo = GetGameInfo();
            if (pGameInfo == IntPtr.Zero)
                return false;

            TArray m = mem.Read<TArray>(pGameInfo + 0x968);
            Int32 count = m.Count();
            IntPtr data = m.Data();

            IntPtr[] result = new IntPtr[count];
            for ( int i = 0; i < m.Count(); i++)
            {
                var addr = mem.Read<IntPtr>(data + (0x8 * i));
                result[i] = addr;
            }

            actors = result;

            return actors.Length > 0;
        }

        public FVector GetActorLocation(IntPtr pActor) { return mem.Read<FVector>(pActor + 0x80); }
        public FRotator GetActorRotation(IntPtr pActor) { return mem.Read<FRotator>(pActor + 0x8C); }
        public void SetActorLocation(IntPtr pActor, FVector pos) { mem.Write<FVector>(pActor + 0x80, pos); }
        public void SetActorRotation(IntPtr pActor, FRotator rot) { mem.Write<FRotator>(pActor + 0x8C, rot); }

    }
}
